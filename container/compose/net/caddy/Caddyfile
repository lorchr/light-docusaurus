
# Caddy配置
caddy.light.local {
    encode zstd gzip

    tls /etc/x509/https/light.local.crt /etc/x509/https/light.local.key

    # 反代minio的9001端口
    reverse_proxy /minio/* minio.web:9001 {
        header_up   X-Forwarded-Proto           {http.request.scheme}
        header_up   X-Forwarded-Host            {http.request.host}
        header_up   Host                        {http.request.host}
        header_down Access-Control-Allow-Origin "*"
    }

    # 反代keycloak的8080端口
    reverse_proxy /keycloak/* keycloak.web:8080 {
        header_up   X-Forwarded-Proto           {http.request.scheme}
        header_up   X-Forwarded-Host            {http.request.host}
        header_up   Host                        {http.request.host}
        header_down Access-Control-Allow-Origin "*"
    }

    # 反代outline的3000端口
    reverse_proxy /outline/* outline.web:3000 {
        header_up   X-Forwarded-Proto           {http.request.scheme}
        header_up   X-Forwarded-Host            {http.request.host}
        header_up   Host                        {http.request.host}
        header_down Access-Control-Allow-Origin "*"
    }

}

# Bind DNS配置
bind.light.local {
    encode zstd gzip

    tls /etc/x509/https/light.local.crt /etc/x509/https/light.local.key

    # 反代minio的9001端口
    reverse_proxy https://bind.web:10000 {
        header_up   X-Forwarded-Proto           {http.request.scheme}
        header_up   X-Forwarded-Host            {http.request.host}
        header_up   Host                        {http.request.host}
        header_down Access-Control-Allow-Origin "*"
    }
}

# Minio配置
minio.light.local {
    encode zstd gzip

    tls /etc/x509/https/light.local.crt /etc/x509/https/light.local.key

    # 反代minio的9001端口
    reverse_proxy minio.web:9001 {
        header_up   X-Forwarded-Proto           {http.request.scheme}
        header_up   X-Forwarded-Host            {http.request.host}
        header_up   Host                        {http.request.host}
        header_down Access-Control-Allow-Origin "*"
    }
}

# Keycloak配置
keycloak.light.local {
    encode zstd gzip

    tls /etc/x509/https/keycloak.light.local.crt /etc/x509/https/keycloak.light.local.key

    # 反代keycloak的8080端口
    reverse_proxy keycloak.web:8080 {
        header_up   X-Forwarded-Proto           {http.request.scheme}
        header_up   X-Forwarded-Host            {http.request.host}
        header_up   Host                        {http.request.host}
        header_down Access-Control-Allow-Origin "*"
    }
}

# Gitlab配置
gitlab.light.local {
    encode zstd gzip

    tls /etc/x509/https/light.local.crt /etc/x509/https/light.local.key

    log gitlab.access.log 
    # errors gitlab.errors.log {
    #     404 /opt/gitlab/embedded/service/gitlab-rails/public/404.html
    #     422 /opt/gitlab/embedded/service/gitlab-rails/public/422.html
    #     500 /opt/gitlab/embedded/service/gitlab-rails/public/500.html
    #     502 /opt/gitlab/embedded/service/gitlab-rails/public/502.html
    # }

    # 反代Gitlab的80 443端口
    # reverse_proxy https://gitlab.web:443 {
    #     header_up   X-Forwarded-Proto           {http.request.scheme}
    #     header_up   X-Forwarded-Host            {http.request.host}
    #     header_up   Host                        {http.request.host}
    #     header_down Access-Control-Allow-Origin "*"
    # }

    reverse_proxy http://gitlab.web:8181 {
        header_up   X-Forwarded-Proto           {http.request.scheme}
        header_up   X-Forwarded-Host            {http.request.host}
        header_up   Host                        {http.request.host}
        header_down Access-Control-Allow-Origin "*"

        # fail_timeout 300s
        # transparent
        # header_upstream X-Forwarded-Ssl on
    }
}

# Outline配置
outline.light.local {
    encode zstd gzip

    tls /etc/x509/https/light.local.crt /etc/x509/https/light.local.key

    header / {
        X-Content-Type-Options              nosniff
        X-Frame-Options                     "SAMEORIGIN"
        X-XSS-Protection                    "1; mode=block"
        X-Robots-Tag                        none
        X-Download-Options                  noopen
        X-Permitted-Cross-Domain-Policies   none
        Strict-Transport-Security           "max-age=31536000; includeSubDomains; preload"
        -Server
    }

    # 反代outline的3000端口
    reverse_proxy outline.web:3000 {
        header_up X-Real-IP {remote_host}
    }

}

