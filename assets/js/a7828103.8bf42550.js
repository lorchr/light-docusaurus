"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[29763],{28453:(n,e,r)=>{r.d(e,{R:()=>i,x:()=>o});var a=r(96540);const s={},t=a.createContext(s);function i(n){const e=a.useContext(t);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),a.createElement(t.Provider,{value:e},n.children)}},95357:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"shardingsphere/Shardingsphere-Jdbc-ReadWrite-Split","title":"Shardingsphere-Jdbc-ReadWrite-Split","description":"- ShardingSphere\u7b2c10\u7bc7\uff1a\u8bfb\u5199\u5206\u79bb+\u5206\u7247","source":"@site/middleware/shardingsphere/2-Shardingsphere-Jdbc-ReadWrite-Split.md","sourceDirName":"shardingsphere","slug":"/shardingsphere/Shardingsphere-Jdbc-ReadWrite-Split","permalink":"/middleware/shardingsphere/Shardingsphere-Jdbc-ReadWrite-Split","draft":false,"unlisted":false,"editUrl":"https://github.com/lorchr/light-docusaurus/tree/main/middleware/shardingsphere/2-Shardingsphere-Jdbc-ReadWrite-Split.md","tags":[],"version":"current","lastUpdatedBy":"Lorchr","lastUpdatedAt":1749279355000,"sidebarPosition":2,"frontMatter":{},"sidebar":"middleware","previous":{"title":"ShardingSphere-Separate-Database-And-Table","permalink":"/middleware/shardingsphere/ShardingSphere-Separate-Database-And-Table"},"next":{"title":"Shardingsphere-Proxy-Install","permalink":"/middleware/shardingsphere/Shardingsphere-Proxy-Install"}}');var s=r(74848),t=r(28453);const i={},o=void 0,d={},c=[{value:"5.2.1 \u4e4b\u524d",id:"521-\u4e4b\u524d",level:2},{value:"1. pom.xml",id:"1-pomxml",level:3},{value:"2. application.yml",id:"2-applicationyml",level:3},{value:"3. application-sharding.yml",id:"3-application-shardingyml",level:3},{value:"4. \u914d\u7f6e\u7c7b",id:"4-\u914d\u7f6e\u7c7b",level:3},{value:"5.3.0 \u4ee5\u540e",id:"530-\u4ee5\u540e",level:2},{value:"1. pom.xml",id:"1-pomxml-1",level:3},{value:"2. application.yml",id:"2-applicationyml-1",level:3},{value:"3. sharding-config.yml",id:"3-sharding-configyml",level:3},{value:"\u591a\u79df\u6237\u7248\u672c \u4f7f\u7528 shardingsphere-jdbc 5.4.1",id:"\u591a\u79df\u6237\u7248\u672c-\u4f7f\u7528-shardingsphere-jdbc-541",level:2},{value:"1. sharding-config.yml",id:"1-sharding-configyml",level:3},{value:"2. \u81ea\u5b9a\u4e49\u5206\u7247\u7b97\u6cd5",id:"2-\u81ea\u5b9a\u4e49\u5206\u7247\u7b97\u6cd5",level:3},{value:"3. \u5751\u70b9\uff01\uff01\uff01",id:"3-\u5751\u70b9",level:3},{value:"1. \u6570\u636e\u6e90\u914d\u7f6e",id:"1-\u6570\u636e\u6e90\u914d\u7f6e",level:4},{value:"2. \u8bfb\u5199\u5206\u79bb\u548c\u6570\u636e\u5206\u7247 (\u5206\u5e93\u5206\u8868)\u4e00\u8d77\u4f7f\u7528\u65f6\u6570\u636e\u6e90\u7684\u914d\u7f6e\u95ee\u9898",id:"2-\u8bfb\u5199\u5206\u79bb\u548c\u6570\u636e\u5206\u7247-\u5206\u5e93\u5206\u8868\u4e00\u8d77\u4f7f\u7528\u65f6\u6570\u636e\u6e90\u7684\u914d\u7f6e\u95ee\u9898",level:4},{value:"3. \u6570\u636e\u5206\u7247\u6570\u636e\u8868\u914d\u7f6e",id:"3-\u6570\u636e\u5206\u7247\u6570\u636e\u8868\u914d\u7f6e",level:4},{value:"4. \u81ea\u5b9a\u4e49HINT\u5206\u7247\u7b97\u6cd5",id:"4-\u81ea\u5b9a\u4e49hint\u5206\u7247\u7b97\u6cd5",level:4}];function p(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"http://www.itsoku.com/article/414",children:"ShardingSphere\u7b2c10\u7bc7\uff1a\u8bfb\u5199\u5206\u79bb+\u5206\u7247"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://community.sphere-ex.com/",children:"\u4e2d\u6587\u793e\u533a"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8bfb\u5199\u5206\u79bb\u662f\u4e00\u79cd\u6570\u636e\u5e93\u90e8\u7f72\u67b6\u6784\uff0c\u5c06\u6570\u636e\u5e93\u62c6\u5206\u4e3a\u8bfb\u5e93\u548c\u5199\u5e93\uff0c\u5199\u5e93\u8d1f\u8d23\u5904\u7406\u4e8b\u52a1\u6027\u7684\u589e\u5220\u6539\u64cd\u4f5c\uff0c\u8bfb\u5e93\u8d1f\u8d23\u5904\u7406\u67e5\u8be2\u64cd\u4f5c\uff0c\u9002\u7528\u4e8e\u67e5\u8be2\u591a\uff0c\u5199\u5165\u5c11\u7684\u5e94\u7528\u7cfb\u7edf\u3002\u8bfb\u5199\u5206\u79bb\u5c06\u67e5\u8be2\u8bf7\u6c42\u5747\u5300\u7684\u5206\u6563\u5230\u591a\u4e2a\u4ece\u5e93\u4e2d\uff0c\u53ef\u4ee5\u63d0\u5347\u6570\u636e\u5e93\u7684\u541e\u5410\u91cf\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u7528\u6027\uff0c\u5f53\u5b95\u673a\u4e00\u53f0\u6570\u636e\u5e93\u4e0d\u5f71\u54cd\u7cfb\u7edf\u7684\u6b63\u5e38\u8fd0\u884c\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u8bfb\u5199\u5206\u79bb\u7684\u5b9e\u73b0\u57fa\u4e8e\u6570\u636e\u7684\u7684\u4e3b\u4ece\u90e8\u7f72\u67b6\u6784\uff0c\u4e00\u4e3b\u591a\u4ece\u8bfb\u5199\u5206\u79bb\u90e8\u7f72\u793a\u4f8b\uff1a"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"\u7279\u6027"}),(0,s.jsx)(e.th,{children:"\u5b9a\u4e49"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"\u5206\u5e03\u5f0f\u4e8b\u52a1"}),(0,s.jsx)(e.td,{children:"\u4e8b\u52a1\u80fd\u529b\uff0c\u662f\u4fdd\u969c\u6570\u636e\u5e93\u5b8c\u6574\u3001\u5b89\u5168\u7684\u5173\u952e\u6280\u672f\uff0c\u4e5f\u662f\u6570\u636e\u5e93\u7684\u6838\u5fc3\u6280\u672f\u4e4b\u4e00\u3002ShardingSphere \u63d0\u4f9b\u5728\u5355\u673a\u6570\u636e\u5e93\u4e4b\u4e0a\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u80fd\u529b\uff0c\u53ef\u5b9e\u73b0\u8de8\u5e95\u5c42\u6570\u636e\u6e90\u7684\u6570\u636e\u5b89\u5168\u3002"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"\u6570\u636e\u5206\u7247"}),(0,s.jsx)(e.td,{children:"\u6570\u636e\u5206\u7247\uff0c\u662f\u5e94\u5bf9\u6d77\u91cf\u6570\u636e\u5b58\u50a8\u4e0e\u8ba1\u7b97\u7684\u6709\u6548\u624b\u6bb5\u3002ShardingSphere \u63d0\u4f9b\u57fa\u4e8e\u5e95\u5c42\u6570\u636e\u5e93\u4e4b\u4e0a\uff0c\u53ef\u8ba1\u7b97\u4e0e\u5b58\u50a8\u6c34\u5e73\u6269\u5c55\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u89e3\u51b3\u65b9\u6848\u3002"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"\u8bfb\u5199\u5206\u79bb"}),(0,s.jsx)(e.td,{children:"\u8bfb\u5199\u5206\u79bb\uff0c\u662f\u5e94\u5bf9\u9ad8\u538b\u529b\u4e1a\u52a1\u8bbf\u95ee\u7684\u624b\u6bb5\u4e4b\u4e00\u3002ShardingSphere \u57fa\u4e8e\u5bf9SQL\u8bed\u4e49\u7406\u89e3\u53ca\u5e95\u5c42\u6570\u636e\u5e93\u62d3\u6251\u611f\u77e5\u80fd\u529b\uff0c\u63d0\u4f9b\u7075\u6d3b\u3001\u5b89\u5168\u7684\u8bfb\u5199\u5206\u79bb\u80fd\u529b\uff0c\u4e14\u53ef\u5b9e\u73b0\u8bfb\u8bbf\u95ee\u7684\u8d1f\u8f7d\u5747\u8861\u3002"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"\u9ad8\u53ef\u7528"}),(0,s.jsx)(e.td,{children:"\u9ad8\u53ef\u7528\uff0c\u662f\u5bf9\u6570\u636e\u5b58\u50a8\u8ba1\u7b97\u5e73\u53f0\u7684\u57fa\u672c\u8981\u6c42\u3002ShardingSphere \u57fa\u4e8e\u65e0\u72b6\u6001\u670d\u52a1\uff0c\u63d0\u4f9b\u9ad8\u53ef\u7528\u8ba1\u7b97\u670d\u52a1\u8bbf\u95ee\uff1b\u540c\u65f6\u53ef\u611f\u77e5\u5e76\u5229\u7528\u5e95\u5c42\u6570\u636e\u5e93\u81ea\u8eab\u9ad8\u53ef\u7528\u5b9e\u73b0\u6574\u4f53\u7684\u9ad8\u53ef\u7528\u80fd\u529b\u3002"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"\u6570\u636e\u52a0\u5bc6"}),(0,s.jsx)(e.td,{children:"\u6570\u636e\u52a0\u5bc6\uff0c\u662f\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\u7684\u57fa\u672c\u624b\u6bb5\u3002ShardingSphere \u63d0\u4f9b\u4e00\u5957\u5b8c\u6574\u7684\u3001\u900f\u660e\u5316\u3001\u5b89\u5168\u7684\u3001\u4f4e\u6539\u9020\u6210\u672c\u7684\u6570\u636e\u52a0\u5bc6\u89e3\u51b3\u65b9\u6848\u3002"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"\u5f71\u5b50\u5e93"}),(0,s.jsx)(e.td,{children:"\u5728\u5168\u94fe\u8def\u538b\u6d4b\u573a\u666f\u4e0b\uff0cShardingSphere \u901a\u8fc7\u5f71\u5b50\u5e93\u529f\u80fd\u652f\u6301\u5728\u590d\u6742\u538b\u6d4b\u573a\u666f\u4e0b\u6570\u636e\u9694\u79bb\uff0c\u538b\u6d4b\u83b7\u5f97\u6d4b\u8bd5\u7ed3\u679c\u53ef\u51c6\u786e\u53cd\u5e94\u7cfb\u7edf\u771f\u5b9e\u5bb9\u91cf\u548c\u6027\u80fd\u6c34\u5e73\u3002"})]})]})]}),"\n",(0,s.jsx)(e.h2,{id:"521-\u4e4b\u524d",children:"5.2.1 \u4e4b\u524d"}),"\n",(0,s.jsx)(e.p,{children:"5.2.1 \u662f\u6700\u540e\u4e00\u4e2a\u63d0\u4f9b spring-boot-starter \u7684\u7248\u672c"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.cnblogs.com/zlnp/p/16666428.html",children:"https://www.cnblogs.com/zlnp/p/16666428.html"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://blog.csdn.net/chen_pan_/article/details/134331050",children:"https://blog.csdn.net/chen_pan_/article/details/134331050"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://shardingsphere.apache.org/document/5.2.1/cn/user-manual/shardingsphere-jdbc/spring-boot-starter/",children:"https://shardingsphere.apache.org/document/5.2.1/cn/user-manual/shardingsphere-jdbc/spring-boot-starter/"})}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"1-pomxml",children:"1. pom.xml"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.pisx</groupId>\n    <artifactId>mes</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>mes_technical_verification</name>\n    <description>mes_technical_verification</description>\n    \n    <properties>\n        <java.version>17</java.version>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <spring-boot.version>2.6.15</spring-boot.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>com.baomidou</groupId>\n            <artifactId>mybatis-plus-boot-starter</artifactId>\n            <version>3.5.4.1</version>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>druid-spring-boot-starter</artifactId>\n            <version>1.2.20</version>\n        </dependency>\n        \x3c!-- shardingsphere start--\x3e\n        \x3c!-- https://mvnrepository.com/artifact/org.apache.shardingsphere/shardingsphere-jdbc-core-spring-boot-starter --\x3e\n        <dependency>\n            <groupId>org.apache.shardingsphere</groupId>\n            <artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId>\n            <version>5.2.1</version>\n        </dependency>\n        <dependency>\n            <groupId>org.yaml</groupId>\n            <artifactId>snakeyaml</artifactId>\n            <version>1.33</version>\n        </dependency>\n        <dependency>\n            <groupId>org.glassfish.jaxb</groupId>\n            <artifactId>jaxb-runtime</artifactId>\n            <version>2.3.8</version>\n        </dependency>\n        <dependency>\n            <groupId>com.zaxxer</groupId>\n            <artifactId>HikariCP</artifactId>\n        </dependency>\n        \x3c!-- shardingsphere end--\x3e\n        <dependency>\n            <groupId>cn.hutool</groupId>\n            <artifactId>hutool-all</artifactId>\n            <version>5.8.24</version>\n        </dependency>\n        <dependency>\n            <groupId>com.github.xiaoymin</groupId>\n            <artifactId>knife4j-openapi2-spring-boot-starter</artifactId>\n            <version>4.3.0</version>\n        </dependency>\n        <dependency>\n            <groupId>org.postgresql</groupId>\n            <artifactId>postgresql</artifactId>\n            <version>42.7.0</version>\n        </dependency>\n        <dependency>\n            <groupId>com.oracle.database.jdbc</groupId>\n            <artifactId>ojdbc8</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.oracle.database.nls</groupId>\n            <artifactId>orai18n</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.microsoft.sqlserver</groupId>\n            <artifactId>mssql-jdbc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mariadb.jdbc</groupId>\n            <artifactId>mariadb-java-client</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.github.gavlyukovskiy</groupId>\n            <artifactId>p6spy-spring-boot-starter</artifactId>\n            <version>1.8.1</version>\n        </dependency>\n        <dependency>\n            <groupId>org.reflections</groupId>\n            <artifactId>reflections</artifactId>\n            <version>0.10.2</version>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>QLExpress</artifactId>\n            <version>3.3.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-aop</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.2.83</version>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-dependencies</artifactId>\n                <version>${spring-boot.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <configuration>\n                    <source>17</source>\n                    <target>17</target>\n                    <encoding>UTF-8</encoding>\n                    <compilerArgs>\n                        \x3c!-- \u7f16\u8bd1\u662f\u542f\u7528\u53c2\u6570\u914d\u7f6e\uff0c\u5426\u5219aop\u65e0\u6cd5\u83b7\u53d6\u53c2\u6570\u540d\u79f0 --\x3e\n                        <arg>-parameters</arg>\n                    </compilerArgs>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <version>${spring-boot.version}</version>\n                <configuration>\n                    <mainClass>com.pisx.mes.MesTechnicalVerificationApplication</mainClass>\n                    <skip>true</skip>\n                    <image>\n                        <name>example.com/library/${project.artifactId}</name>\n                        \x3c!-- \u662f\u5426\u63a8\u9001 --\x3e\n                        <publish>false</publish>\n                    </image>\n                    <docker>\n                        \x3c!-- \u8c03\u7528\u8fdc\u7a0b docker \u8fdb\u884c\u6253\u5305\u90e8\u7f72 --\x3e\n                        <host>tcp://192.168.99.100:2376</host>\n                        <tlsVerify>false</tlsVerify>\n                        <certPath>/home/user/.minikube/certs</certPath>\n                        <publishRegistry>\n                            <username>user</username>\n                            <password>secret</password>\n                        </publishRegistry>\n                    </docker>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>repackage</id>\n                        <goals>\n                            <goal>repackage</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <repositories>\n        <repository>\n            <id>public</id>\n            <url>https://maven.aliyun.com/repository/public</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n        <repository>\n            <id>central</id>\n            <url>https://maven.aliyun.com/repository/central</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n\n    <pluginRepositories>\n        <pluginRepository>\n            <id>public</id>\n            <url>https://maven.aliyun.com/repository/public</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </pluginRepository>\n        <pluginRepository>\n            <id>central</id>\n            <url>https://maven.aliyun.com/repository/central</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </pluginRepository>\n    </pluginRepositories>\n\n</project>\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-applicationyml",children:"2. application.yml"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# \u670d\u52a1\u5668\u542f\u52a8\u7aef\u53e3\nserver:\n  port: 8080\n\n# spring \u914d\u7f6e\nspring:\n  # shardingsphere 5.3.0\u4e4b\u540e\u7684\u6570\u636e\u6e90\u914d\u7f6e\n  datasource:\n    url: jdbc:shardingsphere:classpath:sharding-config.yml\n    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver\n\ndecorator:\n  datasource:\n    p6spy:\n      log-format: time\uff1a%(executionTime) ms | sql\uff1a%(sqlSingleLine)\n\n# \u63a5\u53e3\u6587\u6863\u914d\u7f6e\nknife4j:\n  enable: true\n  setting:\n    enable-swagger-models: true\n    swagger-model-name: Models\n\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n"})}),"\n",(0,s.jsx)(e.h3,{id:"3-application-shardingyml",children:"3. application-sharding.yml"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# \u5b98\u65b9\u6700\u540e\u4e00\u4e2a spring-boot-starter \u7248\u672c\u662f5.2.1\uff0c\u540e\u7eed\u7684\u7248\u672c\u4e0d\u518d\u63d0\u4f9b spring-boot-starter\n# https://shardingsphere.apache.org/document/5.2.1/cn/user-manual/shardingsphere-jdbc/spring-boot-starter/\nspring:\n  shardingsphere:\n    mode:\n      type: Standalone\n      repository:\n        type: JDBC\n    props:\n      # \u6253\u5370\u6267\u884csql\n      sql-show: true\n      format: true\n    # \u6570\u636e\u6e90\u914d\u7f6e\n    datasource:\n      names: master_2,slave_2_1,slave_2_2\n      master_2:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: org.postgresql.Driver\n        jdbc-url: jdbc:postgresql://192.168.3.49:5433/mes_technical\n        username: postgres\n        password: postgres\n      slave_2_1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: org.postgresql.Driver\n        jdbc-url: jdbc:postgresql://192.168.3.49:5434/mes_technical\n        username: postgres\n        password: postgres\n      slave_2_2:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: org.postgresql.Driver\n        jdbc-url: jdbc:postgresql://192.168.3.34:5432/mes_technical\n        username: postgres\n        password: postgres\n    rules:\n      # \u8bfb\u5199\u5206\u79bb\u914d\u7f6e\n      readwrite-splitting:\n        data-sources:\n          master2:\n            static-strategy:\n              write-data-source-name: master_2\n              read-data-source-names: slave_2_1,slave_2_2\n            load-balancer-name: round_robin\n        load-balancers:\n          round_robin:\n            type: ROUND_ROBIN\n\n"})}),"\n",(0,s.jsx)(e.h3,{id:"4-\u914d\u7f6e\u7c7b",children:"4. \u914d\u7f6e\u7c7b"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["springboot 2.x \u7684\u7ea6\u5b9a\u914d\u7f6e\u662f META-INF \u4e0b\u9762\u7684\u7684 ",(0,s.jsx)(e.code,{children:"spring.factories"})," \u6587\u4ef6\u4e2d"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["springboot 3.x \u7684\u7ea6\u5b9a\u914d\u7f6e\u662f META-INF \u4e0b\u9762\u7684 spring \u6587\u4ef6\u5939\u4e0b\u7684 ",(0,s.jsx)(e.code,{children:"org.springframework.boot.autoconfigure.AutoConfiguration.imports"})," \u6587\u4ef6\u4e2d"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["5.2.1\u7684\u81ea\u52a8\u88c5\u914d\u903b\u8f91\u662f spring-boot 2.x \u7684 ",(0,s.jsx)(e.code,{children:"META-INF/spring.factories"})," \u914d\u7f6e\uff0c\u5982\u679c\u662f spring-boot 3.x \u9700\u8981\u624b\u52a8\u5f15\u5165\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u5728\u4efb\u610f\u7684\u914d\u7f6e\u7c7b\u6216\u8005\u542f\u52a8\u7c7b\u4e0a\u6dfb\u52a0\n",(0,s.jsx)(e.code,{children:"@Import(value = {ShardingSphereAutoConfiguration.class})"})," \u5373\u53ef"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"import org.apache.shardingsphere.spring.boot.ShardingSphereAutoConfiguration;\n\n@Configuration\n@Import(value = {ShardingSphereAutoConfiguration.class})\npublic void ShardingSphereConfig {\n\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"530-\u4ee5\u540e",children:"5.3.0 \u4ee5\u540e"}),"\n",(0,s.jsx)(e.p,{children:"ShardingSphere\u57285.3.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\uff0c\u8003\u8651\u5230\u7ef4\u62a4\u517c\u5bb9\u6210\u672c\uff0c\u66f4\u52a0\u4e13\u5fc3\u4e8e\u81ea\u8eab\u529f\u80fd\u8fed\u4ee3\uff0c\u79fb\u9664\u4e86Spring Boot Starter\uff0c\u6240\u4ee5\u53ea\u80fd\u5f15\u5165 ShardingSphere-JDBC\u6838\u5fc3\u5305\uff1a"}),"\n",(0,s.jsx)(e.p,{children:"ShardingSphere-JDBC\u57285.3.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e0d\u518d\u63d0\u4f9bSpring Boot Starter\uff0c\u6240\u4ee5\u914d\u7f6e\u65b9\u9762\u6709\u8f83\u5927\u7684\u53d8\u5316\uff0c\u76ee\u524d\u53ea\u652f\u6301Java API\u548cYAML \u8fdb\u884c\u914d\u7f6e\u3002"}),"\n",(0,s.jsx)(e.p,{children:"ShardingSphere \u63d0\u4f9b\u4e86 JDBC \u9a71\u52a8\uff0c\u9996\u5148\u9700\u8981\u5728application.yml\u4e2d\u914d\u7f6eShardingSphereDriver \u3002"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.xdnf.cn/news/1048509.html",children:"https://www.xdnf.cn/news/1048509.html"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://gitee.com/pearl-organization/study-sharding-sphere-demo",children:"https://gitee.com/pearl-organization/study-sharding-sphere-demo"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://zhuanlan.zhihu.com/p/650311232",children:"https://zhuanlan.zhihu.com/p/650311232"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://blog.csdn.net/chenming3030/article/details/125090721",children:"https://blog.csdn.net/chenming3030/article/details/125090721"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://blog.csdn.net/hahe2010/article/details/123856481",children:"https://blog.csdn.net/hahe2010/article/details/123856481"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://zhuanlan.zhihu.com/p/667889974",children:"https://zhuanlan.zhihu.com/p/667889974"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/",children:"https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/single/",children:"https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/single/"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://java.isture.com/dependencies/shardingsphere/sharding-jdbc-x-tenant.html",children:"SpringBoot\u96c6\u6210ShardingJDBC-\u57fa\u4e8eJPA\u7684DB\u9694\u79bb\u591a\u79df\u6237\u65b9\u6848"})}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"1-pomxml-1",children:"1. pom.xml"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.pisx</groupId>\n    <artifactId>mes</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>mes_technical_verification</name>\n    <description>mes_technical_verification</description>\n    <properties>\n        <java.version>17</java.version>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <spring-boot.version>2.6.15</spring-boot.version>\n    </properties>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.taobao.arthas</groupId>\n            <artifactId>arthas-spring-boot-starter</artifactId>\n            <version>3.6.7</version>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>com.baomidou</groupId>\n            <artifactId>mybatis-plus-boot-starter</artifactId>\n            <version>3.5.4.1</version>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>druid-spring-boot-starter</artifactId>\n            <version>1.2.20</version>\n        </dependency>\n        \x3c!-- shardingsphere start--\x3e\n        \x3c!-- https://mvnrepository.com/artifact/org.apache.shardingsphere/shardingsphere-jdbc-core --\x3e\n        <dependency>\n            <groupId>org.apache.shardingsphere</groupId>\n            <artifactId>shardingsphere-jdbc-core</artifactId>\n            <version>5.4.1</version>\n        </dependency>\n        <dependency>\n            <groupId>org.yaml</groupId>\n            <artifactId>snakeyaml</artifactId>\n            <version>1.33</version>\n        </dependency>\n        <dependency>\n            <groupId>org.glassfish.jaxb</groupId>\n            <artifactId>jaxb-runtime</artifactId>\n            <version>2.3.8</version>\n        </dependency>\n        <dependency>\n            <groupId>com.zaxxer</groupId>\n            <artifactId>HikariCP</artifactId>\n        </dependency>\n         \x3c!-- shardingsphere end--\x3e\n        <dependency>\n            <groupId>cn.hutool</groupId>\n            <artifactId>hutool-all</artifactId>\n            <version>5.8.24</version>\n        </dependency>\n        <dependency>\n            <groupId>com.github.xiaoymin</groupId>\n            <artifactId>knife4j-openapi2-spring-boot-starter</artifactId>\n            <version>4.3.0</version>\n        </dependency>\n        <dependency>\n            <groupId>org.postgresql</groupId>\n            <artifactId>postgresql</artifactId>\n            <version>42.7.0</version>\n        </dependency>\n        <dependency>\n            <groupId>com.oracle.database.jdbc</groupId>\n            <artifactId>ojdbc8</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.oracle.database.nls</groupId>\n            <artifactId>orai18n</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.microsoft.sqlserver</groupId>\n            <artifactId>mssql-jdbc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mariadb.jdbc</groupId>\n            <artifactId>mariadb-java-client</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.github.gavlyukovskiy</groupId>\n            <artifactId>p6spy-spring-boot-starter</artifactId>\n            <version>1.8.1</version>\n        </dependency>\n        <dependency>\n            <groupId>org.reflections</groupId>\n            <artifactId>reflections</artifactId>\n            <version>0.10.2</version>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>QLExpress</artifactId>\n            <version>3.3.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-aop</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.2.83</version>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-dependencies</artifactId>\n                <version>${spring-boot.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <configuration>\n                    <source>17</source>\n                    <target>17</target>\n                    <encoding>UTF-8</encoding>\n                    <compilerArgs>\n                        \x3c!-- \u7f16\u8bd1\u662f\u542f\u7528\u53c2\u6570\u914d\u7f6e\uff0c\u5426\u5219aop\u65e0\u6cd5\u83b7\u53d6\u53c2\u6570\u540d\u79f0 --\x3e\n                        <arg>-parameters</arg>\n                    </compilerArgs>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <version>${spring-boot.version}</version>\n                <configuration>\n                    <mainClass>com.pisx.mes.MesTechnicalVerificationApplication</mainClass>\n                    <skip>true</skip>\n                    <image>\n                        <name>example.com/library/${project.artifactId}</name>\n                        \x3c!-- \u662f\u5426\u63a8\u9001 --\x3e\n                        <publish>false</publish>\n                    </image>\n                    <docker>\n                        \x3c!-- \u8c03\u7528\u8fdc\u7a0b docker \u8fdb\u884c\u6253\u5305\u90e8\u7f72 --\x3e\n                        <host>tcp://192.168.99.100:2376</host>\n                        <tlsVerify>false</tlsVerify>\n                        <certPath>/home/user/.minikube/certs</certPath>\n                        <publishRegistry>\n                            <username>user</username>\n                            <password>secret</password>\n                        </publishRegistry>\n                    </docker>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>repackage</id>\n                        <goals>\n                            <goal>repackage</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <repositories>\n        <repository>\n            <id>public</id>\n            <url>https://maven.aliyun.com/repository/public</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n        <repository>\n            <id>central</id>\n            <url>https://maven.aliyun.com/repository/central</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n\n    <pluginRepositories>\n        <pluginRepository>\n            <id>public</id>\n            <url>https://maven.aliyun.com/repository/public</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </pluginRepository>\n        <pluginRepository>\n            <id>central</id>\n            <url>https://maven.aliyun.com/repository/central</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </pluginRepository>\n    </pluginRepositories>\n\n</project>\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-applicationyml-1",children:"2. application.yml"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# \u670d\u52a1\u5668\u542f\u52a8\u7aef\u53e3\nserver:\n  port: 8080\n\n# spring \u914d\u7f6e\nspring:\n  # shardingsphere 5.3.0\u4e4b\u540e\u7684\u6570\u636e\u6e90\u914d\u7f6e\n  datasource:\n    url: jdbc:shardingsphere:classpath:sharding-config.yml\n    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver\n\ndecorator:\n  datasource:\n    p6spy:\n      log-format: time\uff1a%(executionTime) ms | sql\uff1a%(sqlSingleLine)\n\n# \u63a5\u53e3\u6587\u6863\u914d\u7f6e\nknife4j:\n  enable: true\n  setting:\n    enable-swagger-models: true\n    swagger-model-name: Models\n\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n"})}),"\n",(0,s.jsx)(e.h3,{id:"3-sharding-configyml",children:"3. sharding-config.yml"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'# 5.3.0 \u4e4b\u540e\u5b98\u65b9\u4e0d\u518d\u63d0\u4f9b spring-boot-starter\uff0c \u53ea\u652f\u6301 Java API \u548c YAML \u914d\u7f6e\u65b9\u5f0f\n# https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/\n# https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/single/\nmode:\n  type: Standalone\n  repository:\n    type: JDBC\n\n# \u6570\u636e\u6e90\u914d\u7f6e\ndataSources:\n  master_2:\n    dataSourceClassName: com.zaxxer.hikari.HikariDataSource\n    driverClassName: org.postgresql.Driver\n    jdbcUrl: jdbc:postgresql://192.168.3.49:5433/mes_technical\n    username: postgres\n    password: postgres\n  slave_2_1:\n    dataSourceClassName: com.zaxxer.hikari.HikariDataSource\n    driverClassName: org.postgresql.Driver\n    jdbcUrl: jdbc:postgresql://192.168.3.49:5434/mes_technical\n    username: postgres\n    password: postgres\n  slave_2_2:\n    dataSourceClassName: com.zaxxer.hikari.HikariDataSource\n    driverClassName: org.postgresql.Driver\n    jdbcUrl: jdbc:postgresql://192.168.3.34:5432/mes_technical\n    username: postgres\n    password: postgres\n\nrules:\n  # \u8bfb\u5199\u5206\u79bb\u914d\u7f6e\n  - !READWRITE_SPLITTING\n    dataSources:\n      readwrite_ds:\n        writeDataSourceName: master_2\n        readDataSourceNames:\n          - slave_2_1\n          - slave_2_2\n        # \u4e8b\u52a1\u5185\u8bfb\u8bf7\u6c42\u7684\u8def\u7531\u7b56\u7565\uff0c\u53ef\u9009\u503c\uff1aPRIMARY\uff08\u8def\u7531\u81f3\u4e3b\u5e93\uff09\u3001FIXED\uff08\u540c\u4e00\u4e8b\u52a1\u5185\u8def\u7531\u81f3\u56fa\u5b9a\u6570\u636e\u6e90\uff09\u3001DYNAMIC\uff08\u540c\u4e00\u4e8b\u52a1\u5185\u8def\u7531\u81f3\u975e\u56fa\u5b9a\u6570\u636e\u6e90\uff09\u3002\u9ed8\u8ba4\u503c\uff1aDYNAMIC\n        transactionalReadQueryStrategy: PRIMARY\n        # \u8d1f\u8f7d\u5747\u8861\u81ea\u5b9a\u4e49\u7b97\u6cd5\u540d\u79f0\n        loadBalancerName: round_robin\n    loadBalancers:\n      # \u8d1f\u8f7d\u5747\u8861\u81ea\u5b9a\u4e49\u7b97\u6cd5\u540d\u79f0\u5bf9\u5e94\u7684\u7c7b\u578b\u914d\u7f6e\n      round_robin:\n        type: ROUND_ROBIN\n  # \u5355\u8868\u89c4\u5219\u7528\u4e8e\u6307\u5b9a\u54ea\u4e9b\u5355\u8868\u9700\u8981\u88ab ShardingSphere \u7ba1\u7406\uff0c\u4e5f\u53ef\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5355\u8868\u6570\u636e\u6e90\n  - !SINGLE\n    tables:\n      # MySQL \u98ce\u683c\n      # - ds_0.t_single # \u52a0\u8f7d\u6307\u5b9a\u5355\u8868\n      # - ds_1.*        # \u52a0\u8f7d\u6307\u5b9a\u6570\u636e\u6e90\u4e2d\u7684\u5168\u90e8\u5355\u8868\n      # - "*.*"         # \u52a0\u8f7d\u5168\u90e8\u5355\u8868\n      # PostgreSQL \u98ce\u683c\n      # ds_1.public.t_single  # \u52a0\u8f7d\u6307\u5b9a\u5355\u8868\n      # ds_2.public.*         # \u52a0\u8f7d\u6307\u5b9aschema\u4e2d\u7684\u5168\u90e8\u5355\u8868\n      # ds_3.*.*              # \u52a0\u8f7d\u6240\u6709schema\u4e0b\u7684\u6240\u6709\u8868\n      - "*.*.*"               # \u52a0\u8f7d\u5168\u90e8\u5355\u8868\n    # \u9ed8\u8ba4\u6570\u636e\u6e90\uff0c\u4ec5\u5728\u6267\u884c CREATE TABLE \u521b\u5efa\u5355\u8868\u65f6\u6709\u6548\u3002\u7f3a\u5931\u503c\u4e3a\u7a7a\uff0c\u8868\u793a\u968f\u673a\u5355\u64ad\u8def\u7531\u3002\n    defaultDataSource: master_2\n\nprops:\n  # \u662f\u5426\u6253\u5370 SQL\n  sql-show: true\n\n'})}),"\n",(0,s.jsxs)(e.p,{children:["\u65b0\u7248\u672c\u5076\u73b0 ",(0,s.jsx)(e.code,{children:"TableNotExistsException: Table or view MY_TABLE does not exist"})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/apache/shardingsphere/issues/28848",children:"https://github.com/apache/shardingsphere/issues/28848"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/single/",children:"https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/single/"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u591a\u79df\u6237\u7248\u672c-\u4f7f\u7528-shardingsphere-jdbc-541",children:"\u591a\u79df\u6237\u7248\u672c \u4f7f\u7528 shardingsphere-jdbc 5.4.1"}),"\n",(0,s.jsx)(e.h3,{id:"1-sharding-configyml",children:"1. sharding-config.yml"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'# 5.3.0 \u4e4b\u540e\u5b98\u65b9\u4e0d\u518d\u63d0\u4f9b spring-boot-starter\uff0c \u53ea\u652f\u6301 Java API \u548c YAML \u914d\u7f6e\u65b9\u5f0f\n# https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/\n# https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/single/\nmode:\n  type: Standalone\n  repository:\n    type: JDBC\n\n# \u6570\u636e\u6e90\u914d\u7f6e\n# https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/data-source/\ndataSources:\n  master_1:\n    dataSourceClassName: com.zaxxer.hikari.HikariDataSource\n    driverClassName: org.postgresql.Driver\n    jdbcUrl: jdbc:postgresql://192.168.3.49:5433/mes_test\n    username: postgres\n    password: postgres\n  slave_1_1:\n    dataSourceClassName: com.zaxxer.hikari.HikariDataSource\n    driverClassName: org.postgresql.Driver\n    jdbcUrl: jdbc:postgresql://192.168.3.49:5434/mes_test\n    username: postgres\n    password: postgres\n  slave_1_2:\n    dataSourceClassName: com.zaxxer.hikari.HikariDataSource\n    driverClassName: org.postgresql.Driver\n    jdbcUrl: jdbc:postgresql://192.168.3.34:5432/mes_test\n    username: postgres\n    password: postgres\n  master_2:\n    dataSourceClassName: com.zaxxer.hikari.HikariDataSource\n    driverClassName: org.postgresql.Driver\n    jdbcUrl: jdbc:postgresql://192.168.3.49:5433/mes_technical\n    username: postgres\n    password: postgres\n  slave_2_1:\n    dataSourceClassName: com.zaxxer.hikari.HikariDataSource\n    driverClassName: org.postgresql.Driver\n    jdbcUrl: jdbc:postgresql://192.168.3.49:5434/mes_technical\n    username: postgres\n    password: postgres\n  slave_2_2:\n    dataSourceClassName: com.zaxxer.hikari.HikariDataSource\n    driverClassName: org.postgresql.Driver\n    jdbcUrl: jdbc:postgresql://192.168.3.34:5432/mes_technical\n    username: postgres\n    password: postgres\n\nrules:\n  # \u8bfb\u5199\u5206\u79bb\u914d\u7f6e\n  # https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting/\n  - !READWRITE_SPLITTING\n    dataSources:\n      readwrite_1:\n        writeDataSourceName: master_1\n        readDataSourceNames:\n          - slave_1_1\n          - slave_1_2\n        # \u4e8b\u52a1\u5185\u8bfb\u8bf7\u6c42\u7684\u8def\u7531\u7b56\u7565\uff0c\u53ef\u9009\u503c\uff1aPRIMARY\uff08\u8def\u7531\u81f3\u4e3b\u5e93\uff09\u3001FIXED\uff08\u540c\u4e00\u4e8b\u52a1\u5185\u8def\u7531\u81f3\u56fa\u5b9a\u6570\u636e\u6e90\uff09\u3001DYNAMIC\uff08\u540c\u4e00\u4e8b\u52a1\u5185\u8def\u7531\u81f3\u975e\u56fa\u5b9a\u6570\u636e\u6e90\uff09\u3002\u9ed8\u8ba4\u503c\uff1aDYNAMIC\n        transactionalReadQueryStrategy: PRIMARY\n        # \u8d1f\u8f7d\u5747\u8861\u81ea\u5b9a\u4e49\u7b97\u6cd5\u540d\u79f0\n        loadBalancerName: random\n      readwrite_2:\n        writeDataSourceName: master_2\n        readDataSourceNames:\n          - slave_2_1\n          - slave_2_2\n        # \u4e8b\u52a1\u5185\u8bfb\u8bf7\u6c42\u7684\u8def\u7531\u7b56\u7565\uff0c\u53ef\u9009\u503c\uff1aPRIMARY\uff08\u8def\u7531\u81f3\u4e3b\u5e93\uff09\u3001FIXED\uff08\u540c\u4e00\u4e8b\u52a1\u5185\u8def\u7531\u81f3\u56fa\u5b9a\u6570\u636e\u6e90\uff09\u3001DYNAMIC\uff08\u540c\u4e00\u4e8b\u52a1\u5185\u8def\u7531\u81f3\u975e\u56fa\u5b9a\u6570\u636e\u6e90\uff09\u3002\u9ed8\u8ba4\u503c\uff1aDYNAMIC\n        transactionalReadQueryStrategy: PRIMARY\n        # \u8d1f\u8f7d\u5747\u8861\u81ea\u5b9a\u4e49\u7b97\u6cd5\u540d\u79f0\n        loadBalancerName: round_robin\n    loadBalancers:\n      # \u8d1f\u8f7d\u5747\u8861\u81ea\u5b9a\u4e49\u7b97\u6cd5\u540d\u79f0\u5bf9\u5e94\u7684\u7c7b\u578b\u914d\u7f6e\n      round_robin:\n        type: ROUND_ROBIN\n      random:\n        type: RANDOM\n  # \u5355\u8868\u89c4\u5219\u7528\u4e8e\u6307\u5b9a\u54ea\u4e9b\u5355\u8868\u9700\u8981\u88ab ShardingSphere \u7ba1\u7406\uff0c\u4e5f\u53ef\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5355\u8868\u6570\u636e\u6e90\n  # https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/single/\n  - !SINGLE\n    tables:\n      # MySQL \u98ce\u683c\n      # - ds_0.t_single # \u52a0\u8f7d\u6307\u5b9a\u5355\u8868\n      # - ds_1.*        # \u52a0\u8f7d\u6307\u5b9a\u6570\u636e\u6e90\u4e2d\u7684\u5168\u90e8\u5355\u8868\n      # - "*.*"         # \u52a0\u8f7d\u5168\u90e8\u5355\u8868\n      # PostgreSQL \u98ce\u683c\n      # ds_1.public.t_single  # \u52a0\u8f7d\u6307\u5b9a\u5355\u8868\n      # ds_2.public.*         # \u52a0\u8f7d\u6307\u5b9aschema\u4e2d\u7684\u5168\u90e8\u5355\u8868\n      # ds_3.*.*              # \u52a0\u8f7d\u6240\u6709schema\u4e0b\u7684\u6240\u6709\u8868\n      - "*.*.*"               # \u52a0\u8f7d\u5168\u90e8\u5355\u8868\n    # \u9ed8\u8ba4\u6570\u636e\u6e90\uff0c\u4ec5\u5728\u6267\u884c CREATE TABLE \u521b\u5efa\u5355\u8868\u65f6\u6709\u6548\u3002\u7f3a\u5931\u503c\u4e3a\u7a7a\uff0c\u8868\u793a\u968f\u673a\u5355\u64ad\u8def\u7531\u3002\n    # defaultDataSource: master_2\n  # \u6570\u636e\u5206\u7247\u914d\u7f6e\n  # https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/\n  - !SHARDING\n    tables:\n      pi_object_definition:\n        actualDataNodes: readwrite_${1..2}.pi_object_definition\n        # \u5206\u5e93\u7b56\u7565\uff0c\u4e0d\u914d\u7f6e\u4f7f\u7528\u9ed8\u8ba4\u7684 defaultDatabaseStrategy\n        # databaseStrategy:\n        #   hint:\n        #     shardingAlgorithmName: tenant\n        # \u5206\u8868\u7b56\u7565\uff0c\u4e0d\u914d\u7f6e\u4f7f\u7528\u9ed8\u8ba4\u7684 defaultTableStrategy\n        # tableStrategy:\n        #   hint:\n        #     shardingAlgorithmName: tenant\n    defaultDatabaseStrategy:\n      hint:\n        shardingAlgorithmName: tenant\n#    defaultTableStrategy:\n#      none:\n    shardingAlgorithms:\n      tenant:\n        type: CLASS_BASED\n        props:\n          strategy: HINT\n          algorithmClassName: com.pisx.mes.sharding.CustomHintShardingAlgorithm\n\nprops:\n  # \u662f\u5426\u6253\u5370 SQL\n  sql-show: true\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-\u81ea\u5b9a\u4e49\u5206\u7247\u7b97\u6cd5",children:"2. \u81ea\u5b9a\u4e49\u5206\u7247\u7b97\u6cd5"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:'import org.apache.commons.collections4.CollectionUtils;\nimport org.apache.shardingsphere.sharding.algorithm.sharding.classbased.ClassBasedShardingAlgorithmStrategyType;\nimport org.apache.shardingsphere.sharding.api.sharding.hint.HintShardingAlgorithm;\nimport org.apache.shardingsphere.sharding.api.sharding.hint.HintShardingValue;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\n\nimport javax.servlet.http.HttpServletRequest;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Objects;\nimport java.util.Properties;\n\n/**\n * \u5904\u7406\u591a\u79df\u6237\u4e4b\u95f4\u7684\u6570\u636e\u6e90\u5207\u6362\n */\n@Component\npublic class CustomHintShardingAlgorithm implements HintShardingAlgorithm<String> {\n\n    // \u6784\u5efa\u6f14\u793a\u7528\u79df\u6237\u4e0e\u6570\u636e\u6e90\u5173\u7cfb\u914d\u7f6e\n    private static Map<String, List<String>> tenantDsMap = new HashMap<>();\n\n    static {\n        tenantDsMap.put("default", List.of("readwrite_1"));\n        tenantDsMap.put("others", List.of("readwrite_2"));\n    }\n\n    @Override\n    public Collection<String> doSharding(Collection<String> collection, HintShardingValue<String> hintShardingValue) {\n        List<String> result = new ArrayList<>();\n        // \u4ece\u8bf7\u6c42\u5934\u83b7\u53d6\u79df\u6237\u4fe1\u606f\n        ServletRequestAttributes requestAttributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();\n        if (Objects.nonNull(requestAttributes)) {\n            HttpServletRequest request = requestAttributes.getRequest();\n            String tenantCode = request.getHeader("tenantCode");\n            result = tenantDsMap.get(tenantCode);\n        }\n        // \u83b7\u53d6\u5931\u8d25\u7684\u5904\u7406\u903b\u8f91\n        if (CollectionUtils.isEmpty(result)) {\n            result = tenantDsMap.get("default");\n        }\n        return result;\n    }\n\n    @Override\n    public void init(Properties props) {\n        HintShardingAlgorithm.super.init(props);\n    }\n\n    @Override\n    public String getType() {\n        return ClassBasedShardingAlgorithmStrategyType.HINT.name();\n    }\n}\n\n'})}),"\n",(0,s.jsx)(e.h3,{id:"3-\u5751\u70b9",children:"3. \u5751\u70b9\uff01\uff01\uff01"}),"\n",(0,s.jsx)(e.h4,{id:"1-\u6570\u636e\u6e90\u914d\u7f6e",children:"1. \u6570\u636e\u6e90\u914d\u7f6e"}),"\n",(0,s.jsx)(e.p,{children:"\u6bcf\u4e2a\u6570\u636e\u6e90\u90fd\u8981\u5355\u72ec\u914d\u7f6e\u4e00\u6b21\uff0c\u6709\u591a\u5c11\u4e2a\u5c31\u8981\u914d\u7f6e\u591a\u5c11\u6b21"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"master_1:\n  dataSourceClassName: com.zaxxer.hikari.HikariDataSource\n  driverClassName: org.postgresql.Driver\n  jdbcUrl: jdbc:postgresql://192.168.3.49:5433/mes_test\n  username: postgres\n  password: postgres\n"})}),"\n",(0,s.jsx)(e.h4,{id:"2-\u8bfb\u5199\u5206\u79bb\u548c\u6570\u636e\u5206\u7247-\u5206\u5e93\u5206\u8868\u4e00\u8d77\u4f7f\u7528\u65f6\u6570\u636e\u6e90\u7684\u914d\u7f6e\u95ee\u9898",children:"2. \u8bfb\u5199\u5206\u79bb\u548c\u6570\u636e\u5206\u7247 (\u5206\u5e93\u5206\u8868)\u4e00\u8d77\u4f7f\u7528\u65f6\u6570\u636e\u6e90\u7684\u914d\u7f6e\u95ee\u9898"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://community.sphere-ex.com/t/topic/417",children:"ShardingJdbc5.0.0 hint\u5206\u7247\u7b56\u7565\u914d\u7f6e\u7b80\u5316+\u5982\u4f55\u7ee7\u7eed\u96c6\u6210\u8bfb\u5199\u5206\u79bb"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/apache/shardingsphere/issues/29780",children:"Hint question shardingjdbc 5.4.1"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u9700\u8981\u5148\u5c06\u5404\u6570\u636e\u6e90\u6309\u7167\u4e3b\u4ece\u914d\u7f6e\u8bfb\u5199\u5206\u79bb\uff0c\u7ec4\u6210\u4e00\u4e2a\u865a\u62df\u7684\u6570\u636e\u6e90\uff0c\u5728\u6570\u636e\u5206\u7247\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u865a\u62df\u6570\u636e\u6e90\u4f5c\u4e3a\u76ee\u6807\u6570\u636e\u6e90"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# ...\nreadwrite_1:\n  writeDataSourceName: master_1\n  readDataSourceNames:\n    - slave_1_1\n    - slave_1_2\nreadwrite_2:\n  writeDataSourceName: master_2\n  readDataSourceNames:\n    - slave_2_1\n    - slave_2_2\n# ...\n"})}),"\n",(0,s.jsx)(e.h4,{id:"3-\u6570\u636e\u5206\u7247\u6570\u636e\u8868\u914d\u7f6e",children:"3. \u6570\u636e\u5206\u7247\u6570\u636e\u8868\u914d\u7f6e"}),"\n",(0,s.jsx)(e.p,{children:"\u6bcf\u4e2a\u6570\u636e\u8868\u90fd\u8981\u914d\u7f6e\u4e00\u6b21\u6570\u636e\u6e90\uff0c\u6709100\u5f20\u8868\u9700\u8981\u914d\u7f6e100\u6b21"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# \u6570\u636e\u8868\npi_object_definition:\n  # \u3010MUST\u3011\u6570\u636e\u6e90\u4f7f\u7528\u8bfb\u5199\u5206\u79bb\u805a\u5408\u51fa\u6765\u7684\u865a\u62df\u6570\u636e\u6e90 \n  actualDataNodes: readwrite_${1..2}.pi_object_definition\n  # \u3010OPTIONAL\u3011\u6570\u636e\u5e93\u5206\u5e93\u7b56\u7565\uff0c\u4e0d\u914d\u7f6e\u9ed8\u8ba4\u4f7f\u7528 defaultDatabaseStrategy\n  databaseStrategy:\n    hint:\n      shardingAlgorithmName: tenant\n  # \u3010OPTIONAL\u3011\u6570\u636e\u8868\u5206\u8868\u7b56\u7565\uff0c\u4e0d\u914d\u7f6e\u9ed8\u8ba4\u4f7f\u7528 defaultTableStrategy\n  tableStrategy:\n    hint:\n      shardingAlgorithmName: tenant\n"})}),"\n",(0,s.jsx)(e.h4,{id:"4-\u81ea\u5b9a\u4e49hint\u5206\u7247\u7b97\u6cd5",children:"4. \u81ea\u5b9a\u4e49HINT\u5206\u7247\u7b97\u6cd5"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://shardingsphere.apache.org/document/5.4.1/cn/user-manual/shardingsphere-jdbc/special-api/sharding/hint/",children:"\u5f3a\u5236\u8def\u7531"})}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684HINT\u5206\u7247\u7b97\u6cd5\u65f6\uff0c\u9700\u8981\u624b\u52a8\u8c03\u7528 ",(0,s.jsx)(e.code,{children:"HintManager"}),"\uff0c\u5426\u5219\u5206\u7247\u7b97\u6cd5\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709sql\u524d\u90fd\u8981\u8c03\u7528\uff0c\u5426\u5219\u4e0d\u4f1a\u6267\u884c\u5206\u7247\u7b56\u7565"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"shardingAlgorithms:\n  tenant:\n    type: CLASS_BASED\n    props:\n      strategy: HINT\n      algorithmClassName: com.pisx.mes.sharding.CustomHintShardingAlgorithm\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u8c03\u7528\u793a\u4f8b"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:'public void hint() {\n    try (HintManager hintManager = HintManager.getInstance()) {\n        // \u53c2\u6570\u5c06\u88ab\u4f20\u9012\u5230 CustomHintShardingAlgorithm#doSharding() \u7684 hintShardingValue \u53c2\u6570\u4e0a\n        hintManager.setDatabaseShardingValue("a,b,c");\n        callTargetMethod();\n    }\n}\n'})})]})}function l(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(p,{...n})}):p(n)}}}]);