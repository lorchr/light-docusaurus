"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[447],{55502:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>l,frontMatter:()=>c,metadata:()=>b,toc:()=>s});var r=t(85893),a=t(11151);const c={},i=void 0,b={id:"zh-cn/devenv/Docker-RabbitMQ",title:"Docker-RabbitMQ",description:"- RabbitMQ Offical",source:"@site/docs/zh-cn/devenv/19-Docker-RabbitMQ.md",sourceDirName:"zh-cn/devenv",slug:"/zh-cn/devenv/Docker-RabbitMQ",permalink:"/light-docusaurus/docs/zh-cn/devenv/Docker-RabbitMQ",draft:!1,unlisted:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/devenv/19-Docker-RabbitMQ.md",tags:[],version:"current",sidebarPosition:19,frontMatter:{},sidebar:"troch",previous:{title:"Docker-Kafka",permalink:"/light-docusaurus/docs/zh-cn/devenv/Docker-Kafka"},next:{title:"Docker-RocketMQ",permalink:"/light-docusaurus/docs/zh-cn/devenv/Docker-RocketMQ"}},o={},s=[{value:"1. Docker\u5b89\u88c5",id:"1-docker\u5b89\u88c5",level:2},{value:"2. \u64cd\u4f5c",id:"2-\u64cd\u4f5c",level:2},{value:"1. \u91cd\u7f6eRabbitMQ\u961f\u5217",id:"1-\u91cd\u7f6erabbitmq\u961f\u5217",level:3},{value:"2. \u4ea4\u6362\u673a\u70b9\u51fb\u62a5\u9519 Management API returned status code 500",id:"2-\u4ea4\u6362\u673a\u70b9\u51fb\u62a5\u9519-management-api-returned-status-code-500",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.rabbitmq.com/",children:"RabbitMQ Offical"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://hub.docker.com/_/rabbitmq",children:"RabbitMQ Docker"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.rabbitmq.com/documentation.html",children:"RabbitMQ Offical Document"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"1-docker\u5b89\u88c5",children:"1. Docker\u5b89\u88c5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"# \u521b\u5efaNetwork\ndocker network create dev\n\n# \u83b7\u53d6\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\ndocker run -d --env RABBITMQ_DEFAULT_USER=rabbitmq --env RABBITMQ_DEFAULT_PASS=rabbitmq --env RABBITMQ_DEFAULT_VHOST=vh1 --name rabbitmq_temp rabbitmq:3.12-management \\\n&& docker cp rabbitmq_temp:/etc/rabbitmq/conf.d/10-defaults.conf  D:/docker/rabbitmq/conf/conf.d/10-defaults.conf \\\n&& docker cp rabbitmq_temp:/etc/rabbitmq/enabled_plugins  D:/docker/rabbitmq/conf/enabled_plugins \\\n&& docker stop rabbitmq_temp && docker rm rabbitmq_temp\n\n# \u8fd0\u884c\u5bb9\u5668\ndocker run -d \\\n  --publish 5672:5672 \\\n  --publish 15672:15672 \\\n  --publish 25672:25672 \\\n  --publish 61613:61613 \\\n  --publish 1883:1883 \\\n  --volume //d/docker/rabbitmq/data:/var/lib/rabbitmq \\\n  --volume //d/docker/rabbitmq/conf/conf.d:/etc/rabbitmq/conf.d \\\n  --volume //d/docker/rabbitmq/conf/enabled_plugins:/etc/rabbitmq/enabled_plugins \\\n  --volume //d/docker/rabbitmq/log:/var/log/rabbitmq \\\n  --env RABBITMQ_DEFAULT_USER=rabbitmq \\\n  --env RABBITMQ_DEFAULT_PASS=rabbitmq \\\n  --env RABBITMQ_DEFAULT_VHOST=vh1 \\\n  --hostname rabbitmq \\\n  --net dev \\\n  --restart=no \\\n  --name rabbitmq \\\n  rabbitmq:3-management\n\ndocker exec -it -u root rabbitmq /bin/bash\n# \u542f\u7528management\u63d2\u4ef6 web\u7ba1\u7406\u9875\u9762\nrabbitmq-plugins enable rabbitmq-management\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"http://localhost:15672",children:"Dashboard"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Account","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"rabbitmq / rabbitmq"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"2-\u64cd\u4f5c",children:"2. \u64cd\u4f5c"}),"\n",(0,r.jsx)(n.h3,{id:"1-\u91cd\u7f6erabbitmq\u961f\u5217",children:"1. \u91cd\u7f6eRabbitMQ\u961f\u5217"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"rabbitmqctl stop_app\nrabbitmqctl reset\nrabbitmqctl start_app\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-\u4ea4\u6362\u673a\u70b9\u51fb\u62a5\u9519-management-api-returned-status-code-500",children:"2. \u4ea4\u6362\u673a\u70b9\u51fb\u62a5\u9519 Management API returned status code 500"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"# \u8fdb\u5165\u5bb9\u5668\ndocker exec -it root rabbitmq /bin/bash\n\n# \u4fee\u6539\u914d\u7f6e\ncd /etc/rabbitmq/conf.d\necho management_agent.disable_metrics_collector = false > management_agent.disable_metrics_collector.conf\n\n# \u91cd\u542f\u5bb9\u5668\ndocker restart rabbitmq\n"})})]})}function l(e={}){const{wrapper:n}={...(0,a.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{ah:()=>c});var r=t(67294);const a=r.createContext({});function c(e){const n=r.useContext(a);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);