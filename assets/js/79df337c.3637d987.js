"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[885],{96925:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=t(85893),i=t(11151);const o={},a=void 0,s={id:"zh-cn/spring-authorization-server/SAS-Optimize-Customlize-UserDetailService",title:"SAS-Optimize-Customlize-UserDetailService",description:"- Spring Authorization Server\u4f18\u5316\u7bc7\uff1a\u81ea\u5b9a\u4e49UserDetailsService\u5b9e\u73b0\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u7528\u6237\u4fe1\u606f",source:"@site/docs/zh-cn/spring-authorization-server/100-SAS-Optimize-Customlize-UserDetailService.md",sourceDirName:"zh-cn/spring-authorization-server",slug:"/zh-cn/spring-authorization-server/SAS-Optimize-Customlize-UserDetailService",permalink:"/light-docusaurus/docs/zh-cn/spring-authorization-server/SAS-Optimize-Customlize-UserDetailService",draft:!1,unlisted:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/spring-authorization-server/100-SAS-Optimize-Customlize-UserDetailService.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{},sidebar:"troch",previous:{title:"SAS-Store-Token-And-UserInfo-With-Redis",permalink:"/light-docusaurus/docs/zh-cn/spring-authorization-server/SAS-Store-Token-And-UserInfo-With-Redis"},next:{title:"SAS-Optimize-Add-Redis-Cache",permalink:"/light-docusaurus/docs/zh-cn/spring-authorization-server/SAS-Optimize-Add-Redis-Cache"}},c={},u=[{value:"\u4e00\u3001\u524d\u8a00",id:"\u4e00\u524d\u8a00",level:2},{value:"\u4e8c\u3001\u5b9e\u73b0\u6b65\u9aa4",id:"\u4e8c\u5b9e\u73b0\u6b65\u9aa4",level:2},{value:"\u4e09\u3001\u521d\u59cb\u5316\u6570\u636e\u5e93\u8868\u7ed3\u6784",id:"\u4e09\u521d\u59cb\u5316\u6570\u636e\u5e93\u8868\u7ed3\u6784",level:2},{value:"\u56db\u3001\u901a\u8fc7\u4ee3\u7801\u751f\u6210\u5668\u751f\u6210entity\u3001mapper\u3001mapper\u6587\u4ef6",id:"\u56db\u901a\u8fc7\u4ee3\u7801\u751f\u6210\u5668\u751f\u6210entitymappermapper\u6587\u4ef6",level:2},{value:"1. \u9879\u76ee\u4e2d\u5f15\u5165\u751f\u6210\u5668\u4f9d\u8d56",id:"1-\u9879\u76ee\u4e2d\u5f15\u5165\u751f\u6210\u5668\u4f9d\u8d56",level:3},{value:"2. \u7f16\u5199\u751f\u6210\u4ee3\u7801",id:"2-\u7f16\u5199\u751f\u6210\u4ee3\u7801",level:3},{value:"3. \u8bf4\u660e",id:"3-\u8bf4\u660e",level:3},{value:"\u4e94\u3001\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684<code>UserDetailsService</code>",id:"\u4e94\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684userdetailsservice",level:2},{value:"1. <code>Oauth2BasicUser</code>\u5b9e\u4f53\u7c7b\u5b9e\u73b0<code>UserDetails</code>\u63a5\u53e3",id:"1-oauth2basicuser\u5b9e\u4f53\u7c7b\u5b9e\u73b0userdetails\u63a5\u53e3",level:3},{value:"2. <code>Oauth2BasicUserServiceImpl</code>\u5b9e\u73b0<code>UserDetailsService</code>\u63a5\u53e3",id:"2-oauth2basicuserserviceimpl\u5b9e\u73b0userdetailsservice\u63a5\u53e3",level:3},{value:"3. \u7f16\u5199MybatisPlus\u914d\u7f6e\u7c7b",id:"3-\u7f16\u5199mybatisplus\u914d\u7f6e\u7c7b",level:3},{value:"4. <code>application.yml</code>\u4e2d\u6dfb\u52a0\u914d\u7f6e",id:"4-applicationyml\u4e2d\u6dfb\u52a0\u914d\u7f6e",level:3},{value:"5. \u79fb\u9664<code>AuthorizationConfig</code>\u7684\u7528\u6237\u914d\u7f6e",id:"5-\u79fb\u9664authorizationconfig\u7684\u7528\u6237\u914d\u7f6e",level:3},{value:"\u516d\u3001\u6d4b\u8bd5",id:"\u516d\u6d4b\u8bd5",level:2},{value:"1. \u8bbf\u95ee<code>/oauth2/authorize</code>\u63a5\u53e3",id:"1-\u8bbf\u95eeoauth2authorize\u63a5\u53e3",level:3},{value:"2. \u8f93\u5165\u6570\u636e\u5e93\u4e2d\u7684\u624b\u673a\u53f7\u6216\u8005\u90ae\u7bb1",id:"2-\u8f93\u5165\u6570\u636e\u5e93\u4e2d\u7684\u624b\u673a\u53f7\u6216\u8005\u90ae\u7bb1",level:3},{value:"3. \u767b\u5f55\u6210\u529f\u540e\u643a\u5e26code\u91cd\u5b9a\u5411\u81f3\u56de\u8c03\u5730\u5740",id:"3-\u767b\u5f55\u6210\u529f\u540e\u643a\u5e26code\u91cd\u5b9a\u5411\u81f3\u56de\u8c03\u5730\u5740",level:3},{value:"\u4e03\u3001\u6846\u67b6\u5728\u4ec0\u4e48\u65f6\u5019\u8c03\u7528\u81ea\u5b9a\u4e49\u7684<code>UserDetailsService</code>",id:"\u4e03\u6846\u67b6\u5728\u4ec0\u4e48\u65f6\u5019\u8c03\u7528\u81ea\u5b9a\u4e49\u7684userdetailsservice",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://juejin.cn/post/7252251628090294309",children:"Spring Authorization Server\u4f18\u5316\u7bc7\uff1a\u81ea\u5b9a\u4e49UserDetailsService\u5b9e\u73b0\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u7528\u6237\u4fe1\u606f"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u4e00\u524d\u8a00",children:"\u4e00\u3001\u524d\u8a00"}),"\n",(0,r.jsxs)(n.p,{children:["\u672c\u7bc7\u6587\u7ae0\u4f1a\u5e26\u5927\u5bb6\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684",(0,r.jsx)(n.code,{children:"UserDetailsService"}),"\uff0c\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u7528\u6237\u53ca\u6743\u9650\u4fe1\u606f\uff1b\u4e5f\u4f1a\u5e26\u5927\u5bb6\u4e86\u89e3\u4e00\u4e0b\u6846\u67b6\u662f\u600e\u4e48\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u7684\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"\u4e8c\u5b9e\u73b0\u6b65\u9aa4",children:"\u4e8c\u3001\u5b9e\u73b0\u6b65\u9aa4"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u521d\u59cb\u5316\u6570\u636e\u5e93\u8868\u7ed3\u6784"}),"\n",(0,r.jsx)(n.li,{children:"\u7f16\u5199\u76f8\u5173\u8868\u7684\u5b9e\u4f53\u3001mapper\u63a5\u53e3\u548cmapper\u6587\u4ef6"}),"\n",(0,r.jsxs)(n.li,{children:["\u5b9e\u73b0",(0,r.jsx)(n.code,{children:"UserDetailsService"}),"\u63a5\u53e3\uff0c\u5b9e\u73b0",(0,r.jsx)(n.code,{children:"loadUserByUsername"}),"\u62bd\u8c61\u65b9\u6cd5\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u4e09\u521d\u59cb\u5316\u6570\u636e\u5e93\u8868\u7ed3\u6784",children:"\u4e09\u3001\u521d\u59cb\u5316\u6570\u636e\u5e93\u8868\u7ed3\u6784"}),"\n",(0,r.jsx)(n.p,{children:"\u6570\u636e\u5e93\u8868\u7ed3\u6784\u4f7f\u7528\u7ecf\u5178\u7684RBAC\u6a21\u578b\uff0c\u4e00\u5171\u6709\u4e94\u5f20\u8868\uff1a\u7528\u6237\u3001\u89d2\u8272\u3001\u6743\u9650\u3001\u7528\u6237\u89d2\u8272\u5173\u8054\u548c\u89d2\u8272\u6743\u9650\u5173\u8054\u8868\uff1b\u5173\u4e8e\u4e09\u65b9\u767b\u5f55\u8d26\u6237\u4fe1\u606f\u8868\u9700\u8981\u7684\u53ef\u4ee5\u52a0\u4e00\u4e0b\uff0c\u8be5\u8868\u4e3b\u8981\u5b58\u50a8\u4e09\u65b9\u767b\u5f55\u83b7\u53d6\u5230\u7684\u7528\u6237\u4fe1\u606f\u3002\u56e0\u4e3a\u53ea\u662f\u793a\u4f8b\uff0c\u6240\u4ee5\u8868\u4e2d\u5b57\u6bb5\u90fd\u5f88\u7b80\u964b\uff0c\u5927\u5bb6\u66ff\u6362\u6210\u81ea\u5df1\u7684\u7528\u6237\u8868\u5373\u53ef\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SET NAMES utf8mb4;\nSET\nFOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- Table structure for oauth2_basic_user\n-- ----------------------------\nDROP TABLE IF EXISTS `oauth2_basic_user`;\nCREATE TABLE `oauth2_basic_user`\n(\n    `id`          int(11) NOT NULL AUTO_INCREMENT COMMENT '\u81ea\u589eid',\n    `name`        varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u7528\u6237\u540d\u3001\u6635\u79f0',\n    `account`     varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u8d26\u53f7',\n    `password`    varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u5bc6\u7801',\n    `mobile`      varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u624b\u673a\u53f7',\n    `email`       varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u90ae\u7bb1',\n    `avatar_url`  varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u5934\u50cf\u5730\u5740',\n    `deleted`     tinyint(1) NULL DEFAULT NULL COMMENT '\u662f\u5426\u5df2\u5220\u9664',\n    `source_from` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u7528\u6237\u6765\u6e90',\n    `create_time` datetime(0) NULL DEFAULT NULL COMMENT '\u521b\u5efa\u65f6\u95f4',\n    `update_time` datetime(0) NULL DEFAULT NULL COMMENT '\u4fee\u6539\u65f6\u95f4',\n    PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin COMMENT = '\u57fa\u7840\u7528\u6237\u4fe1\u606f\u8868';\n\n-- ----------------------------\n-- Records of oauth2_basic_user\n-- ----------------------------\nBEGIN;\nINSERT INTO `oauth2_basic_user`\nVALUES (1, '\u4e91\u9038', 'admin', '$2a$10$K7nVcC.75YZSZU1Fq6G6buYujG.dolGYGPboh7eQbtkdFmB0EfN5K', '17683906991',\n        '17683906991@163.com', NULL, 0, 'system', '2023-06-20 15:20:42', '2023-06-20 15:20:42');\nCOMMIT;\n\n-- ----------------------------\n-- Table structure for oauth2_third_Account\n-- ----------------------------\nDROP TABLE IF EXISTS `oauth2_third_Account`;\nCREATE TABLE `oauth2_third_account`\n(\n    `id`          int(11) NOT NULL AUTO_INCREMENT COMMENT '\u81ea\u589eid',\n    `user_id`     int(11) NULL DEFAULT NULL COMMENT '\u7528\u6237\u8868\u4e3b\u952e',\n    `unique_id`   varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u4e09\u65b9\u767b\u5f55\u552f\u4e00id',\n    `type`        varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u4e09\u65b9\u767b\u5f55\u7c7b\u578b',\n    `blog`        varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u535a\u5ba2\u5730\u5740',\n    `location`    varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u5730\u5740',\n    `create_time` datetime(0) NULL DEFAULT NULL COMMENT '\u7ed1\u5b9a\u65f6\u95f4',\n    `update_time` datetime(0) NULL DEFAULT NULL COMMENT '\u4fee\u6539\u65f6\u95f4',\n    PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin COMMENT = '\u4e09\u65b9\u767b\u5f55\u8d26\u6237\u4fe1\u606f\u8868';\n\n-- ----------------------------\n-- Table structure for sys_authority\n-- ----------------------------\nDROP TABLE IF EXISTS `sys_authority`;\nCREATE TABLE `sys_authority`\n(\n    `id`             int(11) NOT NULL AUTO_INCREMENT COMMENT '\u83dc\u5355\u81ea\u589eID',\n    `name`           varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '\u83dc\u5355\u540d\u79f0',\n    `menu_pid`       int(11) NOT NULL COMMENT '\u7236\u83dc\u5355ID',\n    `url`            varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '\u8df3\u8f6cURL',\n    `authority`      varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NULL DEFAULT NULL COMMENT '\u6240\u9700\u6743\u9650',\n    `sort`           tinyint(4) NULL DEFAULT NULL COMMENT '\u6392\u5e8f',\n    `type`           tinyint(4) NOT NULL COMMENT '0:\u83dc\u5355,1:\u63a5\u53e3',\n    `deleted`        tinyint(1) NOT NULL COMMENT '0:\u542f\u7528,1:\u5220\u9664',\n    `create_time`    datetime(0) NOT NULL COMMENT '\u521b\u5efa\u65f6\u95f4',\n    `create_user_id` int(11) NOT NULL COMMENT '\u521b\u5efa\u4eba',\n    PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin COMMENT = '\u7cfb\u7edf\u83dc\u5355\u8868';\n\n-- ----------------------------\n-- Records of sys_authority\n-- ----------------------------\nBEGIN;\nINSERT INTO `sys_authority`\nVALUES (1, '\u7cfb\u7edf\u7ba1\u7406', 0, '/system', 'system', 0, 0, 0, '2022-03-25 23:52:03', 1),\n       (2, 'app', 0, '/**', 'app', 1, 1, 0, '2023-06-20 15:18:49', 1),\n       (3, 'web', 0, '/**', 'web', 2, 1, 0, '2023-06-20 15:19:12', 1);\nCOMMIT;\n\n-- ----------------------------\n-- Table structure for sys_role\n-- ----------------------------\nDROP TABLE IF EXISTS `sys_role`;\nCREATE TABLE `sys_role`\n(\n    `id`             int(11) NOT NULL AUTO_INCREMENT COMMENT '\u89d2\u8272\u81ea\u589eID',\n    `role_name`      varchar(16) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '\u89d2\u8272\u540d',\n    `deleted`        tinyint(1) NULL DEFAULT NULL COMMENT '0:\u542f\u7528,1:\u5220\u9664',\n    `sort`           int(11) NULL DEFAULT NULL COMMENT '\u6392\u5e8f',\n    `create_time`    datetime(0) NOT NULL COMMENT '\u521b\u5efa\u65f6\u95f4',\n    `create_user_id` int(11) NOT NULL COMMENT '\u521b\u5efa\u4eba',\n    PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '\u7cfb\u7edf\u89d2\u8272\u8868';\n\n-- ----------------------------\n-- Records of sys_role\n-- ----------------------------\nBEGIN;\nINSERT INTO `sys_role`\nVALUES (1, '\u7ba1\u7406\u5458', 0, 0, '2022-03-25 23:51:04', 1);\nCOMMIT;\n\n-- ----------------------------\n-- Table structure for sys_role_authority\n-- ----------------------------\nDROP TABLE IF EXISTS `sys_role_authority`;\nCREATE TABLE `sys_role_authority`\n(\n    `id`           int(11) NOT NULL AUTO_INCREMENT COMMENT '\u89d2\u8272\u83dc\u5355\u5173\u8054\u8868\u81ea\u589eID',\n    `role_id`      int(16) NOT NULL COMMENT '\u89d2\u8272ID',\n    `authority_id` int(11) NOT NULL COMMENT '\u6743\u9650\u83dc\u5355ID',\n    PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '\u89d2\u8272\u83dc\u5355\u591a\u5bf9\u591a\u5173\u8054\u8868';\n\n-- ----------------------------\n-- Records of sys_role_authority\n-- ----------------------------\nBEGIN;\nINSERT INTO `sys_role_authority`\nVALUES (1, 1, 1),\n       (2, 1, 2),\n       (3, 1, 3);\nCOMMIT;\n\n-- ----------------------------\n-- Table structure for sys_user_role\n-- ----------------------------\nDROP TABLE IF EXISTS `sys_user_role`;\nCREATE TABLE `sys_user_role`\n(\n    `id`      int(11) NOT NULL AUTO_INCREMENT,\n    `role_id` int(16) NULL DEFAULT NULL COMMENT '\u89d2\u8272ID',\n    `user_id` int(18) NULL DEFAULT NULL COMMENT '\u7528\u6237ID',\n    PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci;\n\n-- ----------------------------\n-- Records of sys_user_role\n-- ----------------------------\nBEGIN;\nINSERT INTO `sys_user_role`\nVALUES (1, 1, 1);\nCOMMIT;\n\nSET\nFOREIGN_KEY_CHECKS = 1;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u56db\u901a\u8fc7\u4ee3\u7801\u751f\u6210\u5668\u751f\u6210entitymappermapper\u6587\u4ef6",children:"\u56db\u3001\u901a\u8fc7\u4ee3\u7801\u751f\u6210\u5668\u751f\u6210entity\u3001mapper\u3001mapper\u6587\u4ef6"}),"\n",(0,r.jsxs)(n.p,{children:["\u8fd9\u4e9b\u4e1c\u897f\u5728\u4f7f\u7528MybatisPlus\u65f6\u57fa\u672c\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u53bb\u6d6a\u8d39\u65f6\u95f4\uff0c\u76f4\u63a5\u901a\u8fc7\u751f\u6210\u5668\u751f\u6210\u4ee3\u7801\u3002\n",(0,r.jsx)(n.a,{href:"https://www.baomidou.com/pages/779a6e/#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8",children:"\u6587\u6863\u5730\u5740"})]}),"\n",(0,r.jsx)(n.h3,{id:"1-\u9879\u76ee\u4e2d\u5f15\u5165\u751f\u6210\u5668\u4f9d\u8d56",children:"1. \u9879\u76ee\u4e2d\u5f15\u5165\u751f\u6210\u5668\u4f9d\u8d56"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>com.baomidou</groupId>\n    <artifactId>mybatis-plus-generator</artifactId>\n    <version>3.5.3.1</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.velocity</groupId>\n    <artifactId>velocity-engine-core</artifactId>\n    <version>2.3</version>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-\u7f16\u5199\u751f\u6210\u4ee3\u7801",children:"2. \u7f16\u5199\u751f\u6210\u4ee3\u7801"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example;\n\nimport com.baomidou.mybatisplus.generator.FastAutoGenerator;\nimport com.baomidou.mybatisplus.generator.config.DataSourceConfig;\n\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\n/**\n * \u4ee3\u7801\u751f\u6210\u6d4b\u8bd5\n *\n * @author vains\n */\npublic class CodeGeneratorTest {\n\n    private static final DataSourceConfig.Builder DATA_SOURCE_CONFIG = new DataSourceConfig.Builder("jdbc:mysql://localhost:3306/authorization-example?serverTimezone=UTC&userUnicode=true&characterEncoding=utf-8", "root", "root");\n\n    public static void main(String[] args) {\n        FastAutoGenerator.create(DATA_SOURCE_CONFIG)\n                // \u5168\u5c40\u914d\u7f6e\n                .globalConfig((scanner, builder) -> builder.author(scanner.apply("\u8bf7\u8f93\u5165\u4f5c\u8005\u540d\u79f0\uff1f")).fileOverride())\n                // \u5305\u914d\u7f6e\n                .packageConfig((scanner, builder) -> builder.parent(scanner.apply("\u8bf7\u8f93\u5165\u5305\u540d\uff1f")))\n                // \u7b56\u7565\u914d\u7f6e\n                .strategyConfig((scanner, builder) -> builder.addInclude(getTables(scanner.apply("\u8bf7\u8f93\u5165\u8868\u540d\uff0c\u591a\u4e2a\u82f1\u6587\u9017\u53f7\u5206\u9694\uff1f\u6240\u6709\u8f93\u5165 all")))\n                        .controllerBuilder().enableRestStyle().enableHyphenStyle()\n                        .entityBuilder().enableLombok()\n//                        .addTableFills(\n//                                new Column("create_time", FieldFill.INSERT)\n//                        )\n                        .build())\n                /*\n                    \u6a21\u677f\u5f15\u64ce\u914d\u7f6e\uff0c\u9ed8\u8ba4 Velocity \u53ef\u9009\u6a21\u677f\u5f15\u64ce Beetl \u6216 Freemarker\n                   .templateEngine(new BeetlTemplateEngine())\n                   .templateEngine(new FreemarkerTemplateEngine())\n                 */\n                .execute();\n    }\n\n    protected static List<String> getTables(String tables) {\n        return "all".equals(tables) ? Collections.emptyList() : Arrays.asList(tables.split(","));\n    }\n\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-\u8bf4\u660e",children:"3. \u8bf4\u660e"}),"\n",(0,r.jsx)(n.p,{children:"\u751f\u6210\u540e\u4ee3\u7801\u4f1a\u5728D\u76d8\u6839\u76ee\u5f55\u4e0b\uff0c\u6309\u7167\u63a7\u5236\u53f0\u63d0\u793a\u8f93\u5165\u5305\u540d\u3001\u4f5c\u8005\u548c\u8868\u540d\u5c31\u4f1a\u5728d\u76d8\u6839\u76ee\u5f55\u751f\u6210\u5bf9\u5e94\u7684\u6301\u4e45\u5c42\u4ee3\u7801\uff0c\u751f\u6210\u7684\u4ee3\u7801\u5c31\u4e0d\u8d34\u51fa\u6765\u4e86\uff0c\u592a\u957f\u4e86\uff0c\u540e\u8fb9\u4f1a\u8d34\u51fa\u6838\u5fc3\u4ee3\u7801\uff1b\u7ed3\u6784\u5982\u4e0b"}),"\n",(0,r.jsxs)(n.h2,{id:"\u4e94\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684userdetailsservice",children:["\u4e94\u3001\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684",(0,r.jsx)(n.code,{children:"UserDetailsService"})]}),"\n",(0,r.jsxs)(n.h3,{id:"1-oauth2basicuser\u5b9e\u4f53\u7c7b\u5b9e\u73b0userdetails\u63a5\u53e3",children:["1. ",(0,r.jsx)(n.code,{children:"Oauth2BasicUser"}),"\u5b9e\u4f53\u7c7b\u5b9e\u73b0",(0,r.jsx)(n.code,{children:"UserDetails"}),"\u63a5\u53e3"]}),"\n",(0,r.jsx)(n.p,{children:"\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u539f\u56e0\u6709\u4e24\u4e2a\uff0c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u4e00\u662f\u53ef\u4ee5\u7528\u81ea\u5df1\u7684\u7528\u6237\u5c5e\u6027\u66ff\u6362\u6846\u67b6\u9ed8\u8ba4\u7684\u7528\u6237\u5c5e\u6027\uff0c"}),"\n",(0,r.jsxs)(n.li,{children:["\u4e8c\u662f\u56e0\u4e3a",(0,r.jsx)(n.code,{children:"UserDetailsService"}),"\u7684",(0,r.jsx)(n.code,{children:"loadUserByUsername"}),"\u65b9\u6cd5\u8fd4\u56de\u7684\u7c7b\u578b\u53ea\u80fd\u662f",(0,r.jsx)(n.code,{children:"UserDetails"}),"\u53ca\u5176\u5b50\u7c7b\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u6709\u5c31\u662f\u8981\u6ce8\u610f\u975e\u6570\u636e\u5e93\u5b57\u6bb5\u8981\u6dfb\u52a0\u6ce8\u89e3",(0,r.jsx)(n.code,{children:"@TableField(exist = false)"}),"\u58f0\u660e\u8be5\u5b57\u6bb5\u975e\u6570\u636e\u5e93\u5217\uff0c\u5982\u4e0b\u8fb9\u4ee3\u7801\u4e2d\u7684",(0,r.jsx)(n.code,{children:"authorities"}),"\u5c5e\u6027"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.entity;\n\nimport com.baomidou.mybatisplus.annotation.*;\n\nimport java.io.Serial;\nimport java.io.Serializable;\nimport java.time.LocalDateTime;\nimport java.util.Collection;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.databind.annotation.JsonSerialize;\nimport lombok.Getter;\nimport lombok.Setter;\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\n\n/**\n * <p>\n * \u57fa\u7840\u7528\u6237\u4fe1\u606f\u8868\n * </p>\n *\n * @author vains\n */\n@Getter\n@Setter\n@JsonSerialize\n@TableName("oauth2_basic_user")\n@JsonIgnoreProperties(ignoreUnknown = true)\npublic class Oauth2BasicUser implements UserDetails, Serializable {\n\n    @Serial\n    private static final long serialVersionUID = 1L;\n\n    /**\n     * \u81ea\u589eid\n     */\n    @TableId(value = "id", type = IdType.AUTO)\n    private Integer id;\n\n    /**\n     * \u7528\u6237\u540d\u3001\u6635\u79f0\n     */\n    private String name;\n\n    /**\n     * \u8d26\u53f7\n     */\n    private String account;\n\n    /**\n     * \u5bc6\u7801\n     */\n    private String password;\n\n    /**\n     * \u624b\u673a\u53f7\n     */\n    private String mobile;\n\n    /**\n     * \u90ae\u7bb1\n     */\n    private String email;\n\n    /**\n     * \u5934\u50cf\u5730\u5740\n     */\n    private String avatarUrl;\n\n    /**\n     * \u662f\u5426\u5df2\u5220\u9664\n     */\n    private Boolean deleted;\n\n    /**\n     * \u7528\u6237\u6765\u6e90\n     */\n    private String sourceFrom;\n\n    /**\n     * \u521b\u5efa\u65f6\u95f4\n     */\n    @TableField(fill = FieldFill.INSERT)\n    private LocalDateTime createTime;\n\n    /**\n     * \u4fee\u6539\u65f6\u95f4\n     */\n    @TableField(fill = FieldFill.INSERT_UPDATE)\n    private LocalDateTime updateTime;\n\n    /**\n     * \u6743\u9650\u4fe1\u606f\n     *  \u975e\u6570\u636e\u5e93\u5b57\u6bb5\n     */\n    @TableField(exist = false)\n    private Collection<? extends GrantedAuthority> authorities;\n\n    @Override\n    public Collection<? extends GrantedAuthority> getAuthorities() {\n        return this.authorities;\n    }\n\n    @Override\n    public String getUsername() {\n        return this.account;\n    }\n\n    @Override\n    public boolean isAccountNonExpired() {\n        return true;\n    }\n\n    @Override\n    public boolean isAccountNonLocked() {\n        return true;\n    }\n\n    @Override\n    public boolean isCredentialsNonExpired() {\n        return true;\n    }\n\n    @Override\n    public boolean isEnabled() {\n        return !this.deleted;\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"2-oauth2basicuserserviceimpl\u5b9e\u73b0userdetailsservice\u63a5\u53e3",children:["2. ",(0,r.jsx)(n.code,{children:"Oauth2BasicUserServiceImpl"}),"\u5b9e\u73b0",(0,r.jsx)(n.code,{children:"UserDetailsService"}),"\u63a5\u53e3"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.service.impl;\n\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.core.toolkit.ObjectUtils;\nimport com.baomidou.mybatisplus.core.toolkit.Wrappers;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport com.example.entity.Oauth2BasicUser;\nimport com.example.entity.SysAuthority;\nimport com.example.entity.SysRoleAuthority;\nimport com.example.entity.SysUserRole;\nimport com.example.mapper.Oauth2BasicUserMapper;\nimport com.example.mapper.SysAuthorityMapper;\nimport com.example.mapper.SysRoleAuthorityMapper;\nimport com.example.mapper.SysUserRoleMapper;\nimport com.example.service.IOauth2BasicUserService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\nimport org.springframework.stereotype.Service;\n\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Optional;\nimport java.util.Set;\nimport java.util.stream.Collectors;\n\n/**\n * <p>\n * \u57fa\u7840\u7528\u6237\u4fe1\u606f\u8868 \u670d\u52a1\u5b9e\u73b0\u7c7b\n * </p>\n *\n * @author vains\n */\n@Service\n@RequiredArgsConstructor\npublic class Oauth2BasicUserServiceImpl extends ServiceImpl<Oauth2BasicUserMapper, Oauth2BasicUser> implements IOauth2BasicUserService, UserDetailsService {\n\n    private final SysUserRoleMapper sysUserRoleMapper;\n\n    private final SysAuthorityMapper sysAuthorityMapper;\n\n    private final SysRoleAuthorityMapper sysRoleAuthorityMapper;\n\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        // \u5728Security\u4e2d\u201cusername\u201d\u5c31\u4ee3\u8868\u4e86\u7528\u6237\u767b\u5f55\u65f6\u8f93\u5165\u7684\u8d26\u53f7\uff0c\u5728\u91cd\u5199\u8be5\u65b9\u6cd5\u65f6\u5b83\u53ef\u4ee5\u4ee3\u8868\u4ee5\u4e0b\u5185\u5bb9\uff1a\u8d26\u53f7\u3001\u624b\u673a\u53f7\u3001\u90ae\u7bb1\u3001\u59d3\u540d\u7b49\n        // \u201cusername\u201d\u5728\u6570\u636e\u5e93\u4e2d\u4e0d\u4e00\u5b9a\u975e\u8981\u662f\u4e00\u6837\u7684\u5217\uff0c\u5b83\u53ef\u4ee5\u662f\u624b\u673a\u53f7\u3001\u90ae\u7bb1\uff0c\u4e5f\u53ef\u4ee5\u90fd\u662f\uff0c\u6700\u4e3b\u8981\u7684\u76ee\u7684\u5c31\u662f\u6839\u636e\u8f93\u5165\u7684\u5185\u5bb9\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u7528\u6237\u4fe1\u606f\uff0c\u5982\u4e0b\u65b9\u6240\u793a\n        // \u901a\u8fc7\u4f20\u5165\u7684\u8d26\u53f7\u4fe1\u606f\u67e5\u8be2\u5bf9\u5e94\u7684\u7528\u6237\u4fe1\u606f\n        LambdaQueryWrapper<Oauth2BasicUser> wrapper = Wrappers.lambdaQuery(Oauth2BasicUser.class)\n                .or(o -> o.eq(Oauth2BasicUser::getEmail, username))\n                .or(o -> o.eq(Oauth2BasicUser::getMobile, username))\n                .or(o -> o.eq(Oauth2BasicUser::getAccount, username));\n        Oauth2BasicUser basicUser = baseMapper.selectOne(wrapper);\n        if (basicUser == null) {\n            throw new UsernameNotFoundException("\u8d26\u53f7\u4e0d\u5b58\u5728");\n        }\n\n        // \u901a\u8fc7\u7528\u6237\u89d2\u8272\u5173\u8054\u8868\u67e5\u8be2\u5bf9\u5e94\u7684\u89d2\u8272\n        List<SysUserRole> userRoles = sysUserRoleMapper.selectList(Wrappers.lambdaQuery(SysUserRole.class).eq(SysUserRole::getUserId, basicUser.getId()));\n        List<Integer> rolesId = Optional.ofNullable(userRoles).orElse(Collections.emptyList()).stream().map(SysUserRole::getRoleId).collect(Collectors.toList());\n        if (ObjectUtils.isEmpty(rolesId)) {\n            return basicUser;\n        }\n        // \u901a\u8fc7\u89d2\u8272\u83dc\u5355\u5173\u8054\u8868\u67e5\u51fa\u5bf9\u5e94\u7684\u83dc\u5355\n        List<SysRoleAuthority> roleMenus = sysRoleAuthorityMapper.selectList(Wrappers.lambdaQuery(SysRoleAuthority.class).in(SysRoleAuthority::getRoleId, rolesId));\n        List<Integer> menusId = Optional.ofNullable(roleMenus).orElse(Collections.emptyList()).stream().map(SysRoleAuthority::getAuthorityId).collect(Collectors.toList());\n        if (ObjectUtils.isEmpty(menusId)) {\n            return basicUser;\n        }\n\n        // \u6839\u636e\u83dc\u5355ID\u67e5\u51fa\u83dc\u5355\n        List<SysAuthority> menus = sysAuthorityMapper.selectBatchIds(menusId);\n        Set<SimpleGrantedAuthority> authorities = Optional.ofNullable(menus).orElse(Collections.emptyList()).stream().map(SysAuthority::getUrl).map(SimpleGrantedAuthority::new).collect(Collectors.toSet());\n        basicUser.setAuthorities(authorities);\n        return basicUser;\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-\u7f16\u5199mybatisplus\u914d\u7f6e\u7c7b",children:"3. \u7f16\u5199MybatisPlus\u914d\u7f6e\u7c7b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.config;\n\nimport com.baomidou.mybatisplus.annotation.DbType;\nimport com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;\nimport com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;\nimport com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;\nimport org.apache.ibatis.reflection.MetaObject;\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport java.time.LocalDateTime;\n\n/**\n * MybatisPlus\u5206\u9875\u63d2\u4ef6\n *\n * @author vains\n */\n@Configuration\n// Mapper\u63a5\u53e3\u7684\u5305\u8def\u5f84\uff0c\u8bb0\u5f97\u66ff\u6362\u4e3a\u81ea\u5df1\u7684mapper\u63a5\u53e3\u5305\u8def\u5f84\n@MapperScan("com.example.mapper")\npublic class MybatisPlusConfig {\n\n    /**\n     * \u65b0\u7684\u5206\u9875\u63d2\u4ef6,\u4e00\u7f13\u548c\u4e8c\u7f13\u9075\u5faamybatis\u7684\u89c4\u5219,\n     * \u9700\u8981\u8bbe\u7f6e MybatisConfiguration#useDeprecatedExecutor = false\n     * \u907f\u514d\u7f13\u5b58\u51fa\u73b0\u95ee\u9898(\u8be5\u5c5e\u6027\u4f1a\u5728\u65e7\u63d2\u4ef6\u79fb\u9664\u540e\u4e00\u540c\u79fb\u9664)\n     */\n    @Bean\n    public MybatisPlusInterceptor mybatisPlusInterceptor() {\n        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();\n        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));\n        return interceptor;\n    }\n\n    /**\n     * \u8fd9\u91cc\u5bf9\u5e94\u7684\u662f\u5b9e\u4f53\u7c7b\u4e2d\u7684`@TableField(fill = FieldFill.INSERT_UPDATE)`\u6ce8\u89e3\n     * fill\u7684\u503c\u53ef\u4ee5\u662fINSERT\u3001UPDATE\u548cINSERT_UPDATE\n     * INSERT\uff1a\u63d2\u5165\u65f6\u586b\u5145\u5b57\u6bb5\n     * UPDATE\uff1a\u4fee\u6539\u65f6\u586b\u5145\u5b57\u6bb5\n     * INSERT_UPDATE\uff1a\u63d2\u5165\u4e0e\u4fee\u6539\u65f6\u90fd\u89e6\u53d1\n     */\n    @Bean\n    public MetaObjectHandler metaObjectHandler() {\n        return new MetaObjectHandler() {\n\n            @Override\n            public void insertFill(MetaObject metaObject) {\n                // \u6dfb\u52a0\u81ea\u52a8\u586b\u5145\u903b\u8f91\n                this.strictInsertFill(metaObject, "createTime", LocalDateTime::now, LocalDateTime.class);\n                this.strictInsertFill(metaObject, "updateTime", LocalDateTime::now, LocalDateTime.class);\n            }\n\n            @Override\n            public void updateFill(MetaObject metaObject) {\n                // \u4fee\u6539\u81ea\u52a8\u586b\u5145\u903b\u8f91\n                this.strictUpdateFill(metaObject, "updateTime", LocalDateTime::now, LocalDateTime.class);\n            }\n\n        };\n    }\n\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"4-applicationyml\u4e2d\u6dfb\u52a0\u914d\u7f6e",children:["4. ",(0,r.jsx)(n.code,{children:"application.yml"}),"\u4e2d\u6dfb\u52a0\u914d\u7f6e"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"spring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/authorization-example?serverTimezone=UTC&userUnicode=true&characterEncoding=utf-8\n    username: root\n    password: root\n\n# Mybatis-Plus \u914d\u7f6e\nmybatis-plus:\n  # \u626b\u63cfmapper\u6587\u4ef6\n  mapper-locations:\n    - classpath:com/vains/mapper/xml/*Mapper.xml\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"5-\u79fb\u9664authorizationconfig\u7684\u7528\u6237\u914d\u7f6e",children:["5. \u79fb\u9664",(0,r.jsx)(n.code,{children:"AuthorizationConfig"}),"\u7684\u7528\u6237\u914d\u7f6e"]}),"\n",(0,r.jsx)(n.p,{children:"\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.config;\n\nimport com.example.authorization.device.DeviceClientAuthenticationConverter;\nimport com.example.authorization.device.DeviceClientAuthenticationProvider;\nimport com.example.authorization.sms.SmsCaptchaGrantAuthenticationConverter;\nimport com.example.authorization.sms.SmsCaptchaGrantAuthenticationProvider;\nimport com.example.constant.SecurityConstants;\nimport com.example.util.SecurityUtils;\nimport com.nimbusds.jose.jwk.JWKSet;\nimport com.nimbusds.jose.jwk.RSAKey;\nimport com.nimbusds.jose.jwk.source.ImmutableJWKSet;\nimport com.nimbusds.jose.jwk.source.JWKSource;\nimport com.nimbusds.jose.proc.SecurityContext;\nimport lombok.SneakyThrows;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.http.MediaType;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.security.access.annotation.Secured;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.Customizer;\nimport org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;\nimport org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.oauth2.core.AuthorizationGrantType;\nimport org.springframework.security.oauth2.core.ClientAuthenticationMethod;\nimport org.springframework.security.oauth2.core.oidc.OidcScopes;\nimport org.springframework.security.oauth2.jwt.JwtClaimsSet;\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\nimport org.springframework.security.oauth2.server.authorization.JdbcOAuth2AuthorizationConsentService;\nimport org.springframework.security.oauth2.server.authorization.JdbcOAuth2AuthorizationService;\nimport org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationConsentService;\nimport org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService;\nimport org.springframework.security.oauth2.server.authorization.client.JdbcRegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClient;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.config.annotation.web.configuration.OAuth2AuthorizationServerConfiguration;\nimport org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer;\nimport org.springframework.security.oauth2.server.authorization.settings.AuthorizationServerSettings;\nimport org.springframework.security.oauth2.server.authorization.settings.ClientSettings;\nimport org.springframework.security.oauth2.server.authorization.token.JwtEncodingContext;\nimport org.springframework.security.oauth2.server.authorization.token.OAuth2TokenCustomizer;\nimport org.springframework.security.oauth2.server.authorization.token.OAuth2TokenGenerator;\nimport org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;\nimport org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;\nimport org.springframework.security.web.DefaultSecurityFilterChain;\nimport org.springframework.security.web.SecurityFilterChain;\nimport org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint;\nimport org.springframework.security.web.util.matcher.MediaTypeRequestMatcher;\n\nimport java.security.KeyPair;\nimport java.security.KeyPairGenerator;\nimport java.security.interfaces.RSAPrivateKey;\nimport java.security.interfaces.RSAPublicKey;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\n/**\n * \u8ba4\u8bc1\u914d\u7f6e\n * {@link EnableMethodSecurity} \u5f00\u542f\u5168\u5c40\u65b9\u6cd5\u8ba4\u8bc1\uff0c\u542f\u7528JSR250\u6ce8\u89e3\u652f\u6301\uff0c\u542f\u7528\u6ce8\u89e3 {@link Secured} \u652f\u6301\uff0c\n * \u5728Spring Security 6.0\u7248\u672c\u4e2d\u5c06@Configuration\u6ce8\u89e3\u4ece@EnableWebSecurity, @EnableMethodSecurity, @EnableGlobalMethodSecurity\n * \u548c @EnableGlobalAuthentication \u4e2d\u79fb\u9664\uff0c\u4f7f\u7528\u8fd9\u4e9b\u6ce8\u89e3\u9700\u624b\u52a8\u6dfb\u52a0 @Configuration \u6ce8\u89e3\n * {@link EnableWebSecurity} \u6ce8\u89e3\u6709\u4e24\u4e2a\u4f5c\u7528:\n * 1. \u52a0\u8f7d\u4e86WebSecurityConfiguration\u914d\u7f6e\u7c7b, \u914d\u7f6e\u5b89\u5168\u8ba4\u8bc1\u7b56\u7565\u3002\n * 2. \u52a0\u8f7d\u4e86AuthenticationConfiguration, \u914d\u7f6e\u4e86\u8ba4\u8bc1\u4fe1\u606f\u3002\n *\n * @author vains\n */\n@Configuration\n@EnableWebSecurity\n@EnableMethodSecurity(jsr250Enabled = true, securedEnabled = true)\npublic class AuthorizationConfig {\n\n    private static final String CUSTOM_CONSENT_PAGE_URI = "/oauth2/consent";\n\n    /**\n     * \u914d\u7f6e\u7aef\u70b9\u7684\u8fc7\u6ee4\u5668\u94fe\n     *\n     * @param http spring security\u6838\u5fc3\u914d\u7f6e\u7c7b\n     * @return \u8fc7\u6ee4\u5668\u94fe\n     * @throws Exception \u629b\u51fa\n     */\n    @Bean\n    public SecurityFilterChain authorizationServerSecurityFilterChain(HttpSecurity http,\n                                                                      RegisteredClientRepository registeredClientRepository,\n                                                                      AuthorizationServerSettings authorizationServerSettings) throws Exception {\n        // \u914d\u7f6e\u9ed8\u8ba4\u7684\u8bbe\u7f6e\uff0c\u5ffd\u7565\u8ba4\u8bc1\u7aef\u70b9\u7684csrf\u6821\u9a8c\n        OAuth2AuthorizationServerConfiguration.applyDefaultSecurity(http);\n\n        // \u65b0\u5efa\u8bbe\u5907\u7801converter\u548cprovider\n        DeviceClientAuthenticationConverter deviceClientAuthenticationConverter =\n                new DeviceClientAuthenticationConverter(\n                        authorizationServerSettings.getDeviceAuthorizationEndpoint());\n        DeviceClientAuthenticationProvider deviceClientAuthenticationProvider =\n                new DeviceClientAuthenticationProvider(registeredClientRepository);\n\n\n        http.getConfigurer(OAuth2AuthorizationServerConfigurer.class)\n                // \u5f00\u542fOpenID Connect 1.0\u534f\u8bae\u76f8\u5173\u7aef\u70b9\n                .oidc(Customizer.withDefaults())\n                // \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7528\u6237\u786e\u8ba4\u6388\u6743\u9875\n                .authorizationEndpoint(authorizationEndpoint -> authorizationEndpoint.consentPage(CUSTOM_CONSENT_PAGE_URI))\n                // \u8bbe\u7f6e\u8bbe\u5907\u7801\u7528\u6237\u9a8c\u8bc1url(\u81ea\u5b9a\u4e49\u7528\u6237\u9a8c\u8bc1\u9875)\n                .deviceAuthorizationEndpoint(deviceAuthorizationEndpoint ->\n                        deviceAuthorizationEndpoint.verificationUri("/activate")\n                )\n                // \u8bbe\u7f6e\u9a8c\u8bc1\u8bbe\u5907\u7801\u7528\u6237\u786e\u8ba4\u9875\u9762\n                .deviceVerificationEndpoint(deviceVerificationEndpoint ->\n                        deviceVerificationEndpoint.consentPage(CUSTOM_CONSENT_PAGE_URI)\n                )\n                .clientAuthentication(clientAuthentication ->\n                        // \u5ba2\u6237\u7aef\u8ba4\u8bc1\u6dfb\u52a0\u8bbe\u5907\u7801\u7684converter\u548cprovider\n                        clientAuthentication\n                                .authenticationConverter(deviceClientAuthenticationConverter)\n                                .authenticationProvider(deviceClientAuthenticationProvider)\n                );\n        http\n                // \u5f53\u672a\u767b\u5f55\u65f6\u8bbf\u95ee\u8ba4\u8bc1\u7aef\u70b9\u65f6\u91cd\u5b9a\u5411\u81f3login\u9875\u9762\n                .exceptionHandling((exceptions) -> exceptions\n                        .defaultAuthenticationEntryPointFor(\n                                new LoginUrlAuthenticationEntryPoint("/login"),\n                                new MediaTypeRequestMatcher(MediaType.TEXT_HTML)\n                        )\n                )\n                // \u5904\u7406\u4f7f\u7528access token\u8bbf\u95ee\u7528\u6237\u4fe1\u606f\u7aef\u70b9\u548c\u5ba2\u6237\u7aef\u6ce8\u518c\u7aef\u70b9\n                .oauth2ResourceServer((resourceServer) -> resourceServer\n                        .jwt(Customizer.withDefaults()));\n\n        // \u81ea\u5b9a\u4e49\u77ed\u4fe1\u8ba4\u8bc1\u767b\u5f55\u8f6c\u6362\u5668\n        SmsCaptchaGrantAuthenticationConverter converter = new SmsCaptchaGrantAuthenticationConverter();\n        // \u81ea\u5b9a\u4e49\u77ed\u4fe1\u8ba4\u8bc1\u767b\u5f55\u8ba4\u8bc1\u63d0\u4f9b\n        SmsCaptchaGrantAuthenticationProvider provider = new SmsCaptchaGrantAuthenticationProvider();\n        http.getConfigurer(OAuth2AuthorizationServerConfigurer.class)\n                // \u8ba9\u8ba4\u8bc1\u670d\u52a1\u5668\u5143\u6570\u636e\u4e2d\u6709\u81ea\u5b9a\u4e49\u7684\u8ba4\u8bc1\u65b9\u5f0f\n                .authorizationServerMetadataEndpoint(metadata -> metadata.authorizationServerMetadataCustomizer(customizer -> customizer.grantType(SecurityConstants.GRANT_TYPE_SMS_CODE)))\n                // \u6dfb\u52a0\u81ea\u5b9a\u4e49grant_type\u2014\u2014\u77ed\u4fe1\u8ba4\u8bc1\u767b\u5f55\n                .tokenEndpoint(tokenEndpoint -> tokenEndpoint\n                        .accessTokenRequestConverter(converter)\n                        .authenticationProvider(provider));\n\n        DefaultSecurityFilterChain build = http.build();\n\n        // \u4ece\u6846\u67b6\u4e2d\u83b7\u53d6provider\u4e2d\u6240\u9700\u7684bean\n        OAuth2TokenGenerator<?> tokenGenerator = http.getSharedObject(OAuth2TokenGenerator.class);\n        AuthenticationManager authenticationManager = http.getSharedObject(AuthenticationManager.class);\n        OAuth2AuthorizationService authorizationService = http.getSharedObject(OAuth2AuthorizationService.class);\n        // \u4ee5\u4e0a\u4e09\u4e2abean\u5728build()\u65b9\u6cd5\u4e4b\u540e\u8c03\u7528\u662f\u56e0\u4e3a\u8c03\u7528build\u65b9\u6cd5\u65f6\u6846\u67b6\u4f1a\u5c1d\u8bd5\u83b7\u53d6\u8fd9\u4e9b\u7c7b\uff0c\n        // \u5982\u679c\u83b7\u53d6\u4e0d\u5230\u5219\u521d\u59cb\u5316\u4e00\u4e2a\u5b9e\u4f8b\u653e\u5165SharedObject\u4e2d\uff0c\u6240\u4ee5\u8981\u5728build\u65b9\u6cd5\u8c03\u7528\u4e4b\u540e\u83b7\u53d6\n        // \u5728\u901a\u8fc7set\u65b9\u6cd5\u8bbe\u7f6e\u8fdbprovider\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u5728build\u65b9\u6cd5\u4e4b\u540e\u8c03\u7528authenticationProvider(provider)\n        // \u6846\u67b6\u4f1a\u63d0\u793aunsupported_grant_type\uff0c\u56e0\u4e3a\u5df2\u7ecf\u521d\u59cb\u5316\u5b8c\u4e86\uff0c\u5728\u6dfb\u52a0\u5c31\u4e0d\u4f1a\u751f\u6548\u4e86\n        provider.setTokenGenerator(tokenGenerator);\n        provider.setAuthorizationService(authorizationService);\n        provider.setAuthenticationManager(authenticationManager);\n\n        return build;\n    }\n\n    /**\n     * \u914d\u7f6e\u8ba4\u8bc1\u76f8\u5173\u7684\u8fc7\u6ee4\u5668\u94fe\n     *\n     * @param http spring security\u6838\u5fc3\u914d\u7f6e\u7c7b\n     * @return \u8fc7\u6ee4\u5668\u94fe\n     * @throws Exception \u629b\u51fa\n     */\n    @Bean\n    public SecurityFilterChain defaultSecurityFilterChain(HttpSecurity http) throws Exception {\n        http.authorizeHttpRequests((authorize) -> authorize\n                        // \u653e\u884c\u9759\u6001\u8d44\u6e90\n                        .requestMatchers("/assets/**", "/webjars/**", "/login", "/getCaptcha", "/getSmsCaptcha").permitAll()\n                        .anyRequest().authenticated()\n                )\n                // \u6307\u5b9a\u767b\u5f55\u9875\u9762\n                .formLogin(formLogin ->\n                        formLogin.loginPage("/login")\n                );\n        // \u6dfb\u52a0BearerTokenAuthenticationFilter\uff0c\u5c06\u8ba4\u8bc1\u670d\u52a1\u5f53\u505a\u4e00\u4e2a\u8d44\u6e90\u670d\u52a1\uff0c\u89e3\u6790\u8bf7\u6c42\u5934\u4e2d\u7684token\n        http.oauth2ResourceServer((resourceServer) -> resourceServer\n                .jwt(Customizer.withDefaults())\n                .accessDeniedHandler(SecurityUtils::exceptionHandler)\n                .authenticationEntryPoint(SecurityUtils::exceptionHandler)\n        );\n\n        return http.build();\n    }\n\n    /**\n     * \u81ea\u5b9a\u4e49jwt\uff0c\u5c06\u6743\u9650\u4fe1\u606f\u653e\u81f3jwt\u4e2d\n     *\n     * @return OAuth2TokenCustomizer\u7684\u5b9e\u4f8b\n     */\n    @Bean\n    public OAuth2TokenCustomizer<JwtEncodingContext> oAuth2TokenCustomizer() {\n        return context -> {\n            // \u68c0\u67e5\u767b\u5f55\u7528\u6237\u4fe1\u606f\u662f\u4e0d\u662fUserDetails\uff0c\u6392\u9664\u6389\u6ca1\u6709\u7528\u6237\u53c2\u4e0e\u7684\u6d41\u7a0b\n            if (context.getPrincipal().getPrincipal() instanceof UserDetails user) {\n                // \u83b7\u53d6\u7533\u8bf7\u7684scopes\n                Set<String> scopes = context.getAuthorizedScopes();\n                // \u83b7\u53d6\u7528\u6237\u7684\u6743\u9650\n                Collection<? extends GrantedAuthority> authorities = user.getAuthorities();\n                // \u63d0\u53d6\u6743\u9650\u5e76\u8f6c\u4e3a\u5b57\u7b26\u4e32\n                Set<String> authoritySet = Optional.ofNullable(authorities).orElse(Collections.emptyList()).stream()\n                        // \u83b7\u53d6\u6743\u9650\u5b57\u7b26\u4e32\n                        .map(GrantedAuthority::getAuthority)\n                        // \u53bb\u91cd\n                        .collect(Collectors.toSet());\n\n                // \u5408\u5e76scope\u4e0e\u7528\u6237\u4fe1\u606f\n                authoritySet.addAll(scopes);\n\n                JwtClaimsSet.Builder claims = context.getClaims();\n                // \u5c06\u6743\u9650\u4fe1\u606f\u653e\u5165jwt\u7684claims\u4e2d\uff08\u4e5f\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u4ee5\u6307\u5b9a\u5b57\u7b26\u5206\u5272\u7684\u5b57\u7b26\u4e32\u653e\u5165\uff09\n                claims.claim(SecurityConstants.AUTHORITIES_KEY, authoritySet);\n                // \u653e\u5165\u5176\u5b83\u81ea\u5b9a\u5185\u5bb9\n                // \u89d2\u8272\u3001\u5934\u50cf...\n            }\n        };\n    }\n\n    /**\n     * \u81ea\u5b9a\u4e49jwt\u89e3\u6790\u5668\uff0c\u8bbe\u7f6e\u89e3\u6790\u51fa\u6765\u7684\u6743\u9650\u4fe1\u606f\u7684\u524d\u7f00\u4e0e\u5728jwt\u4e2d\u7684key\n     *\n     * @return jwt\u89e3\u6790\u5668 JwtAuthenticationConverter\n     */\n    @Bean\n    public JwtAuthenticationConverter jwtAuthenticationConverter() {\n        JwtGrantedAuthoritiesConverter grantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();\n        // \u8bbe\u7f6e\u89e3\u6790\u6743\u9650\u4fe1\u606f\u7684\u524d\u7f00\uff0c\u8bbe\u7f6e\u4e3a\u7a7a\u662f\u53bb\u6389\u524d\u7f00\n        grantedAuthoritiesConverter.setAuthorityPrefix("");\n        // \u8bbe\u7f6e\u6743\u9650\u4fe1\u606f\u5728jwt claims\u4e2d\u7684key\n        grantedAuthoritiesConverter.setAuthoritiesClaimName(SecurityConstants.AUTHORITIES_KEY);\n\n        JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();\n        jwtAuthenticationConverter.setJwtGrantedAuthoritiesConverter(grantedAuthoritiesConverter);\n        return jwtAuthenticationConverter;\n    }\n\n\n    /**\n     * \u5c06AuthenticationManager\u6ce8\u5165ioc\u4e2d\uff0c\u5176\u5b83\u9700\u8981\u4f7f\u7528\u5730\u65b9\u53ef\u4ee5\u76f4\u63a5\u4eceioc\u4e2d\u83b7\u53d6\n     * @param authenticationConfiguration \u5bfc\u51fa\u8ba4\u8bc1\u914d\u7f6e\n     * @return AuthenticationManager \u8ba4\u8bc1\u7ba1\u7406\u5668\n     */\n    @Bean\n    @SneakyThrows\n    public AuthenticationManager authenticationManager(AuthenticationConfiguration authenticationConfiguration) {\n        return authenticationConfiguration.getAuthenticationManager();\n    }\n\n    /**\n     * \u914d\u7f6e\u5bc6\u7801\u89e3\u6790\u5668\uff0c\u4f7f\u7528BCrypt\u7684\u65b9\u5f0f\u5bf9\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u548c\u9a8c\u8bc1\n     *\n     * @return BCryptPasswordEncoder\n     */\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n    /**\n     * \u914d\u7f6e\u5ba2\u6237\u7aefRepository\n     *\n     * @param jdbcTemplate    db \u6570\u636e\u6e90\u4fe1\u606f\n     * @param passwordEncoder \u5bc6\u7801\u89e3\u6790\u5668\n     * @return \u57fa\u4e8e\u6570\u636e\u5e93\u7684repository\n     */\n    @Bean\n    public RegisteredClientRepository registeredClientRepository(JdbcTemplate jdbcTemplate, PasswordEncoder passwordEncoder) {\n        RegisteredClient registeredClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                // \u5ba2\u6237\u7aefid\n                .clientId("messaging-client")\n                // \u5ba2\u6237\u7aef\u79d8\u94a5\uff0c\u4f7f\u7528\u5bc6\u7801\u89e3\u6790\u5668\u52a0\u5bc6\n                .clientSecret(passwordEncoder.encode("123456"))\n                // \u5ba2\u6237\u7aef\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u57fa\u4e8e\u8bf7\u6c42\u5934\u7684\u8ba4\u8bc1\n                .clientAuthenticationMethod(ClientAuthenticationMethod.CLIENT_SECRET_BASIC)\n                // \u914d\u7f6e\u8d44\u6e90\u670d\u52a1\u5668\u4f7f\u7528\u8be5\u5ba2\u6237\u7aef\u83b7\u53d6\u6388\u6743\u65f6\u652f\u6301\u7684\u65b9\u5f0f\n                .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                .authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS)\n                // \u5ba2\u6237\u7aef\u6dfb\u52a0\u81ea\u5b9a\u4e49\u8ba4\u8bc1\n                .authorizationGrantType(new AuthorizationGrantType(SecurityConstants.GRANT_TYPE_SMS_CODE))\n                // \u6388\u6743\u7801\u6a21\u5f0f\u56de\u8c03\u5730\u5740\uff0coauth2.1\u5df2\u6539\u4e3a\u7cbe\u51c6\u5339\u914d\uff0c\u4e0d\u80fd\u53ea\u8bbe\u7f6e\u57df\u540d\uff0c\u5e76\u4e14\u5c4f\u853d\u4e86localhost\uff0c\u672c\u673a\u4f7f\u7528127.0.0.1\u8bbf\u95ee\n                .redirectUri("http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc")\n                .redirectUri("https://www.baidu.com")\n                // \u8be5\u5ba2\u6237\u7aef\u7684\u6388\u6743\u8303\u56f4\uff0cOPENID\u4e0ePROFILE\u662fIdToken\u7684scope\uff0c\u83b7\u53d6\u6388\u6743\u65f6\u8bf7\u6c42OPENID\u7684scope\u65f6\u8ba4\u8bc1\u670d\u52a1\u4f1a\u8fd4\u56deIdToken\n                .scope(OidcScopes.OPENID)\n                .scope(OidcScopes.PROFILE)\n                // \u81ea\u5b9ascope\n                .scope("message.read")\n                .scope("message.write")\n                // \u5ba2\u6237\u7aef\u8bbe\u7f6e\uff0c\u8bbe\u7f6e\u7528\u6237\u9700\u8981\u786e\u8ba4\u6388\u6743\n                .clientSettings(ClientSettings.builder().requireAuthorizationConsent(true).build())\n                .build();\n\n        // \u57fa\u4e8edb\u5b58\u50a8\u5ba2\u6237\u7aef\uff0c\u8fd8\u6709\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u5b9e\u73b0 InMemoryRegisteredClientRepository\n        JdbcRegisteredClientRepository registeredClientRepository = new JdbcRegisteredClientRepository(jdbcTemplate);\n\n        // \u521d\u59cb\u5316\u5ba2\u6237\u7aef\n        RegisteredClient repositoryByClientId = registeredClientRepository.findByClientId(registeredClient.getClientId());\n        if (repositoryByClientId == null) {\n            registeredClientRepository.save(registeredClient);\n        }\n        // \u8bbe\u5907\u7801\u6388\u6743\u5ba2\u6237\u7aef\n        RegisteredClient deviceClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                .clientId("device-message-client")\n                // \u516c\u5171\u5ba2\u6237\u7aef\n                .clientAuthenticationMethod(ClientAuthenticationMethod.NONE)\n                // \u8bbe\u5907\u7801\u6388\u6743\n                .authorizationGrantType(AuthorizationGrantType.DEVICE_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                // \u81ea\u5b9ascope\n                .scope("message.read")\n                .scope("message.write")\n                .build();\n        RegisteredClient byClientId = registeredClientRepository.findByClientId(deviceClient.getClientId());\n        if (byClientId == null) {\n            registeredClientRepository.save(deviceClient);\n        }\n\n        // PKCE\u5ba2\u6237\u7aef\n        RegisteredClient pkceClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                .clientId("pkce-message-client")\n                // \u516c\u5171\u5ba2\u6237\u7aef\n                .clientAuthenticationMethod(ClientAuthenticationMethod.NONE)\n                // \u6388\u6743\u7801\u6a21\u5f0f\uff0c\u56e0\u4e3a\u662f\u6269\u5c55\u6388\u6743\u7801\u6d41\u7a0b\uff0c\u6240\u4ee5\u6d41\u7a0b\u8fd8\u662f\u6388\u6743\u7801\u7684\u6d41\u7a0b\uff0c\u6539\u53d8\u7684\u53ea\u662f\u53c2\u6570\n                .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                // \u6388\u6743\u7801\u6a21\u5f0f\u56de\u8c03\u5730\u5740\uff0coauth2.1\u5df2\u6539\u4e3a\u7cbe\u51c6\u5339\u914d\uff0c\u4e0d\u80fd\u53ea\u8bbe\u7f6e\u57df\u540d\uff0c\u5e76\u4e14\u5c4f\u853d\u4e86localhost\uff0c\u672c\u673a\u4f7f\u7528127.0.0.1\u8bbf\u95ee\n                .redirectUri("http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc")\n                .clientSettings(ClientSettings.builder().requireProofKey(Boolean.TRUE).build())\n                // \u81ea\u5b9ascope\n                .scope("message.read")\n                .scope("message.write")\n                .build();\n        RegisteredClient findPkceClient = registeredClientRepository.findByClientId(pkceClient.getClientId());\n        if (findPkceClient == null) {\n            registeredClientRepository.save(pkceClient);\n        }\n        return registeredClientRepository;\n    }\n\n    /**\n     * \u914d\u7f6e\u57fa\u4e8edb\u7684oauth2\u7684\u6388\u6743\u7ba1\u7406\u670d\u52a1\n     *\n     * @param jdbcTemplate               db\u6570\u636e\u6e90\u4fe1\u606f\n     * @param registeredClientRepository \u4e0a\u8fb9\u6ce8\u5165\u7684\u5ba2\u6237\u7aefrepository\n     * @return JdbcOAuth2AuthorizationService\n     */\n    @Bean\n    public OAuth2AuthorizationService authorizationService(JdbcTemplate jdbcTemplate, RegisteredClientRepository registeredClientRepository) {\n        // \u57fa\u4e8edb\u7684oauth2\u8ba4\u8bc1\u670d\u52a1\uff0c\u8fd8\u6709\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u670d\u52a1\u5b9e\u73b0InMemoryOAuth2AuthorizationService\n        return new JdbcOAuth2AuthorizationService(jdbcTemplate, registeredClientRepository);\n    }\n\n    /**\n     * \u914d\u7f6e\u57fa\u4e8edb\u7684\u6388\u6743\u786e\u8ba4\u7ba1\u7406\u670d\u52a1\n     *\n     * @param jdbcTemplate               db\u6570\u636e\u6e90\u4fe1\u606f\n     * @param registeredClientRepository \u5ba2\u6237\u7aefrepository\n     * @return JdbcOAuth2AuthorizationConsentService\n     */\n    @Bean\n    public OAuth2AuthorizationConsentService authorizationConsentService(JdbcTemplate jdbcTemplate, RegisteredClientRepository registeredClientRepository) {\n        // \u57fa\u4e8edb\u7684\u6388\u6743\u786e\u8ba4\u7ba1\u7406\u670d\u52a1\uff0c\u8fd8\u6709\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u670d\u52a1\u5b9e\u73b0InMemoryOAuth2AuthorizationConsentService\n        return new JdbcOAuth2AuthorizationConsentService(jdbcTemplate, registeredClientRepository);\n    }\n\n    /**\n     * \u914d\u7f6ejwk\u6e90\uff0c\u4f7f\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\uff0c\u516c\u5f00\u7528\u4e8e\u68c0\u7d22\u5339\u914d\u6307\u5b9a\u9009\u62e9\u5668\u7684JWK\u7684\u65b9\u6cd5\n     *\n     * @return JWKSource\n     */\n    @Bean\n    public JWKSource<SecurityContext> jwkSource() {\n        KeyPair keyPair = generateRsaKey();\n        RSAPublicKey publicKey = (RSAPublicKey) keyPair.getPublic();\n        RSAPrivateKey privateKey = (RSAPrivateKey) keyPair.getPrivate();\n        RSAKey rsaKey = new RSAKey.Builder(publicKey)\n                .privateKey(privateKey)\n                .keyID(UUID.randomUUID().toString())\n                .build();\n        JWKSet jwkSet = new JWKSet(rsaKey);\n        return new ImmutableJWKSet<>(jwkSet);\n    }\n\n    /**\n     * \u751f\u6210rsa\u5bc6\u94a5\u5bf9\uff0c\u63d0\u4f9b\u7ed9jwk\n     *\n     * @return \u5bc6\u94a5\u5bf9\n     */\n    private static KeyPair generateRsaKey() {\n        KeyPair keyPair;\n        try {\n            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");\n            keyPairGenerator.initialize(2048);\n            keyPair = keyPairGenerator.generateKeyPair();\n        } catch (Exception ex) {\n            throw new IllegalStateException(ex);\n        }\n        return keyPair;\n    }\n\n    /**\n     * \u914d\u7f6ejwt\u89e3\u6790\u5668\n     *\n     * @param jwkSource jwk\u6e90\n     * @return JwtDecoder\n     */\n    @Bean\n    public JwtDecoder jwtDecoder(JWKSource<SecurityContext> jwkSource) {\n        return OAuth2AuthorizationServerConfiguration.jwtDecoder(jwkSource);\n    }\n\n    /**\n     * \u6dfb\u52a0\u8ba4\u8bc1\u670d\u52a1\u5668\u914d\u7f6e\uff0c\u8bbe\u7f6ejwt\u7b7e\u53d1\u8005\u3001\u9ed8\u8ba4\u7aef\u70b9\u8bf7\u6c42\u5730\u5740\u7b49\n     *\n     * @return AuthorizationServerSettings\n     */\n    @Bean\n    public AuthorizationServerSettings authorizationServerSettings() {\n        return AuthorizationServerSettings.builder()\n                /*\n                    \u8bbe\u7f6etoken\u7b7e\u53d1\u5730\u5740(http(s)://{ip}:{port}/context-path, http(s)://domain.com/context-path)\n                    \u5982\u679c\u9700\u8981\u901a\u8fc7ip\u8bbf\u95ee\u8fd9\u91cc\u5c31\u662fip\uff0c\u5982\u679c\u662f\u6709\u57df\u540d\u6620\u5c04\u5c31\u586b\u57df\u540d\uff0c\u901a\u8fc7\u4ec0\u4e48\u65b9\u5f0f\u8bbf\u95ee\u8be5\u670d\u52a1\u8fd9\u91cc\u5c31\u586b\u4ec0\u4e48\n                 */\n                .issuer("http://192.168.120.33:8080")\n                .build();\n    }\n\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u5230\u8fd9\u91cc\u5c31\u5b8c\u6210\u4e86\u81ea\u5b9a\u4e49\u7684",(0,r.jsx)(n.code,{children:"UserDetailsService"})]}),"\n",(0,r.jsx)(n.h2,{id:"\u516d\u6d4b\u8bd5",children:"\u516d\u3001\u6d4b\u8bd5"}),"\n",(0,r.jsxs)(n.h3,{id:"1-\u8bbf\u95eeoauth2authorize\u63a5\u53e3",children:["1. \u8bbf\u95ee",(0,r.jsx)(n.code,{children:"/oauth2/authorize"}),"\u63a5\u53e3"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"http://127.0.0.1:8080/oauth2/authorize?response_type=code&client_id=pkce-message-client&redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Flogin%2Foauth2%2Fcode%2Fmessaging-client-oidc&scope=message.read&code_challenge=kfis_wJYpmCAPO-Ap1Sc6GXyz_x2dhhMsm9FOA7eEWY&code_challenge_method=S256\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u91cd\u5b9a\u5411\u81f3\u767b\u5f55\u9875\u9762"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(67980).Z+"",width:"1512",height:"742"})}),"\n",(0,r.jsx)(n.h3,{id:"2-\u8f93\u5165\u6570\u636e\u5e93\u4e2d\u7684\u624b\u673a\u53f7\u6216\u8005\u90ae\u7bb1",children:"2. \u8f93\u5165\u6570\u636e\u5e93\u4e2d\u7684\u624b\u673a\u53f7\u6216\u8005\u90ae\u7bb1"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(95709).Z+"",width:"1512",height:"742"})}),"\n",(0,r.jsx)(n.h3,{id:"3-\u767b\u5f55\u6210\u529f\u540e\u643a\u5e26code\u91cd\u5b9a\u5411\u81f3\u56de\u8c03\u5730\u5740",children:"3. \u767b\u5f55\u6210\u529f\u540e\u643a\u5e26code\u91cd\u5b9a\u5411\u81f3\u56de\u8c03\u5730\u5740"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(9253).Z+"",width:"1512",height:"772"})}),"\n",(0,r.jsxs)(n.h2,{id:"\u4e03\u6846\u67b6\u5728\u4ec0\u4e48\u65f6\u5019\u8c03\u7528\u81ea\u5b9a\u4e49\u7684userdetailsservice",children:["\u4e03\u3001\u6846\u67b6\u5728\u4ec0\u4e48\u65f6\u5019\u8c03\u7528\u81ea\u5b9a\u4e49\u7684",(0,r.jsx)(n.code,{children:"UserDetailsService"})]}),"\n",(0,r.jsxs)(n.p,{children:["\u5728",(0,r.jsx)(n.code,{children:"loadUserByUsername"}),"\u65b9\u6cd5\u4e2d\u6253\u4e00\u4e2a\u65ad\u70b9\uff0c\u67e5\u770b\u8bf7\u6c42\u6267\u884c\u7ecf\u8fc7\u7684\u7c7b\uff0c\u53d1\u73b0\u662f\u5728",(0,r.jsx)(n.code,{children:"DaoAuthenticationProvider"}),"\u4e2d\u8c03\u7528\u7684",(0,r.jsx)(n.code,{children:"loadUserByUsername"}),"\u65b9\u6cd5\uff1b\u6240\u4ee5\u5728\u4e0a\u8fb9\u4e3a\u4e86\u7b26\u5408\u6846\u67b6\u7684\u89c4\u5219\u53bb\u5b9e\u73b0",(0,r.jsx)(n.code,{children:"UserDetails"}),"\u4e0e",(0,r.jsx)(n.code,{children:"UserDetailsService"}),"\u63a5\u53e3\uff0c\u8fd9\u6837\u6ce8\u5165ioc\u4e2d\u540e\u4e0d\u9700\u8981\u522b\u7684\u914d\u7f6e\u5373\u53ef\u751f\u6548\u3002\u5982\u679c\u770b\u8fc7\u6211\u4e4b\u524d\u6587\u7ae0\u7684\u8bfb\u8005\u53ef\u80fd\u5c31\u6bd4\u8f83\u719f\u6089\u4e86\uff0c\u8fd9\u4e00\u5feb\u513f\u7684\u4e1c\u897f\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u4e5f\u6709\u63d0\u5230\u8fc7\uff0c\u7279\u522b\u662f\u5728\u767b\u5f55\u6dfb\u52a0\u56fe\u5f62\u9a8c\u8bc1\u7801\u4e00\u6587\u4e2d\u6709\u8fc7\u8be6\u7ec6\u7684\u8bf4\u660e\u3002"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(36775).Z+"",width:"1350",height:"963"})}),"\n",(0,r.jsxs)(n.p,{children:["\u4ee3\u7801\u5df2\u63d0\u4ea4\u81f3\u7801\u4e91",(0,r.jsx)(n.a,{href:"https://gitee.com/vains-Sofia/authorization-example",children:"authorization-example"})]}),"\n",(0,r.jsx)(n.p,{children:"\u5982\u679c\u6709\u4ec0\u4e48\u95ee\u9898\u8bf7\u5728\u8bc4\u8bba\u533a\u6307\u51fa\uff0c\u4ee5\u9632\u8bef\u4eba\u5b50\u5f1f"})]})}function p(e={}){const{wrapper:n}={...(0,i.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},67980:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/100-1-62ca952608dc6f25588c307c2c14b379.webp"},95709:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/100-2-1e27becb17488332d97ef5316b87460a.webp"},9253:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/100-3-ae906c65f2bbd8456b138ccb858c7030.webp"},36775:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/100-4-d268c742e55edc13c9eda8d7bcf001f4.webp"},11151:(e,n,t)=>{t.d(n,{ah:()=>o});var r=t(67294);const i=r.createContext({});function o(e){const n=r.useContext(i);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);