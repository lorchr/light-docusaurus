"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[28403],{9205:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-11-a2316626fd99709fec2ab91ed930f07b.png"},11143:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-13-a56c560f158792bbbf45f83f928ac887.png"},19624:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-14-33eeccefbb5f60182da253a275dbb239.png"},22790:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-9-c65221eb22865eb3298752c5a8cf523b.png"},23454:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-12-56335da41f247d64b9edbdd810a95daa.png"},27402:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-5-cfc35bc45877f3ba2ec80ae6d0bb41f7.png"},27740:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-3-17f571416daf24026f1bee1fb39563e7.png"},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var s=t(96540);const a={},i=s.createContext(a);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(i.Provider,{value:n},e.children)}},36856:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-7-815f4c2d17ca4e6a53acad06a033ee4d.png"},40270:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-1-222ca7e85e0fa0571a91de2fc33cdfe9.png"},42668:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-10-be130b99114c5a3c404196d3a4662a6a.png"},51258:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-16-c6186867a1d0d214248d5d7358314712.png"},56544:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"hazelcast/Hazelcast-Management-Center","title":"Hazelcast-Management-Center","description":"- Management Center Doc","source":"@site/middleware/hazelcast/2-Hazelcast-Management-Center.md","sourceDirName":"hazelcast","slug":"/hazelcast/Hazelcast-Management-Center","permalink":"/middleware/hazelcast/Hazelcast-Management-Center","draft":false,"unlisted":false,"editUrl":"https://github.com/lorchr/light-docusaurus/tree/main/middleware/hazelcast/2-Hazelcast-Management-Center.md","tags":[],"version":"current","lastUpdatedBy":"Lorchr","lastUpdatedAt":1749279355000,"sidebarPosition":2,"frontMatter":{}}');var a=t(74848),i=t(28453);const c={},r=void 0,l={},o=[{value:"\u4e00\u3001\u90e8\u7f72\u7ba1\u7406\u4e2d\u5fc3",id:"\u4e00\u90e8\u7f72\u7ba1\u7406\u4e2d\u5fc3",level:2},{value:"\u4e8c\u3001\u5e94\u7528\u914d\u7f6e",id:"\u4e8c\u5e94\u7528\u914d\u7f6e",level:2},{value:"\u4e09\u3001\u7ba1\u7406\u4e2d\u5fc3\u8fde\u63a5\u7f13\u5b58\u96c6\u7fa4",id:"\u4e09\u7ba1\u7406\u4e2d\u5fc3\u8fde\u63a5\u7f13\u5b58\u96c6\u7fa4",level:2},{value:"\u56db\u3001\u547d\u4ee4\u884c\u67e5\u8be2\u7f13\u5b58\u6570\u636e",id:"\u56db\u547d\u4ee4\u884c\u67e5\u8be2\u7f13\u5b58\u6570\u636e",level:2},{value:"\u4e94\u3001Sql\u67e5\u8be2\u7f13\u5b58\u6570\u636e",id:"\u4e94sql\u67e5\u8be2\u7f13\u5b58\u6570\u636e",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docs.hazelcast.com/management-center/latest/getting-started/overview",children:"Management Center Doc"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docs.hazelcast.com/management-center/latest/getting-started/install",children:"Management Center Install"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://hazelcast.com/open-source-projects/downloads/archives/#hazelcast-management_center",children:"Management Center Download"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"\u4e00\u90e8\u7f72\u7ba1\u7406\u4e2d\u5fc3",children:"\u4e00\u3001\u90e8\u7f72\u7ba1\u7406\u4e2d\u5fc3"}),"\n",(0,a.jsx)(n.p,{children:"\u4ee5Docker\u90e8\u7f72\u4e3a\u4f8b"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"docker run -d \\\n --publish 35700:8080 \\\n --restart always \\\n --network dev \\\n --name hazelcast-management-center \\\n hazelcast/management-center:5.3.3\n\ndocker exec -it -u root hazelcast-management-center /bin/bash\n\ndocker cp hazelcast-management-center:/opt/hazelcast/management-center/bin/hz-mc        ./hz-mc\ndocker cp hazelcast-management-center:/opt/hazelcast/management-center/bin/mc-conf.sh   ./mc-conf.sh\ndocker cp hazelcast-management-center:/opt/hazelcast/management-center/bin/mc-start.sh  ./mc-start.sh\n"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\u5b89\u88c5\u5b8c\u6210\u540e\u6253\u5f00",(0,a.jsx)(n.a,{href:"http://localhost:35700",children:"Web\u7ba1\u7406\u9875\u9762"}),"\uff0c\u9009\u62e9 ",(0,a.jsx)(n.code,{children:"Local"})]}),"\n",(0,a.jsxs)(n.li,{children:["\u521d\u59cb\u5316\u7ba1\u7406\u5458\u8d26\u53f7\u5bc6\u7801 ",(0,a.jsx)(n.code,{children:"hazelcast"})," / ",(0,a.jsx)(n.code,{children:"Local@2023"}),"\uff0c\u5e76\u767b\u5f55"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"\u4e8c\u5e94\u7528\u914d\u7f6e",children:"\u4e8c\u3001\u5e94\u7528\u914d\u7f6e"}),"\n",(0,a.jsx)(n.p,{children:"\u914d\u7f6e\u793a\u4f8b"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"hazelcast:\n  # \u96c6\u7fa4\u540d\u79f0: \u540c\u540d\u79f0\u7684\u8282\u70b9\u7ec4\u6210\u96c6\u7fa4\uff0cthing message\u5355\u72ec\u7ec4\u6210\u96c6\u7fa4\uff0c\u5176\u4f59\u670d\u52a1\u7ec4\u6210\u96c6\u7fa4\n  cluster-name: simple-cluster\n  executor-service:\n    exec:\n      pool-size: 20\n      queue-capacity: 1000\n      statistics-enabled: true\n      split-brain-protection-ref: splitbrainprotection\n  # \u5c06\u4ee5\u4e0b\u529f\u80fd\u5f00\u653e\u7ed9hazelcast\u7ba1\u7406\u4e2d\u5fc3\n  management-center:\n    scripting-enabled: true\n    console-enabled: true\n    data-access-enabled: true\n  # \u652f\u6301\u5728\u7ba1\u7406\u4e2d\u5fc3\u4ee5sql\u7684\u5f62\u5f0f\u7ba1\u7406\u7f13\u5b58\u6570\u636e\n  jet:\n    enabled: true\n  #  # \u4f7f\u7528ip\u6307\u5b9a\u96c6\u7fa4\u5730\u5740\n  #  network:\n  #    # https://docs.hazelcast.com/hazelcast/latest/clusters/discovery-mechanisms\n  #    join:\n  #      auto-detection:\n  #        enabled: true\n  #      # https://docs.hazelcast.com/hazelcast/latest/clusters/discovering-by-tcp\n  #      tcp-ip:\n  #        enabled: true\n  #        member-list:\n  #          - 192.168.9.21\n\n  # \u4ee5\u4e0b\u914d\u7f6e\u7528\u4e8ekubernetes\u73af\u5883\u7684\u7f51\u7edc\u901a\u8baf\uff0c\u5982\u679c\u5728k8s\u4e2d\u4f7f\u7528\uff0c\u9700\u6253\u5f00\u4ee5\u4e0b\u914d\u7f6e\u5e76\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4f7fhazelcast\u5177\u6709\u8bbf\u95eekubernetes api\u7684\u6743\u9650\n  # \u6ce8\u610f\uff1a\u5982\u679c\u670d\u52a1\u8fd0\u884c\u7684\u4e0d\u662fk8s\u9ed8\u8ba4\u7684default\u547d\u540d\u7a7a\u95f4\uff0c\u8bf7\u4fee\u6539kubernetes-rbac.yaml\u4e2d\u7684namespace\u548c\u670d\u52a1\u7684k8s.yaml\u4e2d\u7684namespace\u4e00\u81f4\n  #      k8s.yaml\u4e2d\u9700\u8981\u914d\u7f6ehazelcast\u7684\u7aef\u53e3\u53f7 5701\n  #      kubectl apply -f https://raw.githubusercontent.com/hazelcast/hazelcast/master/kubernetes-rbac.yaml\n  network:\n    port:\n      port: 35701\n    join:\n      multicast:\n        enabled: false\n      kubernetes:\n        enabled: true\n        namespace: svc-pd-service\n        service-label-name: name\n        service-label-value: simple-hazelcast\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u96c6\u6210\u7ba1\u7406\u4e2d\u5fc3\u7684\u6838\u5fc3\u914d\u7f6e"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-properties",children:"# \u5c06\u4ee5\u4e0b\u529f\u80fd\u5f00\u653e\u7ed9hazelcast\u7ba1\u7406\u4e2d\u5fc3\nhazelcast.management-center.scripting-enabled: true\nhazelcast.management-center.console-enabled: true\nhazelcast.management-center.data-access-enabled: true\n\n# \u652f\u6301\u5728\u7ba1\u7406\u4e2d\u5fc3\u4ee5sql\u7684\u5f62\u5f0f\u7ba1\u7406\u7f13\u5b58\u6570\u636e\nhazelcast.jet.enabled: true\n\n# \u7ed1\u5b9ahazelcast\u7aef\u53e3\uff0c\u65b9\u4fbf\u7ba1\u7406\u4e2d\u5fc3\u8fde\u63a5\nhazelcast.network.port.port: 35701\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u4e09\u7ba1\u7406\u4e2d\u5fc3\u8fde\u63a5\u7f13\u5b58\u96c6\u7fa4",children:"\u4e09\u3001\u7ba1\u7406\u4e2d\u5fc3\u8fde\u63a5\u7f13\u5b58\u96c6\u7fa4"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\u9009\u62e9 ",(0,a.jsx)(n.code,{children:"Cluster Connections"})," \u70b9\u51fb ",(0,a.jsx)(n.code,{children:"Add"})," \u6dfb\u52a0\u7f13\u5b58\u96c6\u7fa4"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(40270).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["\u8f93\u5165 \u96c6\u7fa4\u540d\u79f0 ",(0,a.jsx)(n.code,{children:"Cluster Name"})," \u548c\u8282\u70b9\u5730\u5740 ",(0,a.jsx)(n.code,{children:"Member Addresses"})]}),"\n"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Cluster Name"}),": ",(0,a.jsx)(n.code,{children:"simple-cluster"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Member Addresses"}),": ",(0,a.jsx)(n.code,{children:"192.168.3.49:35701,192.168.3.49:35702"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(94277).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:["\u6dfb\u52a0\u5b8c\u6210\u540e\u70b9\u51fb ",(0,a.jsx)(n.code,{children:"VIEW CLUSTER"})," \u8fdb\u5165\u96c6\u7fa4\u7ba1\u7406\u9875\u9762"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(27740).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.p,{children:["\u8282\u70b9\u4fe1\u606f\n",(0,a.jsx)(n.img,{alt:"img",src:t(82611).A+"",width:"1920",height:"920"})]}),"\n",(0,a.jsxs)(n.p,{children:["Map\u7f13\u5b58\u6570\u636e\n",(0,a.jsx)(n.img,{alt:"img",src:t(27402).A+"",width:"1920",height:"920"})]}),"\n",(0,a.jsx)(n.h2,{id:"\u56db\u547d\u4ee4\u884c\u67e5\u8be2\u7f13\u5b58\u6570\u636e",children:"\u56db\u3001\u547d\u4ee4\u884c\u67e5\u8be2\u7f13\u5b58\u6570\u636e"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"\u9009\u62e9\u53f3\u4e0a\u89d2 Console \u8fdb\u5165\u67e5\u8be2\u547d\u4ee4\u884c\u4ea4\u4e92\u754c\u9762"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(57985).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["\u8f93\u5165 ",(0,a.jsx)(n.code,{children:"help"})," \u67e5\u770b\u5e2e\u52a9"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(36856).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Commands:\n-- General commands\necho true|false                      //turns on/off echo of commands (default false)\nsilent true|false                    //turns on/off silent of command output (default false)\n#<number> <command>                  //repeats <number> time <command>, replace $i in <command> with current iteration (0..<number-1>)\n&<number> <command>                  //forks <number> threads to execute <command>, replace $t in <command> with current thread number (0..<number-1>\n     When using #x or &x, is is advised to use silent true as well.\n     When using &x with m.putmany and m.removemany, each thread will get a different share of keys unless a start key index is specified\njvm                                  //displays info about the runtime\nwho                                  //displays info about the cluster\nwhoami                               //displays info about this cluster member\nns <string>                          //switch the namespace for using the distributed data structure name  <string> (e.g. queue/map/set/list name; defaults to \"default\")\n@<file>                              //executes the given <file> script. Use '//' for comments in the script\n\n-- Queue commands\nq.offer <string>                     //adds a string object to the queue\nq.poll                               //takes an object from the queue\nq.offermany <number> [<size>]        //adds indicated number of string objects to the queue ('obj<i>' or byte[<size>]) \nq.pollmany <number>                  //takes indicated number of objects from the queue\nq.iterator [remove]                  //iterates the queue, remove if specified\nq.size                               //size of the queue\nq.clear                              //clears the queue\n\n-- Set commands\ns.add <string>                       //adds a string object to the set\ns.remove <string>                    //removes the string object from the set\ns.addmany <number>                   //adds indicated number of string objects to the set ('obj<i>')\ns.removemany <number>                //takes indicated number of objects from the set\ns.iterator [remove]                  //iterates the set, removes if specified\ns.size                               //size of the set\ns.clear                              //clears the set\n\n-- Lock commands\nlock <key>                           //same as Hazelcast.getCPSubsystem().getLock(key).lock()\ntryLock <key>                        //same as Hazelcast.getCPSubsystem().getLock(key).tryLock()\ntryLock <key> <time>                 //same as tryLock <key> with timeout in seconds\nunlock <key>                         //same as Hazelcast.getCPSubsystem().getLock(key).unlock()\n\n-- Map commands\nm.put <key> <value>                  //puts an entry to the map\nm.remove <key>                       //removes the entry of given key from the map\nm.get <key>                          //returns the value of given key from the map\nm.putmany <number> [<size>] [<index>]//puts indicated number of entries to the map ('key<i>':byte[<size>], <index>+(0..<number>)\nm.removemany <number> [<index>]      //removes indicated number of entries from the map ('key<i>', <index>+(0..<number>)\n     When using &x with m.putmany and m.removemany, each thread will get a different share of keys unless a start key <index> is specified\nm.keys                               //iterates the keys of the map\nm.values                             //iterates the values of the map\nm.entries                            //iterates the entries of the map\nm.iterator [remove]                  //iterates the keys of the map, remove if specified\nm.size                               //size of the map\nm.localSize                          //local size of the map\nm.clear                              //clears the map\nm.destroy                            //destroys the map\nm.lock <key>                         //locks the key\nm.tryLock <key>                      //tries to lock the key and returns immediately\nm.tryLock <key> <time>               //tries to lock the key within given seconds\nm.unlock <key>                       //unlocks the key\nm.stats                              //shows the local stats of the map\n\n-- MultiMap commands\nmm.put <key> <value>                  //puts an entry to the multimap\nmm.get <key>                          //returns the value of given key from the multimap\nmm.remove <key>                       //removes the entry of given key from the multimap\nmm.size                               //size of the multimap\nmm.clear                              //clears the multimap\nmm.destroy                            //destroys the multimap\nmm.iterator [remove]                  //iterates the keys of the multimap, remove if specified\nmm.keys                               //iterates the keys of the multimap\nmm.values                             //iterates the values of the multimap\nmm.entries                            //iterates the entries of the multimap\nmm.lock <key>                         //locks the key\nmm.tryLock <key>                      //tries to lock the key and returns immediately\nmm.tryLock <key> <time>               //tries to lock the key within given seconds\nmm.unlock <key>                       //unlocks the key\nmm.stats                              //shows the local stats of the multimap\n\n-- List commands:\nl.add <string>                        //adds a string object to the list\nl.add <index> <string>                //adds a string object as an item with given index in the list\nl.contains <string>                   //checks if the list contains a string object\nl.remove <string>                     //removes a string object from the list\nl.remove <index>                      //removes the item with given index from the list\nl.set <index> <string>                //sets a string object to the item with given index in the list\nl.iterator [remove]                   //iterates the list, remove if specified\nl.size                                //size of the list\nl.clear                               //clears the list\n\n-- IAtomicLong commands:\na.get                                 //returns the value of the atomic long\na.set <long>                          //sets a value to the atomic long\na.inc                                 //increments the value of the atomic long by one\na.dec                                 //decrements the value of the atomic long by one\n\n-- Executor Service commands:\nexecute <echo-input>                                     //executes an echo task on random member\nexecuteOnKey <echo-input> <key>                          //executes an echo task on the member that owns the given key\nexecuteOnMember <echo-input> <memberIndex>               //executes an echo task on the member with given index\nexecuteOnMembers <echo-input>                            //executes an echo task on all of the members\ne<threadcount>.simulateLoad <task-count> <delaySeconds>  //simulates load on executor with given number of thread (e1..e16)\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["\u4ee5 ",(0,a.jsx)(n.code,{children:"pgsqltenant:magic_api_script"})," \u7f13\u5b58\u4e3a\u4f8b\uff0c\u8f93\u5165 ",(0,a.jsx)(n.code,{children:"ns pgsqltenant:magic_api_script"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["\u83b7\u53d6 Map \u7f13\u5b58\u4e2d\u7684\u6240\u6709 key\uff0c\u8f93\u5165 ",(0,a.jsx)(n.code,{children:"m.keys"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(61807).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.ol,{start:"5",children:["\n",(0,a.jsxs)(n.li,{children:["\u83b7\u53d6 ",(0,a.jsx)(n.code,{children:"GET:/modbus/point/page"})," \u5bf9\u5e94\u7684 value\uff0c\u8f93\u5165 ",(0,a.jsx)(n.code,{children:"m.get GET:/modbus/point/page"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(22790).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.ol,{start:"6",children:["\n",(0,a.jsxs)(n.li,{children:["\u5220\u9664 ",(0,a.jsx)(n.code,{children:"GET:/modbus/point/page"})," \uff0c\u8f93\u5165 ",(0,a.jsx)(n.code,{children:"m.remove GET:/modbus/point/page"}),"\uff0c\u518d\u6b21\u67e5\u8be2\uff0c\u503c\u5df2\u88ab\u5220\u9664"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(42668).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsx)(n.h2,{id:"\u4e94sql\u67e5\u8be2\u7f13\u5b58\u6570\u636e",children:"\u4e94\u3001Sql\u67e5\u8be2\u7f13\u5b58\u6570\u636e"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"\u9009\u62e9\u53f3\u4e0a\u89d2 SQL Browser \u8fdb\u5165SQL\u67e5\u8be2\u4ea4\u4e92\u754c\u9762"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(9205).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["\u6839\u636e\u6570\u636e\u5411\u5bfc\uff0c\u6620\u5c04\u6570\u636e\u6e90 ",(0,a.jsx)(n.code,{children:"Connector Wizard"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(23454).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:["\u4e0b\u62c9\u9009\u62e9\u8fde\u63a5\u5668\u7c7b\u578b",(0,a.jsx)(n.code,{children:"Choose a connector type"}),"\u548c",(0,a.jsx)(n.code,{children:"Map"}),"\uff0c\u6b64\u5904\u9009\u62e9"]}),"\n"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Choose a connector type"}),": ",(0,a.jsx)(n.code,{children:"Create mapping for hazelcast Map"}),"\uff0c\u4eceHazelcast\u7f13\u5b58\u521b\u5efa\u6620\u5c04"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Map"}),": ",(0,a.jsx)(n.code,{children:"defaultTenant:magic_api_script"}),"\uff0c\u9009\u62e9\u9700\u8981\u64cd\u4f5c\u7684\u7f13\u5b58key"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(11143).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.p,{children:["\u70b9\u51fb",(0,a.jsx)(n.code,{children:"CONFIRM & RUN"}),"\uff0c\u51fa\u73b0",(0,a.jsx)(n.code,{children:"Query executed successfully."}),"\u5373\u4e3a\u521b\u5efa\u6210\u529f"]}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsxs)(n.li,{children:["\u8fd4\u56de\u4e0a\u4e00\u9875\uff0c\u9009\u62e9 ",(0,a.jsx)(n.code,{children:"COMPOSE NEW QUERY"}),"\uff0c\u6253\u5f00SQL\u7f16\u8f91\u5668\u9875\u9762"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(19624).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.ol,{start:"5",children:["\n",(0,a.jsxs)(n.li,{children:["\u8f93\u5165SQL\uff0c\u67e5\u8be2\u7f13\u5b58\u6570\u636e ",(0,a.jsx)(n.code,{children:'SELECT * FROM "defaultTenant:magic_api_script";'})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(75921).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.ol,{start:"6",children:["\n",(0,a.jsxs)(n.li,{children:["\u8f93\u5165SQL\uff0c\u5220\u9664\u6307\u5b9a\u6570\u636e ",(0,a.jsx)(n.code,{children:"DELETE FROM \"defaultTenant:magic_api_script\" WHERE __key = 'GET:/tag/listAll';"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"img",src:t(51258).A+"",width:"1920",height:"920"})}),"\n",(0,a.jsxs)(n.p,{children:["\u518d\u6b21\u67e5\u8be2\uff0c\u6570\u636e\u5df2\u88ab\u5220\u9664 ",(0,a.jsx)(n.code,{children:"SELECT * FROM \"defaultTenant:magic_api_script\" WHERE __key = 'GET:/tag/listAll';"}),"\n",(0,a.jsx)(n.img,{alt:"img",src:t(72835).A+"",width:"1920",height:"920"})]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},57985:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-6-2ff7cf2e98bf663b62aba0ac67271c13.png"},61807:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-8-f0c3252a355c45f127f2d31af9495d50.png"},72835:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-17-2837b23b1eb09a246d8e89175b0a640d.png"},75921:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-15-4492ba84ad724fcf566ca57c20b46e35.png"},82611:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-4-1a1af9c35ff3fd22b01331a90cbd11be.png"},94277:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/2-2-d9c6cc781624a99c3b0fe849113d0817.png"}}]);