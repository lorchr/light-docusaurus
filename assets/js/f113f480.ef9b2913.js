"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[1517],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=i(n),m=o,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:o,s[1]=c;for(var i=2;i<a;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2453:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var r=n(7462),o=(n(7294),n(3905));const a={},s=void 0,c={unversionedId:"elastic/ES-vector",id:"elastic/ES-vector",title:"ES-vector",description:"Vector Offical",source:"@site/middleware/elastic/ES-vector.md",sourceDirName:"elastic",slug:"/elastic/ES-vector",permalink:"/light-docusaurus/middleware/elastic/ES-vector",draft:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/middleware/elastic/ES-vector.md",tags:[],version:"current",lastUpdatedBy:"Hui Liu",lastUpdatedAt:1696095236,formattedLastUpdatedAt:"2023\u5e749\u670830\u65e5",frontMatter:{}},l={},i=[{value:"Docker\u5b89\u88c5",id:"docker\u5b89\u88c5",level:2},{value:"\u5411ES\u63d2\u5165\u6570\u636e",id:"\u5411es\u63d2\u5165\u6570\u636e",level:2}],p={toc:i},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://vector.dev/"},"Vector Offical"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://vector.dev/docs/setup/installation/platforms/docker/"},"Vector Offical"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/vectordotdev/vector"},"Vector Github")),(0,o.kt)("h2",{id:"docker\u5b89\u88c5"},"Docker\u5b89\u88c5"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u51c6\u5907\u6570\u636e\u811a\u672c")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'cat <<-EOF > $PWD/vector.toml\n[api]\nenabled = true\naddress = "0.0.0.0:8686"\n\n[sources.demo_logs]\ntype = "demo_logs"\ninterval = 1.0\nformat = "json"\n\n[sinks.console]\ninputs = ["demo_logs"]\ntarget = "stdout"\ntype = "console"\nencoding.codec = "json"\nEOF\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"\u8fd0\u884c\u955c\u50cf")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# Start\ndocker run \\\n  -d \\\n  -v $PWD/vector.toml:/etc/vector/vector.toml:ro \\\n  -p 8686:8686 \\\n  timberio/vector:0.31.0-debian\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"\u5176\u4ed6\u547d\u4ee4")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'# Stop\ndocker stop timberio/vector\n\n# Reload\ndocker kill --signal=HUP timberio/vector\n\n# Restart\ndocker restart -f $(docker ps -aqf "name=vector")\n\n# Observe\n# To tail the logs from your Vector image:\ndocker logs -f $(docker ps -aqf "name=vector")\n# To access metrics from your Vector image:\nvector top\n\n# Uninstall\ndocker rm timberio/vector\n')),(0,o.kt)("h2",{id:"\u5411es\u63d2\u5165\u6570\u636e"},"\u5411ES\u63d2\u5165\u6570\u636e"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'[sources.in]\n  type = "generator"\n  format = "syslog"\n  interval = 0.01\n  count = 100000\n\n[transforms.clone_message]\n  type = "add_fields"\n  inputs = ["in"]\n  fields.raw = "{{ message }}"\n\n[transforms.parser]\n  # General\n  type = "regex_parser"\n  inputs = ["clone_message"]\n  field = "message" # optional, default\n  patterns = [\'^<(?P<priority>\\d*)>(?P<version>\\d) (?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z) (?P<hostname>\\w+\\.\\w+) (?P<application>\\w+) (?P<pid>\\d+) (?P<mid>ID\\d+) - (?P<message>.*)$\']\n\n[transforms.coercer]\n  type = "coercer"\n  inputs = ["parser"]\n  types.timestamp = "timestamp"\n  types.version = "int"\n  types.priority = "int"\n\n[sinks.out_console]\n  # General\n  type = "console"\n  inputs = ["coercer"]\n  target = "stdout"\n\n  # Encoding\n  encoding.codec = "json"\n\n\n[sinks.out_clickhouse]\n  host = "http://host.docker.internal:8123"\n  inputs = ["coercer"]\n  table = "syslog"\n  type = "clickhouse"\n\n  encoding.only_fields = ["application", "hostname", "message", "mid", "pid", "priority", "raw", "timestamp", "version"]\n  encoding.timestamp_format = "unix"\n\n[sinks.out_es]\n  # General\n  type = "elasticsearch"\n  inputs = ["coercer"]\n  compression = "none"\n  endpoint = "http://host.docker.internal:9200"\n  index = "syslog-%F"\n\n  # Encoding\n\n  # Healthcheck\n  healthcheck.enabled = true\n')),(0,o.kt)("p",null,"\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e2a\u6d41\u6c34\u7ebf\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"source.in \u751f\u6210syslog\u7684\u6a21\u62df\u6570\u636e\uff0c\u751f\u621010w\u6761\uff0c\u751f\u6210\u95f4\u9694\u548c0.01\u79d2"),(0,o.kt)("li",{parentName:"ul"},"transforms.clone_message \u628a\u539f\u59cb\u6d88\u606f\u590d\u5236\u4e00\u4efd\uff0c\u8fd9\u6837\u62bd\u53d6\u7684\u4fe1\u606f\u540c\u65f6\u53ef\u4ee5\u4fdd\u7559\u539f\u59cb\u6d88\u606f"),(0,o.kt)("li",{parentName:"ul"},"transforms.parser \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u6309\u7167syslog\u7684\u5b9a\u4e49\uff0c\u62bd\u53d6\u51faapplication\uff0chostname\uff0cmessage \uff0cmid \uff0cpid \uff0c- priority \uff0ctimestamp \uff0cversion \u8fd9\u51e0\u4e2a\u5b57\u6bb5"),(0,o.kt)("li",{parentName:"ul"},"transforms.coercer \u6570\u636e\u7c7b\u578b\u8f6c\u5316"),(0,o.kt)("li",{parentName:"ul"},"sinks.out_console \u628a\u751f\u6210\u7684\u6570\u636e\u6253\u5370\u5230\u63a7\u5236\u53f0\uff0c\u4f9b\u5f00\u53d1\u8c03\u8bd5"),(0,o.kt)("li",{parentName:"ul"},"sinks.out_clickhouse \u628a\u751f\u6210\u7684\u6570\u636e\u53d1\u9001\u5230Clickhouse"),(0,o.kt)("li",{parentName:"ul"},"sinks.out_es \u628a\u751f\u6210\u7684\u6570\u636e\u53d1\u9001\u5230ES")))}d.isMDXComponent=!0}}]);