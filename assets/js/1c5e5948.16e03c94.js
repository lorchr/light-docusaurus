"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[7437],{85788:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var t=r(85893),i=r(11151);const o={},s="\u4e00\u3001Quick Start",a={id:"zh-cn/spring-security/oauth2/Spring-Authorization-Server-Usage",title:"Spring-Authorization-Server-Usage",description:"- Getting Started",source:"@site/docs/zh-cn/spring-security/oauth2/1-Spring-Authorization-Server-Usage.md",sourceDirName:"zh-cn/spring-security/oauth2",slug:"/zh-cn/spring-security/oauth2/Spring-Authorization-Server-Usage",permalink:"/light-docusaurus/docs/zh-cn/spring-security/oauth2/Spring-Authorization-Server-Usage",draft:!1,unlisted:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/spring-security/oauth2/1-Spring-Authorization-Server-Usage.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"troch",previous:{title:"OAuth2.1-Endpoints",permalink:"/light-docusaurus/docs/zh-cn/spring-security/oauth2/OAuth2.1-Endpoints"},next:{title:"Add-Customeized-Grant-Type",permalink:"/light-docusaurus/docs/zh-cn/spring-security/oauth2/Add-Customeized-Grant-Type"}},c={},u=[{value:"1.1 \u914d\u7f6e\u7c7b",id:"11-\u914d\u7f6e\u7c7b",level:2},{value:"1.2 \u6d4b\u8bd5\u6d41\u7a0b",id:"12-\u6d4b\u8bd5\u6d41\u7a0b",level:2},{value:"3.1 WebSecurityConfig",id:"31-websecurityconfig",level:2},{value:"3.2 AuthorizationServerConfig",id:"32-authorizationserverconfig",level:2},{value:"4.1 \u5f15\u5165JDBC\u4f9d\u8d56",id:"41-\u5f15\u5165jdbc\u4f9d\u8d56",level:2},{value:"4.2 \u521d\u59cb\u5316\u6570\u636e\u5e93\u8868\u5e76\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f",id:"42-\u521d\u59cb\u5316\u6570\u636e\u5e93\u8868\u5e76\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f",level:2},{value:"4.3 \u4fee\u6539Spring Security\u548cSpring authorization Server\u7684\u914d\u7f6e",id:"43-\u4fee\u6539spring-security\u548cspring-authorization-server\u7684\u914d\u7f6e",level:2},{value:"Spring Security",id:"spring-security",level:3},{value:"Spring authorization Server",id:"spring-authorization-server",level:3},{value:"4.4 \u521d\u59cb\u5316\u8868\u6570\u636e",id:"44-\u521d\u59cb\u5316\u8868\u6570\u636e",level:2},{value:"5.1 \u83b7\u53d6token",id:"51-\u83b7\u53d6token",level:2},{value:"5.2 \u9ed8\u8ba4Token\u89e3\u6790",id:"52-\u9ed8\u8ba4token\u89e3\u6790",level:2},{value:"5.3 \u81ea\u5b9a\u4e49Header\u53caClaim\u5185\u5bb9",id:"53-\u81ea\u5b9a\u4e49header\u53caclaim\u5185\u5bb9",level:2},{value:"5.4 \u65b0\u7684Token\u89e3\u6790",id:"54-\u65b0\u7684token\u89e3\u6790",level:2},{value:"6.1 \u5f00\u542fOIDC",id:"61-\u5f00\u542foidc",level:2},{value:"6.2 \u7528\u6237\u7aef\u70b9",id:"62-\u7528\u6237\u7aef\u70b9",level:2},{value:"6.3 \u67e5\u770bOpenID\u7684\u914d\u7f6e",id:"63-\u67e5\u770bopenid\u7684\u914d\u7f6e",level:2},{value:"6.4 \u5ba2\u6237\u7aef\u6ce8\u518c\u7aef\u70b9",id:"64-\u5ba2\u6237\u7aef\u6ce8\u518c\u7aef\u70b9",level:2},{value:"6.5 \u6ce8\u518c\u5ba2\u6237\u7aef",id:"65-\u6ce8\u518c\u5ba2\u6237\u7aef",level:3},{value:"6.6 \u6ce8\u610f\u4e8b\u9879",id:"66-\u6ce8\u610f\u4e8b\u9879",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.ah)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/getting-started.html",children:"Getting Started"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/spring-projects/spring-authorization-server/tree/main/samples/default-authorizationserver",children:"Spring Samples"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/spring-projects/spring-security-samples/tree/main/servlet/spring-boot/java/oauth2",children:"\u5b98\u65b9Demo spring-security-samples"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html",children:"\u7406\u89e3OAuth 2.0"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://zhuanlan.zhihu.com/p/538443308",children:"Spring Authorization Server 0.3.0 \u5b9e\u6218\uff08OAuth2.1\u534f\u8bae\u548cOpenID Connect 1.0\u534f\u8bae\uff09"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://blog.csdn.net/baidu_28068985/article/details/128431612",children:"Spring Authorization Server1.0 \u4ecb\u7ecd\u4e0e\u4f7f\u7528"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/krycai/gc-framework/tree/master/gc-oauth2",children:"gc-oauth2"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"\u4e00quick-start",children:"\u4e00\u3001Quick Start"}),"\n",(0,t.jsx)(n.p,{children:"\u6b64\u914d\u7f6e\u4e2d\uff0cSpring Security \u53ca Spring Authorization Server\u914d\u7f6e\u90fd\u5728\u540c\u4e00\u4e2a\u914d\u7f6e\u7c7b\u4e2d"}),"\n",(0,t.jsx)(n.h2,{id:"11-\u914d\u7f6e\u7c7b",children:"1.1 \u914d\u7f6e\u7c7b"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.service.auth.server.config;\n\nimport com.nimbusds.jose.jwk.JWKSet;\nimport com.nimbusds.jose.jwk.RSAKey;\nimport com.nimbusds.jose.jwk.source.ImmutableJWKSet;\nimport com.nimbusds.jose.jwk.source.JWKSource;\nimport com.nimbusds.jose.proc.SecurityContext;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.security.config.Customizer;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.oauth2.core.AuthorizationGrantType;\nimport org.springframework.security.oauth2.core.ClientAuthenticationMethod;\nimport org.springframework.security.oauth2.core.oidc.OidcScopes;\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\nimport org.springframework.security.oauth2.server.authorization.client.InMemoryRegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClient;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.config.annotation.web.configuration.OAuth2AuthorizationServerConfiguration;\nimport org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer;\nimport org.springframework.security.oauth2.server.authorization.settings.AuthorizationServerSettings;\nimport org.springframework.security.oauth2.server.authorization.settings.ClientSettings;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\nimport org.springframework.security.web.SecurityFilterChain;\nimport org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint;\n\nimport java.security.KeyPair;\nimport java.security.KeyPairGenerator;\nimport java.security.interfaces.RSAPrivateKey;\nimport java.security.interfaces.RSAPublicKey;\nimport java.util.UUID;\n\n/**\n * Authentication Server \u914d\u7f6e\n * < a href="https://github.com/spring-projects/spring-authorization-server/tree/main/samples/default-authorizationserver">\u5b98\u65b9Demo</>\n *\n * @author Hui Liu\n * @date 2023/5/4\n */\n@Configuration\npublic class OAuth2AuthorizationServerConfig {\n\n    /**\n     * A Spring Security filter chain for the <a href="https://docs.spring.io/spring-authorization-server/docs/current/reference/html/protocol-endpoints.html">Protocol Endpoints</a> .\n     *\n     * @param http\n     * @return\n     * @throws Exception\n     */\n    @Bean\n    @Order(1)\n    public SecurityFilterChain authorizationServerSecurityFilterChain(HttpSecurity http)\n            throws Exception {\n        OAuth2AuthorizationServerConfiguration.applyDefaultSecurity(http);\n        http.getConfigurer(OAuth2AuthorizationServerConfigurer.class)\n                .oidc(Customizer.withDefaults());    // Enable OpenID Connect 1.0\n        http\n                // Redirect to the login page when not authenticated from the\n                // authorization endpoint\n                .exceptionHandling((exceptions) -> exceptions\n                        .authenticationEntryPoint(\n                                new LoginUrlAuthenticationEntryPoint("/login"))\n                )\n                // Accept access tokens for User Info and/or Client Registration\n                .oauth2ResourceServer(OAuth2ResourceServerConfigurer::jwt);\n\n        return http.build();\n    }\n\n    /**\n     * A Spring Security filter chain for <a href="https://docs.spring.io/spring-security/reference/servlet/authentication/index.html">authentication</a>.\n     *\n     * @param http\n     * @return\n     * @throws Exception\n     */\n    @Bean\n    @Order(2)\n    public SecurityFilterChain defaultSecurityFilterChain(HttpSecurity http)\n            throws Exception {\n        http\n                .authorizeHttpRequests((authorize) -> authorize\n                        .anyRequest().authenticated()\n                )\n                // Form login handles the redirect to the login page from the\n                // authorization server filter chain\n                .formLogin(Customizer.withDefaults());\n\n        return http.build();\n    }\n\n    /**\n     * An instance of <a href="https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/core/userdetails/UserDetailsService.html">UserDetailsService</a> for retrieving users to authenticate.\n     *\n     * @return\n     */\n    @Bean\n    public UserDetailsService userDetailsService() {\n       UserDetails userDetails = User.withDefaultPasswordEncoder()\n               .username("user")\n                .password("password")\n                .roles("USER")\n                .build();\n\n        return new InMemoryUserDetailsManager(userDetails);\n    }\n\n    /**\n     * An instance of <a href="https://docs.spring.io/spring-authorization-server/docs/current/reference/html/core-model-components.html#registered-client-repository">RegisteredClientRepository</a> for managing clients.\n     *\n     * @return\n     */\n    @Bean\n    public RegisteredClientRepository registeredClientRepository() {\n        RegisteredClient registeredClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                .clientId("messaging-client")\n                .clientSecret("{noop}secret")\n                .clientAuthenticationMethod(ClientAuthenticationMethod.CLIENT_SECRET_BASIC)\n                .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                .authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS)\n                .redirectUri("http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc")\n                .redirectUri("http://127.0.0.1:8080/authorized")\n                .scope(OidcScopes.OPENID)\n                .scope(OidcScopes.PROFILE)\n                .scope("message.read")\n                .scope("message.write")\n                .clientSettings(ClientSettings.builder().requireAuthorizationConsent(true).build())\n                .build();\n\n        return new InMemoryRegisteredClientRepository(registeredClient);\n    }\n\n    /**\n     * An instance of com.nimbusds.jose.jwk.source.JWKSource for signing access tokens.\n     *\n     * @return\n     */\n    @Bean\n    public JWKSource<SecurityContext> jwkSource() {\n        KeyPair keyPair = generateRsaKey();\n        RSAPublicKey publicKey = (RSAPublicKey) keyPair.getPublic();\n        RSAPrivateKey privateKey = (RSAPrivateKey) keyPair.getPrivate();\n        RSAKey rsaKey = new RSAKey.Builder(publicKey)\n                .privateKey(privateKey)\n                .keyID(UUID.randomUUID().toString())\n                .build();\n        JWKSet jwkSet = new JWKSet(rsaKey);\n        return new ImmutableJWKSet<>(jwkSet);\n    }\n\n    /**\n     * An instance of java.security.KeyPair with keys generated on startup used to create the JWKSource above.\n     *\n     * @return\n     */\n    private static KeyPair generateRsaKey() {\n        KeyPair keyPair;\n        try {\n            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");\n            keyPairGenerator.initialize(2048);\n            keyPair = keyPairGenerator.generateKeyPair();\n        } catch (Exception ex) {\n            throw new IllegalStateException(ex);\n        }\n        return keyPair;\n    }\n\n    /**\n     * An instance of <a href="https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/oauth2/jwt/JwtDecoder.html">JwtDecoder</a> for decoding signed access tokens.\n     *\n     * @param jwkSource\n     * @return\n     */\n    @Bean\n    public JwtDecoder jwtDecoder(JWKSource<SecurityContext> jwkSource) {\n        return OAuth2AuthorizationServerConfiguration.jwtDecoder(jwkSource);\n    }\n\n    /**\n     * An instance of <a href="https://docs.spring.io/spring-authorization-server/docs/current/reference/html/configuration-model.html#configuring-authorization-server-settings">AuthorizationServerSettings</a> to configure Spring Authorization Server.\n     *\n     * @return\n     */\n    @Bean\n    public AuthorizationServerSettings authorizationServerSettings() {\n        return AuthorizationServerSettings.builder().build();\n    }\n\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"12-\u6d4b\u8bd5\u6d41\u7a0b",children:"1.2 \u6d4b\u8bd5\u6d41\u7a0b"}),"\n",(0,t.jsxs)(n.p,{children:["\u5177\u4f53\u89c1",(0,t.jsx)(n.a,{href:"/light-docusaurus/docs/zh-cn/spring-security/oauth2/OAuth2.1-Endpoints",children:"OAuth2\u5f00\u653e\u7aef\u70b9"})]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u8c03\u7528\u6388\u6743\u63a5\u53e3"}),"\n",(0,t.jsx)(n.li,{children:"\u767b\u5f55\u8d26\u6237"}),"\n",(0,t.jsx)(n.li,{children:"\u786e\u8ba4\u6388\u6743"}),"\n",(0,t.jsx)(n.li,{children:"\u83b7\u53d6token"}),"\n",(0,t.jsx)(n.li,{children:"\u8bbf\u95ee\u63a5\u53e3"}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"\u4e8c\u9ed8\u8ba4\u914d\u7f6e",children:"\u4e8c\u3001\u9ed8\u8ba4\u914d\u7f6e"}),"\n",(0,t.jsxs)(n.p,{children:["\u5728",(0,t.jsx)(n.code,{children:"Quick Start"}),"\u4e2d\u5df2\u7ecf\u901a\u8fc7\u6700\u5c0f\u914d\u7f6e\uff0c\u5b8c\u6210\u4e86\u4e00\u4e2a",(0,t.jsx)(n.code,{children:"Spring Authorization Server"}),"\u9879\u76ee"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Spring Authorization Server"}),"\u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b9e\u73b0\u6700\u5c0f\u914d\u7f6e\u7684\u9ed8\u8ba4\u914d\u7f6e\u5f62\u5f0f\u3002\u5c31\u662f\u901a\u8fc7",(0,t.jsx)(n.code,{children:"OAuth2AuthorizationServerConfiguration"}),"\u8fd9\u4e2a\u7c7b\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'/*\n * Copyright 2020-2021 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.security.config.annotation.web.configuration;\n\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport com.nimbusds.jose.JWSAlgorithm;\nimport com.nimbusds.jose.jwk.source.JWKSource;\nimport com.nimbusds.jose.proc.JWSKeySelector;\nimport com.nimbusds.jose.proc.JWSVerificationKeySelector;\nimport com.nimbusds.jose.proc.SecurityContext;\nimport com.nimbusds.jwt.proc.ConfigurableJWTProcessor;\nimport com.nimbusds.jwt.proc.DefaultJWTProcessor;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.Ordered;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configurers.oauth2.server.authorization.OAuth2AuthorizationServerConfigurer;\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\nimport org.springframework.security.oauth2.jwt.NimbusJwtDecoder;\nimport org.springframework.security.oauth2.server.authorization.config.ProviderSettings;\nimport org.springframework.security.web.SecurityFilterChain;\nimport org.springframework.security.web.util.matcher.RequestMatcher;\n\n/**\n * {@link Configuration} for OAuth 2.0 Authorization Server support.\n *\n * @author Joe Grandja\n * @since 0.0.1\n * @see OAuth2AuthorizationServerConfigurer\n */\n@Configuration(proxyBeanMethods = false)\npublic class OAuth2AuthorizationServerConfiguration {\n\n   @Bean\n   @Order(Ordered.HIGHEST_PRECEDENCE)\n   public SecurityFilterChain authorizationServerSecurityFilterChain(HttpSecurity http) throws Exception {\n      applyDefaultSecurity(http);\n      return http.build();\n   }\n\n   // @formatter:off\n   public static void applyDefaultSecurity(HttpSecurity http) throws Exception {\n      OAuth2AuthorizationServerConfigurer<HttpSecurity> authorizationServerConfigurer =\n            new OAuth2AuthorizationServerConfigurer<>();\n      RequestMatcher endpointsMatcher = authorizationServerConfigurer\n            .getEndpointsMatcher();\n\n      http\n         .requestMatcher(endpointsMatcher)\n         .authorizeRequests(authorizeRequests ->\n            authorizeRequests.anyRequest().authenticated()\n         )\n         .csrf(csrf -> csrf.ignoringRequestMatchers(endpointsMatcher))\n         .apply(authorizationServerConfigurer);\n   }\n   // @formatter:on\n\n   public static JwtDecoder jwtDecoder(JWKSource<SecurityContext> jwkSource) {\n      Set<JWSAlgorithm> jwsAlgs = new HashSet<>();\n      jwsAlgs.addAll(JWSAlgorithm.Family.RSA);\n      jwsAlgs.addAll(JWSAlgorithm.Family.EC);\n      jwsAlgs.addAll(JWSAlgorithm.Family.HMAC_SHA);\n      ConfigurableJWTProcessor<SecurityContext> jwtProcessor = new DefaultJWTProcessor<>();\n      JWSKeySelector<SecurityContext> jwsKeySelector =\n            new JWSVerificationKeySelector<>(jwsAlgs, jwkSource);\n      jwtProcessor.setJWSKeySelector(jwsKeySelector);\n      // Override the default Nimbus claims set verifier as NimbusJwtDecoder handles it instead\n      jwtProcessor.setJWTClaimsSetVerifier((claims, context) -> {\n      });\n      return new NimbusJwtDecoder(jwtProcessor);\n   }\n\n   @Bean\n   RegisterMissingBeanPostProcessor registerMissingBeanPostProcessor() {\n      RegisterMissingBeanPostProcessor postProcessor = new RegisterMissingBeanPostProcessor();\n      postProcessor.addBeanDefinition(ProviderSettings.class, () -> ProviderSettings.builder().build());\n      return postProcessor;\n   }\n\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\u8fd9\u91cc\u6ce8\u5165\u4e00\u4e2a\u53eb\u505aauthorizationServerSecurityFilterChain\u7684bean\uff0c\u8fd9\u8ddf\u4e4b\u524d",(0,t.jsx)(n.code,{children:"Quick Start"}),"\u9879\u76ee\u65f6\u5b9e\u73b0\u7684\u57fa\u672c\u662f\u76f8\u540c\u7684\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u6709\u4e86\u8fd9\u4e2abean\uff0c\u5c31\u4f1a\u652f\u6301\u5982\u4e0b\u534f\u8bae\u7aef\u70b9\uff1a"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/protocol-endpoints.html#oauth2-authorization-endpoint",children:"OAuth2 Authorization endpoint"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/protocol-endpoints.html#oauth2-token-endpoint",children:"OAuth2 Token endpoint"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/protocol-endpoints.html#oauth2-token-introspection-endpoint",children:"OAuth2 Token Introspection endpoint"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/protocol-endpoints.html#oauth2-token-revocation-endpoint",children:"OAuth2 Token Revocation endpoint"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/protocol-endpoints.html#oauth2-authorization-server-metadata-endpoint",children:"OAuth2 Authorization Server Metadata endpoint"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/protocol-endpoints.html#jwk-set-endpoint",children:"JWK Set endpoint"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/protocol-endpoints.html#oidc-provider-configuration-endpoint",children:"OpenID Connect 1.0 Provider Configuration endpoint"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/protocol-endpoints.html#oidc-user-info-endpoint",children:"OpenID Connect 1.0 UserInfo endpoint"})}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"\u4e09\u6807\u51c6\u914d\u7f6e",children:"\u4e09\u3001\u6807\u51c6\u914d\u7f6e"}),"\n",(0,t.jsxs)(n.p,{children:["\u57fa\u4e8e",(0,t.jsx)(n.code,{children:"OAuth2AuthorizationServerConfiguration"}),"\u8fd9\u4e2a\u7c7b\u6765\u5b9e\u73b0\u4e00\u4e2a",(0,t.jsx)(n.code,{children:"Authorization Server"}),"\u3002"]}),"\n",(0,t.jsxs)(n.p,{children:["\u5c06 ",(0,t.jsx)(n.code,{children:"Spring Security"}),"\u548c",(0,t.jsx)(n.code,{children:"OAuth2 Authorization Server"}),"\u7684\u914d\u7f6e\u5206\u5f00\n",(0,t.jsx)(n.code,{children:"Spring Security"})," \u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"WebSecurityConfig"})," \u7c7b\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684",(0,t.jsx)(n.code,{children:"Authorization Server"}),"\u914d\u7f6e\u7c7b ",(0,t.jsx)(n.code,{children:"AuthorizationServerConfig"}),"\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"31-websecurityconfig",children:"3.1 WebSecurityConfig"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.service.auth.server.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.security.config.Customizer;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\nimport org.springframework.security.web.SecurityFilterChain;\n\n/**\n * Spring Security\u914d\u7f6e\u7c7b\n *\n * @author Hui Liu\n * @date 2023/5/4\n */\n@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig {\n\n    /**\n     * \u8fd9\u4e2a\u4e5f\u662f\u4e2aSpring Security\u7684\u8fc7\u6ee4\u5668\u94fe\uff0c\u7528\u4e8eSpring Security\u7684\u8eab\u4efd\u8ba4\u8bc1\u3002\n     *\n     * @param http\n     * @return\n     * @throws Exception\n     */\n    @Bean\n    @Order(2)\n    public SecurityFilterChain defaultSecurityFilterChain(HttpSecurity http)\n            throws Exception {\n        http\n                .authorizeHttpRequests((authorize) -> authorize\n                        .anyRequest().authenticated()\n                )\n                // Form login handles the redirect to the login page from the\n                // authorization server filter chain\n                .formLogin(Customizer.withDefaults());\n\n        return http.build();\n    }\n\n    /**\n     * \u914d\u7f6e\u7528\u6237\u4fe1\u606f\uff0c\u6216\u8005\u914d\u7f6e\u7528\u6237\u6570\u636e\u6765\u6e90\uff0c\u4e3b\u8981\u7528\u4e8e\u7528\u6237\u7684\u68c0\u7d22\u3002\n     *\n     * @return\n     */\n    @Bean\n    public UserDetailsService userDetailsService() {\n       UserDetails userDetails = User.withDefaultPasswordEncoder()\n               .username("user")\n                .password("password")\n                .roles("USER")\n                .build();\n\n        return new InMemoryUserDetailsManager(userDetails);\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"32-authorizationserverconfig",children:"3.2 AuthorizationServerConfig"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.service.auth.server.config;\n\nimport com.nimbusds.jose.jwk.JWKSet;\nimport com.nimbusds.jose.jwk.RSAKey;\nimport com.nimbusds.jose.jwk.source.ImmutableJWKSet;\nimport com.nimbusds.jose.jwk.source.JWKSource;\nimport com.nimbusds.jose.proc.SecurityContext;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.security.oauth2.core.AuthorizationGrantType;\nimport org.springframework.security.oauth2.core.ClientAuthenticationMethod;\nimport org.springframework.security.oauth2.core.oidc.OidcScopes;\nimport org.springframework.security.oauth2.server.authorization.client.InMemoryRegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClient;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.config.annotation.web.configuration.OAuth2AuthorizationServerConfiguration;\nimport org.springframework.security.oauth2.server.authorization.settings.AuthorizationServerSettings;\nimport org.springframework.security.oauth2.server.authorization.settings.ClientSettings;\n\nimport java.security.KeyPair;\nimport java.security.KeyPairGenerator;\nimport java.security.interfaces.RSAPrivateKey;\nimport java.security.interfaces.RSAPublicKey;\nimport java.util.UUID;\n\n/**\n * OAuth2 \u8ba4\u8bc1\u670d\u52a1\u5668\u914d\u7f6e\n * <a href="https://github.com/spring-projects/spring-authorization-server/tree/main/samples/default-authorizationserver">\u5b98\u65b9Demo</>\n * \n * @see AuthorizationServerSettings#builder()\n * @author Hui Liu\n * @date 2023/5/4\n */\n@Configuration\n@Import(OAuth2AuthorizationServerConfiguration.class)\npublic class AuthorizationServerConfig {\n\n    /**\n     * oauth2 \u7528\u4e8e\u7b2c\u4e09\u65b9\u8ba4\u8bc1\uff0cRegisteredClientRepository \u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u7b2c\u4e09\u65b9\uff08\u6bcf\u4e2a\u7b2c\u4e09\u65b9\u5c31\u662f\u4e00\u4e2a\u5ba2\u6237\u7aef\uff09\n     *\n     * @return\n     */\n    @Bean\n    public RegisteredClientRepository registeredClientRepository() {\n        RegisteredClient registeredClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                .clientId("messaging-client")\n                .clientSecret("{noop}secret")\n                .clientAuthenticationMethod(ClientAuthenticationMethod.CLIENT_SECRET_BASIC)\n                .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                .authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS)\n                .redirectUri("http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc")\n                .redirectUri("http://127.0.0.1:8080/authorized")\n                .scope(OidcScopes.OPENID)\n                .scopes(OidcScopes.PROFILE)\n                .scope("message.read")\n                .scope("message.write")\n                .clientSettings(ClientSettings.builder().requireAuthorizationConsent(true).build())\n                .build();\n\n        return new InMemoryRegisteredClientRepository(registeredClient);\n    }\n\n    /**\n     * \u7528\u4e8e\u7ed9access_token\u7b7e\u540d\u4f7f\u7528\u3002\n     *\n     * @return\n     */\n    @Bean\n    public JWKSource<SecurityContext> jwkSource() {\n        KeyPair keyPair = generateRsaKey();\n        RSAPublicKey publicKey = (RSAPublicKey) keyPair.getPublic();\n        RSAPrivateKey privateKey = (RSAPrivateKey) keyPair.getPrivate();\n        RSAKey rsaKey = new RSAKey.Builder(publicKey)\n                .privateKey(privateKey)\n                .keyID(UUID.randomUUID().toString())\n                .build();\n        JWKSet jwkSet = new JWKSet(rsaKey);\n        return new ImmutableJWKSet<>(jwkSet);\n    }\n\n    /**\n     * \u751f\u6210\u79d8\u94a5\u5bf9\uff0c\u4e3ajwkSource\u63d0\u4f9b\u670d\u52a1\u3002\n     *\n     * @return\n     */\n    private static KeyPair generateRsaKey() {\n        KeyPair keyPair;\n        try {\n            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");\n            keyPairGenerator.initialize(2048);\n            keyPair = keyPairGenerator.generateKeyPair();\n        } catch (Exception ex) {\n            throw new IllegalStateException(ex);\n        }\n        return keyPair;\n    }\n\n}\n'})}),"\n",(0,t.jsx)(n.h1,{id:"\u56db\u5b58\u50a8\u914d\u7f6e",children:"\u56db\u3001\u5b58\u50a8\u914d\u7f6e"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Spring Authorization Server"}),"\u9ed8\u8ba4\u662f\u652f\u6301",(0,t.jsx)(n.code,{children:"InMemory"}),"\u548c",(0,t.jsx)(n.code,{children:"JDBC"}),"\u4e24\u79cd\u5b58\u50a8\u6a21\u5f0f\u7684\uff0c\u5185\u5b58\u6a21\u5f0f\u53ea\u9002\u5408\u5f00\u53d1\u548c\u7b80\u5355\u7684\u6d4b\u8bd5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5b9e\u73b0JDBC\u5b58\u50a8\u65b9\u5f0f\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u4fee\u6539\u6b65\u9aa4\u5982\u4e0b\uff1a"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u5f15\u5165JDBC\u76f8\u5173\u4f9d\u8d56\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u521b\u5efa\u6570\u636e\u5e93\u5e76\u521d\u59cb\u5316\u8868\uff0c\u4ee5\u53ca\u5728application.yaml\u6587\u4ef6\u4e2d\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u4fee\u6539Spring Security\u548cSpring authorization Server\u7684\u914d\u7f6e\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u521d\u59cb\u5316\u8868\u6570\u636e"}),"\n",(0,t.jsx)(n.li,{children:"\u6d4b\u8bd5\u670d\u52a1"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"41-\u5f15\u5165jdbc\u4f9d\u8d56",children:"4.1 \u5f15\u5165JDBC\u4f9d\u8d56"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-jdbc</artifactId>\n</dependency>\n<dependency>\n   <groupId>mysql</groupId>\n   <artifactId>mysql-connector-java</artifactId>\n   <scope>runtime</scope>\n</dependency>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"42-\u521d\u59cb\u5316\u6570\u636e\u5e93\u8868\u5e76\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f",children:"4.2 \u521d\u59cb\u5316\u6570\u636e\u5e93\u8868\u5e76\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f"}),"\n",(0,t.jsx)(n.p,{children:"Spring Security\u7684\u5efa\u8868\u8bed\u53e5\u5728"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"org/springframework/security/core/userdetails/jdbc/users.ddl\n"})}),"\n",(0,t.jsx)(n.p,{children:"Spring authorization Server\u7684\u5efa\u8868\u6587\u4ef6\u5728\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"org/springframework/security/oauth2/server/authorization/oauth2-authorization-consent-schema.sql\norg/springframework/security/oauth2/server/authorization/oauth2-authorization-schema.sql\norg/springframework/security/oauth2/server/authorization/client/oauth2-registered-client-schema.sql\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"DROP TABLE IF EXISTS oauth2_authorization_consent;\nCREATE TABLE oauth2_authorization_consent\n(\n    registered_client_id varchar(100)  NOT NULL,\n    principal_name       varchar(200)  NOT NULL,\n    authorities          varchar(1000) NOT NULL,\n    PRIMARY KEY (registered_client_id, principal_name)\n);\n\n\nDROP TABLE IF EXISTS oauth2_authorization;\n\nCREATE TABLE oauth2_authorization\n(\n    id                            varchar(100) NOT NULL,\n    registered_client_id          varchar(100) NOT NULL,\n    principal_name                varchar(200) NOT NULL,\n    authorization_grant_type      varchar(100) NOT NULL,\n    authorized_scopes             varchar(1000) DEFAULT NULL,\n    attributes                    blob          DEFAULT NULL,\n    state                         varchar(500)  DEFAULT NULL,\n    authorization_code_value      blob          DEFAULT NULL,\n    authorization_code_issued_at  timestamp    NULL,\n    authorization_code_expires_at timestamp    NULL,\n    authorization_code_metadata   blob          DEFAULT NULL,\n    access_token_value            blob          DEFAULT NULL,\n    access_token_issued_at        timestamp    NULL,\n    access_token_expires_at       timestamp    NULL,\n    access_token_metadata         blob          DEFAULT NULL,\n    access_token_type             varchar(100)  DEFAULT NULL,\n    access_token_scopes           varchar(1000) DEFAULT NULL,\n    oidc_id_token_value           blob          DEFAULT NULL,\n    oidc_id_token_issued_at       timestamp    NULL,\n    oidc_id_token_expires_at      timestamp    NULL,\n    oidc_id_token_metadata        blob          DEFAULT NULL,\n    refresh_token_value           blob          DEFAULT NULL,\n    refresh_token_issued_at       timestamp    NULL,\n    refresh_token_expires_at      timestamp    NULL,\n    refresh_token_metadata        blob          DEFAULT NULL,\n    PRIMARY KEY (id)\n);\n\nDROP TABLE IF EXISTS oauth2_registered_client;\nCREATE TABLE oauth2_registered_client\n(\n    id                            varchar(100)                            NOT NULL,\n    client_id                     varchar(100)                            NOT NULL,\n    client_id_issued_at           timestamp     DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    client_secret                 varchar(200)  DEFAULT NULL,\n    client_secret_expires_at      timestamp                               NULL,\n    client_name                   varchar(200)                            NOT NULL,\n    client_authentication_methods varchar(1000)                           NOT NULL,\n    authorization_grant_types     varchar(1000)                           NOT NULL,\n    redirect_uris                 varchar(1000) DEFAULT NULL,\n    scopes                        varchar(1000)                           NOT NULL,\n    client_settings               varchar(2000)                           NOT NULL,\n    token_settings                varchar(2000)                           NOT NULL,\n    PRIMARY KEY (id)\n);\n\nALTER TABLE authorities\n    DROP FOREIGN KEY fk_authorities_users;\nDROP TABLE IF EXISTS users;\nDROP TABLE IF EXISTS authorities;\ncreate table users\n(\n    username varchar(50)  not null primary key,\n    password varchar(500) not null,\n    enabled  boolean      not null\n);\n\ncreate table authorities\n(\n    username  varchar(50) not null,\n    authority varchar(50) not null,\n    constraint fk_authorities_users foreign key (username) references users (username)\n);\n\ncreate unique index ix_auth_username on authorities (username, authority);\n"})}),"\n",(0,t.jsx)(n.p,{children:"application.yml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"server:\n  port: 8080\n\nspring:\n  main:\n    allow-bean-definition-overriding: true\n  datasource:\n    url: jdbc:mysql://localhost:3306/spring-authorization-server\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: admin\n"})}),"\n",(0,t.jsx)(n.h2,{id:"43-\u4fee\u6539spring-security\u548cspring-authorization-server\u7684\u914d\u7f6e",children:"4.3 \u4fee\u6539Spring Security\u548cSpring authorization Server\u7684\u914d\u7f6e"}),"\n",(0,t.jsx)(n.h3,{id:"spring-security",children:"Spring Security"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Bean\npublic UserDetailsService userDetailsService(JdbcTemplate jdbcTemplate) {\n    JdbcUserDetailsManager userDetailsManager = new JdbcUserDetailsManager();\n    userDetailsManager.setJdbcTemplate(jdbcTemplate);\n    return userDetailsManager;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"spring-authorization-server",children:"Spring authorization Server"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Bean\npublic RegisteredClientRepository registeredClientRepository(JdbcTemplate jdbcTemplate) {\n    return new JdbcRegisteredClientRepository(jdbcTemplate);\n}\n\n@Bean\npublic OAuth2AuthorizationService authorizationService(JdbcTemplate jdbcTemplate) {\n    return new JdbcOAuth2AuthorizationService(jdbcTemplate, registeredClientRepository());\n}\n\n@Bean\npublic OAuth2AuthorizationConsentService authorizationConsentService(JdbcTemplate jdbcTemplate) {\n    return new JdbcOAuth2AuthorizationConsentService(jdbcTemplate, registeredClientRepository());\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"44-\u521d\u59cb\u5316\u8868\u6570\u636e",children:"4.4 \u521d\u59cb\u5316\u8868\u6570\u636e"}),"\n",(0,t.jsx)(n.p,{children:"\u9700\u8981\u521d\u59cb\u5316\u4e09\u5f20\u8868\u6570\u636e\uff0c\u5206\u522b\u662fusers,authorities, oauth2_registered_client"}),"\n",(0,t.jsx)(n.p,{children:"users,authorities\u9700\u8981\u901a\u8fc7UserDetailsManager\u7c7b\u6765\u5b9e\u73b0\uff0c\u6211\u6682\u65f6\u4f7f\u7528junit Test\u6765\u5b9e\u73b0\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.service.auth.server;\n\nimport jakarta.annotation.Resource;\nimport org.junit.jupiter.api.Test;\n\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.oauth2.core.AuthorizationGrantType;\nimport org.springframework.security.oauth2.core.ClientAuthenticationMethod;\nimport org.springframework.security.oauth2.core.oidc.OidcScopes;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClient;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.settings.ClientSettings;\nimport org.springframework.security.provisioning.UserDetailsManager;\n\nimport java.util.UUID;\n\n@SpringBootTest\npublic class CloudServiceAuthServerApplicationTests {\n\n  private BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\n\n  @Resource\n  private UserDetailsManager userDetailsManager;\n\n  @Resource\n  private RegisteredClientRepository registeredClientRepository;\n\n  @Test\n  public void initUser() {\n     UserDetails userDetails = User.withDefaultPasswordEncoder()\n             .username("user")\n            .password("password")\n//\t\t\t\t.passwordEncoder(source -> "{bcrypt}" + passwordEncoder.encode(source))\n            .roles("USER")\n             .build();\n\n     UserDetails testUser = User.withDefaultPasswordEncoder()\n             .username("test")\n            .password("test")\n//\t\t\t\t.passwordEncoder(source -> "{bcrypt}" + passwordEncoder.encode(source))\n            .roles("TEST")\n            .build();\n\n    userDetailsManager.createUser(userDetails);\n    userDetailsManager.createUser(testUser);\n  }\n\n\n  @Test\n  public void initClient() {\n    RegisteredClient registeredClient = RegisteredClient.withId(UUID.randomUUID().toString())\n            .clientId("messaging-client")\n            .clientSecret("{noop}secret")\n//\t\t\t\t.clientSecret("{bcrypt}" + passwordEncoder.encode("secret"))\n            .clientAuthenticationMethod(ClientAuthenticationMethod.CLIENT_SECRET_BASIC)\n            .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n            .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n            .authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS)\n            .redirectUri("http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc")\n            .redirectUri("http://127.0.0.1:8080/authorized")\n//                .postLogoutRedirectUri("http://127.0.0.1:8080/logged-out")\n            .scope(OidcScopes.OPENID)\n            .scope(OidcScopes.PROFILE)\n            .scope("client.create")\n            .scope("client.read")\n            .scope("message.read")\n            .scope("message.write")\n            .clientSettings(ClientSettings.builder()\n                    .requireAuthorizationConsent(true)\n                    .jwkSetUrl("http://127.0.0.1:8080/oauth2/jwks")\n                    .build())\n            .build();\n\n    RegisteredClient deviceClient = RegisteredClient.withId(UUID.randomUUID().toString())\n            .clientId("device-messaging-client")\n            .clientAuthenticationMethod(ClientAuthenticationMethod.NONE)\n//                .authorizationGrantType(AuthorizationGrantType.DEVICE_CODE)\n            .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n            .scope("message.read")\n            .scope("message.write")\n            .build();\n\n    registeredClientRepository.save(registeredClient);\n    registeredClientRepository.save(deviceClient);\n  }\n\n}\n'})}),"\n",(0,t.jsx)(n.h1,{id:"\u4e94\u81ea\u5b9a\u4e49jwt\u5b57\u6bb5",children:"\u4e94\u3001\u81ea\u5b9a\u4e49JWT\u5b57\u6bb5"}),"\n",(0,t.jsxs)(n.p,{children:["jwt\u89e3\u6790\u53ef\u4ee5\u4f7f\u7528 ",(0,t.jsx)(n.a,{href:"https://jwt.io",children:"JWT\u5728\u7ebf\u89e3\u6790"})]}),"\n",(0,t.jsx)(n.h2,{id:"51-\u83b7\u53d6token",children:"5.1 \u83b7\u53d6token"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\u83b7\u53d6\u6388\u6743\u7801","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/oauth2/authorize?response_type=code&client_id=messaging-client&scope=message.read&redirect_uri=http://127.0.0.1:8080/authorized",children:"http://127.0.0.1:8080/oauth2/authorize?response_type=code&client_id=messaging-client&scope=message.read&redirect_uri=http://127.0.0.1:8080/authorized"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"\u83b7\u53d6Token"}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:['curl -X POST "',(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/oauth2/token?grant_type=authorization_code&redirect_uri=http://127.0.0.1:8080/authorized&code=rXd5b",children:"http://127.0.0.1:8080/oauth2/token?grant_type=authorization_code&redirect_uri=http://127.0.0.1:8080/authorized&code=rXd5b"}),'" -H "Authorization: Basic bWVzc2FnaW5nLWNsaWVudDpzZWNyZXQ="']}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"JWT Set"}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/oauth2/jwks",children:"http://127.0.0.1:8080/oauth2/jwks"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "keys": [\n        {\n            "kty": "RSA",\n            "e": "AQAB",\n            "kid": "64489bb5-4dde-422a-87d8-7fa302ca9269",\n            "n": "0UIkQwTSnrRHSwY56cfufw5UMyT0wfNcORRBUtWOYF4TXunuCW-mRBmEIrtRsUB2TOMkvMgosgUHSf6oqVweR3oYAogMcJnv2Gw1pDq_l7stMzrc1QTdg3RuuhY49CvrcxtIpCUz47UOnwm_os-lXN72h1eevkL0wanODez4UILfUxiET8K6JelavyH1TKk6kIMJKhOUpVabboJotqNf6CzgvKllsph8EyZGItUPU_p7eLJrcLs52OD2pB0BXofIj9VOwuXLI0ttzyut6tODU0K_tOCmH3udju-rdHTHd_ZBKpnVqMYLfiXeE0gswrWCvPBEpKutiCw6mONzTOmzBw"\n        }\n    ]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"52-\u9ed8\u8ba4token\u89e3\u6790",children:"5.2 \u9ed8\u8ba4Token\u89e3\u6790"}),"\n",(0,t.jsx)(n.p,{children:"\u9ed8\u8ba4token"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"eyJraWQiOiI5MzBhOTgxNC0yYWUyLTRiODYtOTRkZS1jZjBhYzAxYzRlZmYiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ1c2VyIiwiYXVkIjoibWVzc2FnaW5nLWNsaWVudCIsIm5iZiI6MTY4NDMwOTYxMCwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsImNsaWVudC5jcmVhdGUiLCJjbGllbnQucmVhZCJdLCJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwODAiLCJleHAiOjE2ODQzMDk5MTAsImlhdCI6MTY4NDMwOTYxMH0.hN07xVk8VbQTlHWCT3rgv8dHddPNWcO8Dvc4WKGcNE6XmdOHnW_9QDuQCSOX-SZjTHQStRlKCSti8Qwg7lHy-JJ8pl3AQzqio7AFS5j-EGayGtjqIOAxUAhF7WlH5bj08nUE-2g0X0h5OmZvNpbt69ApeWc0wGCLL58pDgt0DZlk9sjqMGh7u5BUmX8d-DGvb4OI24ClGmIDdkpma6PLDXPQ3TsNF12XYevCEB1XMwXmX524uGyuuODZhz-3-CcE9bIEm3l7-IYBs-6IUGbCJ288lUzQ1p59Zdw2u4wXmzPrqYFFOYRWSm5zrrhICk1lzj8nXGX9yQykdIZIhIgkiQ```\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u89e3\u6790\u7ed3\u679c"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'HEADER:ALGORITHM & TOKEN TYPE\n{\n  "kid": "930a9814-2ae2-4b86-94de-cf0ac01c4eff",\n  "alg": "RS256"\n}\nPAYLOAD:DATA\n{\n  "sub": "user",\n  "aud": "messaging-client",\n  "nbf": 1684309610,\n  "scope": [\n    "openid",\n    "profile",\n    "client.create",\n    "client.read"\n  ],\n  "iss": "http://127.0.0.1:8080",\n  "exp": 1684309910,\n  "iat": 1684309610\n}\nVERIFY SIGNATURE\n'})}),"\n",(0,t.jsx)(n.h2,{id:"53-\u81ea\u5b9a\u4e49header\u53caclaim\u5185\u5bb9",children:"5.3 \u81ea\u5b9a\u4e49Header\u53caClaim\u5185\u5bb9"}),"\n",(0,t.jsx)(n.p,{children:"\u63a5\u4e0b\u6765\u6211\u4eec\u589e\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49header\u548cclaim."}),"\n",(0,t.jsx)(n.p,{children:"\u9700\u8981\u4f7f\u7528OAuth2TokenCustomizer\u6765\u5b9e\u73b0\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.service.auth.server.config;\n\nimport com.nimbusds.jose.jwk.source.JWKSource;\nimport com.nimbusds.jose.proc.SecurityContext;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.oauth2.core.oidc.endpoint.OidcParameterNames;\nimport org.springframework.security.oauth2.jwt.JwsHeader;\nimport org.springframework.security.oauth2.jwt.JwtClaimsSet;\nimport org.springframework.security.oauth2.jwt.JwtEncoder;\nimport org.springframework.security.oauth2.jwt.NimbusJwtEncoder;\nimport org.springframework.security.oauth2.server.authorization.OAuth2TokenType;\nimport org.springframework.security.oauth2.server.authorization.token.DelegatingOAuth2TokenGenerator;\nimport org.springframework.security.oauth2.server.authorization.token.JwtEncodingContext;\nimport org.springframework.security.oauth2.server.authorization.token.JwtGenerator;\nimport org.springframework.security.oauth2.server.authorization.token.OAuth2AccessTokenGenerator;\nimport org.springframework.security.oauth2.server.authorization.token.OAuth2RefreshTokenGenerator;\nimport org.springframework.security.oauth2.server.authorization.token.OAuth2TokenCustomizer;\nimport org.springframework.security.oauth2.server.authorization.token.OAuth2TokenGenerator;\n\n/**\n * \u81ea\u5b9a\u4e49JWT\u4e2d\u7684\u5185\u5bb9\n *\n * @author Hui Liu\n * @date 2023/5/17\n */\n@Configuration\npublic class JwtEnhanceConfig {\n\n    @Bean\n    public JwtEncoder jwtEncoder(JWKSource<SecurityContext> jwkSource) {\n        return new NimbusJwtEncoder(jwkSource);\n    }\n\n    @Bean\n    public OAuth2TokenCustomizer<JwtEncodingContext> jwtCustomizer() {\n        return context -> {\n            JwsHeader.Builder headers = context.getJwsHeader();\n            JwtClaimsSet.Builder claims = context.getClaims();\n            if (context.getTokenType().equals(OAuth2TokenType.ACCESS_TOKEN)) {\n                // Customize headers/claims for access_token\n                headers.header("customerHeader", "Header");\n                claims.claim("customerClaim", "Claim");\n            } else if (context.getTokenType().getValue().equals(OidcParameterNames.ID_TOKEN)) {\n                // Customize headers/claims for id_token\n            }\n        };\n    }\n\n    @Bean\n    public OAuth2TokenGenerator<?> tokenGenerator(OAuth2TokenCustomizer<JwtEncodingContext> jwtCustomizer, JwtEncoder jwtEncoder) {\n        JwtGenerator jwtGenerator = new JwtGenerator(jwtEncoder);\n        jwtGenerator.setJwtCustomizer(jwtCustomizer);\n        OAuth2AccessTokenGenerator accessTokenGenerator = new OAuth2AccessTokenGenerator();\n        OAuth2RefreshTokenGenerator refreshTokenGenerator = new OAuth2RefreshTokenGenerator();\n        return new DelegatingOAuth2TokenGenerator(jwtGenerator, accessTokenGenerator, refreshTokenGenerator);\n    }\n\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"54-\u65b0\u7684token\u89e3\u6790",children:"5.4 \u65b0\u7684Token\u89e3\u6790"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"eyJjdXN0b21lckhlYWRlciI6IkhlYWRlciIsImFsZyI6IlJTMjU2Iiwia2lkIjoiMzdkMTViNWUtNGFmMC00ZjY1LTg4Y2EtNTk0NzgwZmMzMDgwIn0.eyJzdWIiOiJ1c2VyIiwiYXVkIjoibWVzc2FnaW5nLWNsaWVudCIsImN1c3RvbWVyQ2xhaW0iOiJDbGFpbSIsIm5iZiI6MTY4NDMwOTY5MSwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsImNsaWVudC5jcmVhdGUiLCJjbGllbnQucmVhZCJdLCJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwODAiLCJleHAiOjE2ODQzMDk5OTEsImlhdCI6MTY4NDMwOTY5MX0.sVBX5oWgttKNj_O6VbafPyX60Ldr2HHYWoFdNINPPatGSUr5QdsIsUIxRiE0VBu_-MycQrUB_Ad4cJzRoTxyTmMpRVv-uJlYLOoViStReY-I-VgK8b4nLLW8alore3BaF4aX6a2I4T2M3f4jsttzJ9jJTeiVTaurz0zbYpH5cPMpI3zccXPhOQFpqQEILXeU_JpoD_Wx-13FK9VOGlid7LU1nJdUpYR_rsXkS_6WMPjPdi0wMfNRJCYetBqnRQHQjlKVbrp9r62TXGjVj9qiNFAK9nV40BC-t-fvqTG2W4DduGbfXZZf8mEn-UTtuL2bTFv5_dOz-xhTKu228A3xWA\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u89e3\u6790\u7ed3\u679c"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'HEADER:ALGORITHM & TOKEN TYPE\n{\n  "customerHeader": "Header",\n  "alg": "RS256",\n  "kid": "37d15b5e-4af0-4f65-88ca-594780fc3080"\n}\nPAYLOAD:DATA\n{\n  "sub": "user",\n  "aud": "messaging-client",\n  "customerClaim": "Claim",\n  "nbf": 1684309691,\n  "scope": [\n    "openid",\n    "profile",\n    "client.create",\n    "client.read"\n  ],\n  "iss": "http://127.0.0.1:8080",\n  "exp": 1684309991,\n  "iat": 1684309691\n}\nVERIFY SIGNATURE\n'})}),"\n",(0,t.jsx)(n.h1,{id:"\u516dopenid-connect-10\u534f\u8bae",children:"\u516d\u3001OpenID Connect 1.0\u534f\u8bae"}),"\n",(0,t.jsx)(n.p,{children:"Spring Authorization Server\u652f\u6301OAuth2.1\u534f\u8bae\uff0c\u540c\u65f6\u4e5f\u652f\u6301OpenID Connect 1.0\u534f\u8bae\uff0c\u8be5\u534f\u8bae\u662fOAuth2\u534f\u8bae\u7684\u4e0a\u5c42\u534f\u8bae\uff0c\u8fd9\u91cc\u6211\u5c31\u4e0d\u89e3\u91ca\u4e86\uff0c\u53ef\u81ea\u884c\u767e\u5ea6\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"61-\u5f00\u542foidc",children:"6.1 \u5f00\u542fOIDC"}),"\n",(0,t.jsx)(n.p,{children:"\u9ed8\u8ba4\u662f\u4e0d\u5f00\u542fOIDC\u7684\uff0c\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u914d\u7f6e"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Bean\n@Order(Ordered.HIGHEST_PRECEDENCE)\npublic SecurityFilterChain authorizationServerSecurityFilterChain(HttpSecurity http) throws Exception {\n    OAuth2AuthorizationServerConfiguration.applyDefaultSecurity(http);\n    http.getConfigurer(OAuth2AuthorizationServerConfigurer.class)\n        .oidc(Customizer.withDefaults());    // Enable OpenID Connect 1.0\n    http\n        // Redirect to the login page when not authenticated from the\n        // authorization endpoint\n        .exceptionHandling((exceptions) -> exceptions\n        .authenticationEntryPoint(\n            new LoginUrlAuthenticationEntryPoint("/login"))\n        )\n        // Accept access tokens for User Info and/or Client Registration\n        .oauth2ResourceServer(OAuth2ResourceServerConfigurer::jwt);\n\n    return http.build();\n}\n\n@Bean\npublic JwtDecoder jwtDecoder(JWKSource<SecurityContext> jwkSource) {\n    return OAuth2AuthorizationServerConfiguration.jwtDecoder(jwkSource);\n}\n\n@Bean\npublic AuthorizationServerSettings authorizationServerSettings() {\n    return AuthorizationServerSettings.builder().build();\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u6ce8\u610f\uff1a \u5ba2\u6237\u7aefclient(messaging-client)\u8bbe\u7f6e\u7684\u65f6\u5019scope\u8bbe\u7f6e\u4e86openid\u7684\u652f\u6301"}),"\n",(0,t.jsx)(n.h2,{id:"62-\u7528\u6237\u7aef\u70b9",children:"6.2 \u7528\u6237\u7aef\u70b9"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\u83b7\u53d6\u6388\u6743\u7801 \u6388\u6743scope openid","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/oauth2/authorize?response_type=code&client_id=messaging-client&scope=openid&redirect_uri=http://127.0.0.1:8080/authorized",children:"http://127.0.0.1:8080/oauth2/authorize?response_type=code&client_id=messaging-client&scope=openid&redirect_uri=http://127.0.0.1:8080/authorized"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u83b7\u53d6Token","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:['curl -X POST "',(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/oauth2/token?grant_type=authorization_code&redirect_uri=http://127.0.0.1:8080/authorized&code=mLhDhO6",children:"http://127.0.0.1:8080/oauth2/token?grant_type=authorization_code&redirect_uri=http://127.0.0.1:8080/authorized&code=mLhDhO6"}),'" -H "Authorization: Basic bWVzc2FnaW5nLWNsaWVudDpzZWNyZXQ="']}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u83b7\u53d6\u7528\u6237\u4fe1\u606f","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:['curl -X GET "',(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/userinfo",children:"http://127.0.0.1:8080/userinfo"}),'" -H "Authorization: Bearer eyJjd"']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u7528\u6237\u4fe1\u606f"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "sub":"user"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8fd9\u91cc\u7684sub\u5c31\u662f\u7528\u6237\u7684\u6807\u5fd7\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u589e\u52a0\u5f88\u591a\u81ea\u5b9a\u4e49\u4fe1\u606f\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'    @Bean\n@Order(Ordered.HIGHEST_PRECEDENCE)\npublic SecurityFilterChain authorizationServerSecurityFilterChain(HttpSecurity http) throws Exception {\n        OAuth2AuthorizationServerConfigurer authorizationServerConfigurer = new OAuth2AuthorizationServerConfigurer();\n        RequestMatcher endpointsMatcher = authorizationServerConfigurer.getEndpointsMatcher();\n\n        /**\n         * @see OAuth2AuthorizationServerConfiguration#applyDefaultSecurity(HttpSecurity)\n         */\n        http\n            .securityMatcher(endpointsMatcher)\n            .authorizeRequests(authorizeRequests ->\n                authorizeRequests.anyRequest().authenticated()\n            )\n            .csrf(csrf -> csrf.ignoringRequestMatchers(endpointsMatcher))\n            .apply(authorizationServerConfigurer);\n        http\n            // Redirect to the login page when not authenticated from the\n            // authorization endpoint\n            .exceptionHandling((exceptions) -> exceptions.authenticationEntryPoint(\n                new LoginUrlAuthenticationEntryPoint("/login")\n        ))\n        // Accept access tokens for User Info and/or Client Registration\n        .oauth2ResourceServer(OAuth2ResourceServerConfigurer::jwt);\n\n        // \u4e5f\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\uff0c\u8df3\u8f6c\u5230login page\n//        http.formLogin(Customizer.withDefaults());\n\n        authorizationServerConfigurer\n            // Enable OpenID Connect 1.0\n            .oidc(oidc -> {\n                oidc.userInfoEndpoint(userInfoEndpoint -> userInfoEndpoint.userInfoMapper(oidcUserInfoAuthenticationContext -> {\n                    OAuth2AccessToken accessToken = oidcUserInfoAuthenticationContext.getAccessToken();\n                    Map<String, Object> claims = new HashMap<>();\n                    claims.put("url", "https://github.com/lorchr");\n                    claims.put("accessToken", accessToken);\n                    claims.put("sub", oidcUserInfoAuthenticationContext.getAuthorization().getPrincipalName());\n                    return new OidcUserInfo(claims);\n                }));\n            }\n        );\n\n        return http.build();\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u7528\u6237\u4fe1\u606f"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "sub": "test",\n    "accessToken": {\n        "tokenValue": "eyJjdXN0b21lckhlYWRlciI6Iui_meaYr-S4gOS4quiHquWumuS5iWhlYWRlciIsImFsZyI6IlJTMjU2Iiwia2lkIjoiZTdiY2FkMzktNGQyZS00NmE0LWJlZDAtN2VmODFiODBlZmZiIn0.eyJzdWIiOiJ0ZXN0IiwiYXVkIjoibWVzc2FnaW5nLWNsaWVudCIsImN1c3RvbWVyQ2xhaW0iOiLov5nmmK_kuIDkuKroh6rlrprkuYlDbGFpbSIsIm5iZiI6MTY4NDI5NDk2Nywic2NvcGUiOlsib3BlbmlkIl0sImlzcyI6Imh0dHA6Ly8xMjcuMC4wLjE6ODA4MCIsImV4cCI6MTY4NDI5NTI2NywiaWF0IjoxNjg0Mjk0OTY3fQ.Y6Z2ih9HgpPywIMYcrhBfBJg_k5EREuZbj3S32ghnUJI7A-o00W0fM6UfKwvXWi7eUY2Yk04mweYYX0aO2wwnhmBXjQMeKA7JJSfvaSLHMI32VXL5-cpnDdbzkrP0TnDhDf7U14-YZx6dQleGphLbiYV98sEmV00Jo1n4y8tbjLYYIYHPqDQQZc2NSYx14Kgi_6IjNSFisQeBUi4U9YtxdGP2nW9dto1AUxla1ESIWwCQyEoykFPbeD8t3QXYr6jBDl47zrA7DH9JdclHxldZX8Zumv2nDVH15fIWydq3LE4wFpGBKYcYy0d0Mbz_FusHon2ZpyeTKMsq2PlfwTpiA",\n        "issuedAt": 1684294967.820415000,\n        "expiresAt": 1684295267.820415000,\n        "tokenType": {\n            "value": "Bearer"\n        },\n        "scopes": [\n            "openid"\n        ]\n    },\n    "url": "https://github.com/lorchr"\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"63-\u67e5\u770bopenid\u7684\u914d\u7f6e",children:"6.3 \u67e5\u770bOpenID\u7684\u914d\u7f6e"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:['curl -X GET "',(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/.well-known/openid-configuration",children:"http://127.0.0.1:8080/.well-known/openid-configuration"}),'"']}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "issuer": "http://127.0.0.1:8080",\n    "authorization_endpoint": "http://127.0.0.1:8080/oauth2/authorize",\n    "token_endpoint": "http://127.0.0.1:8080/oauth2/token",\n    "token_endpoint_auth_methods_supported": [\n        "client_secret_basic",\n        "client_secret_post",\n        "client_secret_jwt",\n        "private_key_jwt"\n    ],\n    "jwks_uri": "http://127.0.0.1:8080/oauth2/jwks",\n    "userinfo_endpoint": "http://127.0.0.1:8080/userinfo",\n    "response_types_supported": [\n        "code"\n    ],\n    "grant_types_supported": [\n        "authorization_code",\n        "client_credentials",\n        "refresh_token"\n    ],\n    "revocation_endpoint": "http://127.0.0.1:8080/oauth2/revoke",\n    "revocation_endpoint_auth_methods_supported": [\n        "client_secret_basic",\n        "client_secret_post",\n        "client_secret_jwt",\n        "private_key_jwt"\n    ],\n    "introspection_endpoint": "http://127.0.0.1:8080/oauth2/introspect",\n    "introspection_endpoint_auth_methods_supported": [\n        "client_secret_basic",\n        "client_secret_post",\n        "client_secret_jwt",\n        "private_key_jwt"\n    ],\n    "subject_types_supported": [\n        "public"\n    ],\n    "id_token_signing_alg_values_supported": [\n        "RS256"\n    ],\n    "scopes_supported": [\n        "openid"\n    ]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"64-\u5ba2\u6237\u7aef\u6ce8\u518c\u7aef\u70b9",children:"6.4 \u5ba2\u6237\u7aef\u6ce8\u518c\u7aef\u70b9"}),"\n",(0,t.jsx)(n.p,{children:"OpenID Connect 1.0\u5ba2\u6237\u7aef\u6ce8\u518c\u7aef\u70b9\u9ed8\u8ba4\u7981\u7528\uff0c\u56e0\u4e3a\u8bb8\u591a\u90e8\u7f72\u4e0d\u9700\u8981\u52a8\u6001\u5ba2\u6237\u7aef\u6ce8\u518c\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'    @Bean\n    @Order(Ordered.HIGHEST_PRECEDENCE)\n    public SecurityFilterChain authorizationServerSecurityFilterChain(HttpSecurity http) throws Exception {\n        OAuth2AuthorizationServerConfigurer authorizationServerConfigurer = new OAuth2AuthorizationServerConfigurer();\n        RequestMatcher endpointsMatcher = authorizationServerConfigurer.getEndpointsMatcher();\n\n        /**\n         * @see OAuth2AuthorizationServerConfiguration#applyDefaultSecurity(HttpSecurity)\n         */\n        http\n                .securityMatcher(endpointsMatcher)\n                .authorizeRequests(authorizeRequests ->\n                        authorizeRequests.anyRequest().authenticated()\n                )\n                .csrf(csrf -> csrf.ignoringRequestMatchers(endpointsMatcher))\n                .apply(authorizationServerConfigurer);\n        http\n                // Redirect to the login page when not authenticated from the\n                // authorization endpoint\n                .exceptionHandling((exceptions) -> exceptions.authenticationEntryPoint(\n                        new LoginUrlAuthenticationEntryPoint("/login")\n        ))\n        // Accept access tokens for User Info and/or Client Registration\n        .oauth2ResourceServer(OAuth2ResourceServerConfigurer::jwt);\n\n        // \u4e5f\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\uff0c\u8df3\u8f6c\u5230login page\n//        http.formLogin(Customizer.withDefaults());\n\n        authorizationServerConfigurer\n                // Enable OpenID Connect 1.0\n                .oidc(oidc -> {\n                            oidc.userInfoEndpoint(userInfoEndpoint -> userInfoEndpoint.userInfoMapper(oidcUserInfoAuthenticationContext -> {\n                                OAuth2AccessToken accessToken = oidcUserInfoAuthenticationContext.getAccessToken();\n                                Map<String, Object> claims = new HashMap<>();\n                                claims.put("url", "https://github.com/lorchr");\n                                claims.put("accessToken", accessToken);\n                                claims.put("sub", oidcUserInfoAuthenticationContext.getAuthorization().getPrincipalName());\n                                return new OidcUserInfo(claims);\n                            }));\n                            // \u5141\u8bb8\u5ba2\u6237\u7aef\u6ce8\u518c\n                            oidc.clientRegistrationEndpoint(Customizer.withDefaults());\n                        }\n                );\n\n        return http.build();\n    }\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u6ce8\u610f\uff1a"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u5ba2\u6237\u7aef\u6ce8\u518c\u9700\u8981\u6709 scope : client.create"}),"\n",(0,t.jsx)(n.li,{children:"\u5ba2\u6237\u7aef\u67e5\u8be2\u9700\u8981\u6709 scope : client.read"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"65-\u6ce8\u518c\u5ba2\u6237\u7aef",children:"6.5 \u6ce8\u518c\u5ba2\u6237\u7aef"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\u83b7\u53d6\u6388\u6743\u7801 \u6388\u6743scope client.create","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/oauth2/authorize?response_type=code&client_id=messaging-client&scope=client.create&redirect_uri=http://127.0.0.1:8080/authorized",children:"http://127.0.0.1:8080/oauth2/authorize?response_type=code&client_id=messaging-client&scope=client.create&redirect_uri=http://127.0.0.1:8080/authorized"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u83b7\u53d6Token","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:['curl -X  POST "',(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/oauth2/token?grant_type=authorization_code&redirect_uri=http://127.0.0.1:8080/authorized&code=VeNYf",children:"http://127.0.0.1:8080/oauth2/token?grant_type=authorization_code&redirect_uri=http://127.0.0.1:8080/authorized&code=VeNYf"}),'" -H "Authorization: Basic bWVzc2FnaW5nLWNsaWVudDpzZWNyZXQ="']}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u6ce8\u518c\u5ba2\u6237\u7aef","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'curl -X POST "http://127.0.0.1:8080/connect/register" -H "Authorization: Bearer " \\\n-d \'{\n   "application_type": "web",\n   "redirect_uris": [\n      "https://client.example.org/callback",\n      "https://client.example.org/callback2"\n   ],\n   "client_name": "My Example",\n   "client_name#ja-Jpan-JP": "\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u540d",\n   "logo_uri": "https://client.example.org/logo.png",\n   "subject_type": "pairwise",\n   "sector_identifier_uri": "https://other.example.net/file_of_redirect_uris.json",\n   "token_endpoint_auth_method": "client_secret_basic",\n   "jwks_uri": "https://client.example.org/my_public_keys.jwks",\n   "userinfo_encrypted_response_alg": "RSA1_5",\n   "userinfo_encrypted_response_enc": "A128CBC-HS256",\n   "contacts": [\n      "ve7jtb@example.org",\n      "mary@example.org"\n   ],\n   "request_uris": [\n      "https://client.example.org/rf.txt#qpXaRLh_n93TTR9F252ValdatUQvQiJi5BDub2BeznA"\n   ]\n}\'\n'})}),"\n","\u54cd\u5e94","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n "client_id": "7d5seTkGh3k8kfLrYbSoiV3bJFfL2BIGuI4qAX0XtsQ",\n "client_id_issued_at": 1684304950,\n "client_name": "My Example",\n "client_secret": "nOUw4oLhxZ7UgFbxlbBF-GeCNh_5RslGobS6Kxtwcexw9u3FPWMd9-i6Pyyi1fsN",\n "redirect_uris": [\n     "https://client.example.org/callback",\n     "https://client.example.org/callback2"\n ],\n "grant_types": [\n     "authorization_code"\n ],\n "response_types": [\n     "code"\n ],\n "token_endpoint_auth_method": "client_secret_basic",\n "id_token_signed_response_alg": "RS256",\n "registration_client_uri": "http://127.0.0.1:8080/connect/register?client_id=7d5seTkGh3k8kfLrYbSoiV3bJFfL2BIGuI4qAX0XtsQ",\n "registration_access_token": "eyJjdXN0b21lckhlYWRlciI6Iui_meaYr-S4gOS4quiHquWumuS5iWhlYWRlciIsImFsZyI6IlJTMjU2Iiwia2lkIjoiMjhmODRlZjctMTRjMS00M2ZlLThjNjYtMTVmZDkyZjZkZDc2In0.eyJzdWIiOiI3ZDVzZVRrR2gzazhrZkxyWWJTb2lWM2JKRmZMMkJJR3VJNHFBWDBYdHNRIiwiYXVkIjoiN2Q1c2VUa0doM2s4a2ZMclliU29pVjNiSkZmTDJCSUd1STRxQVgwWHRzUSIsImN1c3RvbWVyQ2xhaW0iOiLov5nmmK_kuIDkuKroh6rlrprkuYlDbGFpbSIsIm5iZiI6MTY4NDMwNDk1MCwic2NvcGUiOlsiY2xpZW50LnJlYWQiXSwiaXNzIjoiaHR0cDovLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNjg0MzA1MjUwLCJpYXQiOjE2ODQzMDQ5NTB9.DB5f4BwYifSUzxHJSjJi7YTkv5QPksxm_fSJAIX5LIg8QZfEyvdPKN_ieqbwaNZ6WpHV9_QDCxll3nraT2Ub3RujWi8HU_v5vlgKz8iPTc4byyZw3qH7gIgZwyfxRo1gD1TiMHgZ2FbnDQHV6CC04tiYG4r0gHChFLlvIZu2IgyLOKiVXsmcAGZdY225cD3ULH2faXAPXYOdd7XDDFQMaZJSmAL_jzYmHVNiB4DIJGedibBAb7blnpKUOrv8JNOB7iLxKQO8ah-XDJZ4QfboQl3wi477q8wedixcnGUKYiK5MRs38rBWicHzDe4uCnKRCNQJW8754kBONEpkZ9xn8A",\n "client_secret_expires_at": 0\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u83b7\u53d6\u6388\u6743\u7801 \u6388\u6743scope client.read","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/oauth2/authorize?response_type=code&client_id=messaging-client&scope=client.create&redirect_uri=http://127.0.0.1:8080/authorized",children:"http://127.0.0.1:8080/oauth2/authorize?response_type=code&client_id=messaging-client&scope=client.create&redirect_uri=http://127.0.0.1:8080/authorized"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u83b7\u53d6Token","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:['curl -X POST "',(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/oauth2/token?grant_type=authorization_code&redirect_uri=http://127.0.0.1:8080/authorized&code=VeNYf",children:"http://127.0.0.1:8080/oauth2/token?grant_type=authorization_code&redirect_uri=http://127.0.0.1:8080/authorized&code=VeNYf"}),'" -H "Authorization: Basic bWVzc2FnaW5nLWNsaWVudDpzZWNyZXQ="']}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u67e5\u8be2\u5ba2\u6237\u7aef","\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:['curl -X GET "',(0,t.jsx)(n.a,{href:"http://127.0.0.1:8080/connect/register?client_id=messaging-client",children:"http://127.0.0.1:8080/connect/register?client_id=messaging-client"}),'" -H "Authorization: Bearer "']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"66-\u6ce8\u610f\u4e8b\u9879",children:"6.6 \u6ce8\u610f\u4e8b\u9879"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u6ce8\u518c\u5ba2\u6237\u7aef\u65f6\uff0cscope \u5fc5\u987b\u4ec5\u4e3a client.create"}),"\n",(0,t.jsx)(n.li,{children:"\u67e5\u8be2\u5ba2\u6237\u7aef\u65f6\uff0cscope \u5fc5\u987b\u4ec5\u4e3a client.read \u4e14\u53ea\u80fd\u67e5\u8be2\u5f53\u524daccess_token\u6240\u5c5e\u5ba2\u6237\u7aef\u7684\u4fe1\u606f"}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"\u4e03\u8d44\u6e90\u670d\u52a1\u5668resource-server\u4e0e\u5ba2\u6237\u7aefoauth2-client",children:"\u4e03\u3001\u8d44\u6e90\u670d\u52a1\u5668\uff08resource-server\uff09\u4e0e\u5ba2\u6237\u7aef\uff08oauth2-client\uff09"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>\n</dependency>\n<dependency>\n   <groupId>org.springframework.boot</groupId>\n   <artifactId>spring-boot-starter-oauth2-client</artifactId>\n</dependency>\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.ah)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{ah:()=>o});var t=r(67294);const i=t.createContext({});function o(e){const n=t.useContext(i);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);