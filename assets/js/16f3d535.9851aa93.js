"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[23938],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var r=n(96540);const i={},o=r.createContext(i);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:t},e.children)}},35795:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"zh-cn/database/Druid-Disable-Ad","title":"Druid-Disable-Ad","description":"","source":"@site/docs/zh-cn/database/2-Druid-Disable-Ad.md","sourceDirName":"zh-cn/database","slug":"/zh-cn/database/Druid-Disable-Ad","permalink":"/docs/zh-cn/database/Druid-Disable-Ad","draft":false,"unlisted":false,"editUrl":"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/database/2-Druid-Disable-Ad.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"troch","previous":{"title":"PDManer","permalink":"/docs/zh-cn/database/PDManer"},"next":{"title":"Mysql \u8bed\u6cd5","permalink":"/docs/zh-cn/database/Mysql-Syntax"}}');var i=n(74848),o=n(28453);const a={},s=void 0,l={},u=[];function c(e){const t={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'import com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure;\nimport com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties;\nimport com.alibaba.druid.util.Utils;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport javax.servlet.*;\nimport java.io.IOException;\n\n/**\n * Druid \u5e95\u90e8\u5e7f\u544a\u53bb\u9664\n */\n@Configuration\n@ConditionalOnWebApplication\n@AutoConfigureAfter(DruidDataSourceAutoConfigure.class)\n@ConditionalOnProperty(name = "spring.datasource.druid.stat-view-servlet.enabled", havingValue = "true", matchIfMissing = true)\npublic class RemoveDruidAdConfig {\n\n    /**\n     * \u65b9\u6cd5\u540d: removeDruidAdFilterRegistrationBean\n     * \u65b9\u6cd5\u63cf\u8ff0:  \u9664\u53bb\u9875\u9762\u5e95\u90e8\u7684\u5e7f\u544a\n     *\n     * @param properties\n     * @return org.springframework.boot.web.servlet.FilterRegistrationBean\n     * @throws\n     */\n    @Bean\n    public FilterRegistrationBean removeDruidAdFilterRegistrationBean(DruidStatProperties properties) {\n        // \u83b7\u53d6web\u76d1\u63a7\u9875\u9762\u7684\u53c2\u6570\n        DruidStatProperties.StatViewServlet config = properties.getStatViewServlet();\n        // \u63d0\u53d6common.js\u7684\u914d\u7f6e\u8def\u5f84\n        String pattern = config.getUrlPattern() != null ? config.getUrlPattern() : "/druid/*";\n        String commonJsPattern = pattern.replace("*", "js/common.js");\n\n        final String filePath = "support/http/resources/js/common.js";\n\n        //\u521b\u5efafilter\u8fdb\u884c\u8fc7\u6ee4\n        Filter filter = new Filter() {\n            @Override\n            public void init(FilterConfig filterConfig) throws ServletException {\n                // default empty logical\n            }\n\n            @Override\n            public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n                chain.doFilter(request, response);\n                // \u91cd\u7f6e\u7f13\u51b2\u533a\uff0c\u54cd\u5e94\u5934\u4e0d\u4f1a\u88ab\u91cd\u7f6e\n                response.resetBuffer();\n                // \u83b7\u53d6\u539f\u59cbcommon.js\n                String text = Utils.readFromResource(filePath);\n                // \u9664\u53bb\u5e95\u90e8\u7684\u5e7f\u544a\u4fe1\u606f\n                text = text.replace("this.buildFooter();", "// this.buildFooter();");\n                // \u9876\u90e8\u7684\u8d85\u94fe\u63a5\u7981\u7528\u70b9\u51fb\u8df3\u8f6c\n                text += "var t= null; $(function(){ t=setInterval(function() {$(\\"a.brand\\").attr(\\"style\\", \\"pointer-events:none;\\")}, 10); setTimeout(function() {clearInterval(t)}, 2000); })";\n                response.getWriter().write(text);\n            }\n\n            @Override\n            public void destroy() {\n                // default empty logical\n            }\n        };\n        FilterRegistrationBean registrationBean = new FilterRegistrationBean();\n        registrationBean.setFilter(filter);\n        registrationBean.addUrlPatterns(commonJsPattern);\n        return registrationBean;\n    }\n}\n'})})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);