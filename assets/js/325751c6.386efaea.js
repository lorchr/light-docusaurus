"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[66733],{80674:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(74848),a=t(28453);const i={},s=void 0,o={id:"zh-cn/spring-authorization-server/SAS-Optimize-Add-Redis-Cache",title:"SAS-Optimize-Add-Redis-Cache",description:"- Spring Authorization Server\u4f18\u5316\u7bc7\uff1a\u6dfb\u52a0Redis\u7f13\u5b58\u652f\u6301\u548c\u7edf\u4e00\u54cd\u5e94\u7c7b",source:"@site/docs/zh-cn/spring-authorization-server/101-SAS-Optimize-Add-Redis-Cache.md",sourceDirName:"zh-cn/spring-authorization-server",slug:"/zh-cn/spring-authorization-server/SAS-Optimize-Add-Redis-Cache",permalink:"/docs/zh-cn/spring-authorization-server/SAS-Optimize-Add-Redis-Cache",draft:!1,unlisted:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/spring-authorization-server/101-SAS-Optimize-Add-Redis-Cache.md",tags:[],version:"current",sidebarPosition:101,frontMatter:{},sidebar:"troch",previous:{title:"SAS-Optimize-Customlize-UserDetailService",permalink:"/docs/zh-cn/spring-authorization-server/SAS-Optimize-Customlize-UserDetailService"},next:{title:"SAS-Optimize-Persistance-JWKSource",permalink:"/docs/zh-cn/spring-authorization-server/SAS-Optimize-Persistance-JWKSource"}},l={},c=[{value:"\u4e00\u3001\u524d\u8a00",id:"\u4e00\u524d\u8a00",level:2},{value:"\u4e8c\u3001\u6dfb\u52a0\u7edf\u4e00\u54cd\u5e94\u7c7b",id:"\u4e8c\u6dfb\u52a0\u7edf\u4e00\u54cd\u5e94\u7c7b",level:2},{value:"1. \u5728model\u5305\u4e0b\u6dfb\u52a0<code>Result.java</code>\u7c7b",id:"1-\u5728model\u5305\u4e0b\u6dfb\u52a0resultjava\u7c7b",level:3},{value:"\u4e09\u3001\u4f18\u5316\u9879\u76ee",id:"\u4e09\u4f18\u5316\u9879\u76ee",level:2},{value:"1. \u5728controller\u5305\u4e0b\u6dfb\u52a0LoginController\u7c7b",id:"1-\u5728controller\u5305\u4e0b\u6dfb\u52a0logincontroller\u7c7b",level:3},{value:"2. <code>CaptchaResult</code>",id:"2-captcharesult",level:3},{value:"3. \u4f18\u5316\u767b\u5f55\u9875\u9762",id:"3-\u4f18\u5316\u767b\u5f55\u9875\u9762",level:3},{value:"4. \u4fee\u6539<code>CaptchaAuthenticationProvider</code>\u4eceredis\u4e2d\u83b7\u53d6\u9a8c\u8bc1\u7801",id:"4-\u4fee\u6539captchaauthenticationprovider\u4eceredis\u4e2d\u83b7\u53d6\u9a8c\u8bc1\u7801",level:3},{value:"5. \u4fee\u6539<code>SmsCaptchaLoginAuthenticationProvider</code>\u4eceredis\u4e2d\u83b7\u53d6\u77ed\u4fe1\u9a8c\u8bc1\u7801",id:"5-\u4fee\u6539smscaptchaloginauthenticationprovider\u4eceredis\u4e2d\u83b7\u53d6\u77ed\u4fe1\u9a8c\u8bc1\u7801",level:3},{value:"6. \u4fee\u6539<code>Oauth2BasicUser</code>\u7684<code>authorities</code>\u5c5e\u6027\uff0c\u4ee5\u9632\u5e8f\u5217\u5316\u5931\u8d25",id:"6-\u4fee\u6539oauth2basicuser\u7684authorities\u5c5e\u6027\u4ee5\u9632\u5e8f\u5217\u5316\u5931\u8d25",level:3},{value:"1. <code>CustomGrantedAuthority</code>",id:"1-customgrantedauthority",level:4},{value:"7. Redis\u5e38\u91cf\u7c7b<code>RedisConstants</code>",id:"7-redis\u5e38\u91cf\u7c7bredisconstants",level:3},{value:"8. <code>SecurityConstants</code>\u6dfb\u52a0\u5e38\u91cf",id:"8-securityconstants\u6dfb\u52a0\u5e38\u91cf",level:3},{value:"\u56db\u3001\u6574\u5408Spring data redis\u7684\u6b65\u9aa4",id:"\u56db\u6574\u5408spring-data-redis\u7684\u6b65\u9aa4",level:2},{value:"1. \u5f15\u5165starer",id:"1-\u5f15\u5165starer",level:3},{value:"2. \u7f16\u5199Redis\u914d\u7f6e\u6587\u4ef6",id:"2-\u7f16\u5199redis\u914d\u7f6e\u6587\u4ef6",level:3},{value:"3. \u7f16\u5199redis\u64cd\u4f5c\u7c7b",id:"3-\u7f16\u5199redis\u64cd\u4f5c\u7c7b",level:3},{value:"4. \u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\u6d4b\u8bd5\u8fd9\u4e2a\u5de5\u5177\u7c7b",id:"4-\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\u6d4b\u8bd5\u8fd9\u4e2a\u5de5\u5177\u7c7b",level:3},{value:"\u4e94\u3001\u6d4b\u8bd5",id:"\u4e94\u6d4b\u8bd5",level:2}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://juejin.cn/post/7253331974050299963",children:"Spring Authorization Server\u4f18\u5316\u7bc7\uff1a\u6dfb\u52a0Redis\u7f13\u5b58\u652f\u6301\u548c\u7edf\u4e00\u54cd\u5e94\u7c7b"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u4e00\u524d\u8a00",children:"\u4e00\u3001\u524d\u8a00"}),"\n",(0,r.jsxs)(n.p,{children:["\u4eca\u5929\u4e3a\u5927\u5bb6\u5c55\u793a\u4e00\u4e0b\u5982\u4f55\u4f7f\u7528Spring data redis\u6765\u7f13\u5b58\u9879\u76ee\u4e2d\u6570\u636e\uff0c\u5728\u9879\u76ee\u4f7f\u7528\u4eba\u6570\u5c11\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528",(0,r.jsx)(n.code,{children:"HttpSession"}),"\u95ee\u9898\u4e0d\u5927\uff0c\u4f46\u662f\u5f53\u5e76\u53d1\u591a\u4e86\u5c31\u9876\u4e0d\u4f4f\u4e86\uff0c\u57fa\u672c\u90fd\u4f1a\u9009\u62e9\u4e00\u4e9bNoSQL\u6765\u505a\u7f13\u5b58\uff0c\u672c\u4eba\u5c31\u9009\u62e9\u4e86\u6bd4\u8f83\u5e38\u7528\u7684redis\u6765\u505a\u7f13\u5b58\uff1b\u5173\u4e8e\u7edf\u4e00\u54cd\u5e94\u7c7b\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u4e3a\u4e86\u89c4\u8303\u9879\u76ee\u7684\u54cd\u5e94\u503c\uff0c\u65b9\u4fbf\u524d\u7aef\u5bf9\u63a5\u63a5\u53e3\uff0c\u5176\u5b83\u4eba\u5bf9\u63a5\u63a5\u53e3\u65f6\u66f4\u8f7b\u677e\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"\u4e8c\u6dfb\u52a0\u7edf\u4e00\u54cd\u5e94\u7c7b",children:"\u4e8c\u3001\u6dfb\u52a0\u7edf\u4e00\u54cd\u5e94\u7c7b"}),"\n",(0,r.jsxs)(n.h3,{id:"1-\u5728model\u5305\u4e0b\u6dfb\u52a0resultjava\u7c7b",children:["1. \u5728model\u5305\u4e0b\u6dfb\u52a0",(0,r.jsx)(n.code,{children:"Result.java"}),"\u7c7b"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.model;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport org.springframework.http.HttpStatus;\n\nimport java.io.Serializable;\n\n/**\n * \u516c\u5171\u54cd\u5e94\u7c7b\n *\n * @author vains\n * @date 2021/3/10 14:10\n */\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Result<T> implements Serializable {\n\n    /**\n     * \u54cd\u5e94\u72b6\u6001\u7801\n     */\n    private Integer code;\n\n    /**\n     * \u54cd\u5e94\u4fe1\u606f\n     */\n    private String message;\n\n    /**\n     * \u63a5\u53e3\u662f\u5426\u5904\u7406\u6210\u529f\n     */\n    private Boolean success;\n\n    /**\n     * \u63a5\u53e3\u54cd\u5e94\u65f6\u643a\u5e26\u7684\u6570\u636e\n     */\n    private T data;\n\n    /**\n     * \u64cd\u4f5c\u6210\u529f\u643a\u5e26\u6570\u636e\n     * @param data \u6570\u636e\n     * @param <T> \u7c7b\u578b\n     * @return \u8fd4\u56de\u7edf\u4e00\u54cd\u5e94\n     */\n    public static <T> Result<T> success(T data) {\n        return new Result<>(HttpStatus.OK.value(), ("\u64cd\u4f5c\u6210\u529f."),Boolean.TRUE, data);\n    }\n\n    /**\n     * \u64cd\u4f5c\u6210\u529f\u4e0d\u5e26\u6570\u636e\n     * @return \u8fd4\u56de\u7edf\u4e00\u54cd\u5e94\n     */\n    public static Result<String> success() {\n        return new Result<>(HttpStatus.OK.value(), ("\u64cd\u4f5c\u6210\u529f."), Boolean.TRUE, (null));\n    }\n\n    /**\n     * \u64cd\u4f5c\u6210\u529f\u643a\u5e26\u6570\u636e\n     * @param message \u6210\u529f\u63d0\u793a\u6d88\u606f\n     * @param data \u6210\u529f\u643a\u5e26\u6570\u636e\n     * @param <T> \u7c7b\u578b\n     * @return \u8fd4\u56de\u7edf\u4e00\u54cd\u5e94\n     */\n    public static <T> Result<T> success(String message, T data) {\n        return new Result<>(HttpStatus.OK.value(), message, Boolean.TRUE, data);\n    }\n\n    /**\n     * \u64cd\u4f5c\u5931\u8d25\u8fd4\u56de\n     * @param message \u6210\u529f\u63d0\u793a\u6d88\u606f\n     * @param <T> \u7c7b\u578b\n     * @return \u8fd4\u56de\u7edf\u4e00\u54cd\u5e94\n     */\n    public static <T> Result<T> error(String message) {\n        return new Result<>(HttpStatus.INTERNAL_SERVER_ERROR.value(), message, Boolean.FALSE, (null));\n    }\n\n    /**\n     * \u64cd\u4f5c\u5931\u8d25\u8fd4\u56de\n     * @param code \u9519\u8bef\u7801\n     * @param message \u6210\u529f\u63d0\u793a\u6d88\u606f\n     * @param <T> \u7c7b\u578b\n     * @return \u8fd4\u56de\u7edf\u4e00\u54cd\u5e94\n     */\n    public static <T> Result<T> error(Integer code, String message) {\n        return new Result<>(code, message, Boolean.FALSE, (null));\n    }\n\n    /**\n     * oauth2 \u95ee\u9898\n     * @param message \u5931\u8d25\u63d0\u793a\u6d88\u606f\n     * @param data \u5177\u4f53\u7684\u9519\u8bef\u4fe1\u606f\n     * @param <T> \u7c7b\u578b\n     * @return \u8fd4\u56de\u7edf\u4e00\u54cd\u5e94\n     */\n    public static <T> Result<T> oauth2Error(Integer code, String message, T data) {\n        return new Result<>(code, message, Boolean.FALSE, data);\n    }\n\n    /**\n     * oauth2 \u95ee\u9898\n     * @param message \u5931\u8d25\u63d0\u793a\u6d88\u606f\n     * @param data \u5177\u4f53\u7684\u9519\u8bef\u4fe1\u606f\n     * @param <T> \u7c7b\u578b\n     * @return \u8fd4\u56de\u7edf\u4e00\u54cd\u5e94\n     */\n    public static <T> Result<T> oauth2Error(String message, T data) {\n        return new Result<>(HttpStatus.UNAUTHORIZED.value(), message, Boolean.FALSE, data);\n    }\n\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"\u4e09\u4f18\u5316\u9879\u76ee",children:"\u4e09\u3001\u4f18\u5316\u9879\u76ee"}),"\n",(0,r.jsx)(n.h3,{id:"1-\u5728controller\u5305\u4e0b\u6dfb\u52a0logincontroller\u7c7b",children:"1. \u5728controller\u5305\u4e0b\u6dfb\u52a0LoginController\u7c7b"}),"\n",(0,r.jsxs)(n.p,{children:["\u8be5\u7c7b\u4e2d\u7684\u63a5\u53e3\u662f\u539f",(0,r.jsx)(n.code,{children:"AuthorizationController"}),"\u63a5\u53e3\u4e2d\u7684\uff0c\u73b0\u5728\u632a\u5230\u8be5\u7c7b\u4e2d\uff0c\u5e76\u4f7f\u7528Redis\u6765\u66ff\u6362",(0,r.jsx)(n.code,{children:"HttpSession"}),"\u5b58\u50a8\u9a8c\u8bc1\u7801\u4fe1\u606f\uff0c\u7f16\u5199\u4e00\u4e2a",(0,r.jsx)(n.code,{children:"CaptchaResult"}),"\u6765\u5c06redis\u4e2d\u7684key\u8fd4\u56de\u7ed9\u524d\u7aef\uff0c\u524d\u7aef\u767b\u5f55\u65f6\u643a\u5e26\u8fd9\u4e2akey\u6765\u83b7\u53d6\u7f13\u5b58\u6570\u636e,",(0,r.jsx)(n.code,{children:"CaptchaResult"}),"\u7c7b\u5728\u540e\u8fb9"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.controller;\n\nimport cn.hutool.captcha.CaptchaUtil;\nimport cn.hutool.captcha.ShearCaptcha;\nimport com.baomidou.mybatisplus.core.toolkit.IdWorker;\nimport com.example.model.Result;\nimport com.example.model.response.CaptchaResult;\nimport com.example.support.RedisOperator;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport static com.example.constant.RedisConstants.*;\n\n/**\n * \u767b\u5f55\u63a5\u53e3\uff0c\u767b\u5f55\u4f7f\u7528\u7684\u63a5\u53e3\n *\n * @author vains\n */\n@RestController\n@RequiredArgsConstructor\npublic class LoginController {\n\n    private final RedisOperator<String> redisOperator;\n\n    @GetMapping("/getSmsCaptcha")\n    public Result<String> getSmsCaptcha(String phone) {\n        // \u793a\u4f8b\u9879\u76ee\uff0c\u56fa\u5b9a1234\n        String smsCaptcha = "1234";\n        // \u5b58\u5165\u7f13\u5b58\u4e2d\uff0c5\u5206\u949f\u540e\u8fc7\u671f\n        redisOperator.set((SMS_CAPTCHA_PREFIX_KEY + phone), smsCaptcha, CAPTCHA_TIMEOUT_SECONDS);\n        return Result.success("\u83b7\u53d6\u77ed\u4fe1\u9a8c\u8bc1\u7801\u6210\u529f.", smsCaptcha);\n    }\n\n    @GetMapping("/getCaptcha")\n    public Result<CaptchaResult> getCaptcha() {\n        // \u4f7f\u7528huTool-captcha\u751f\u6210\u56fe\u5f62\u9a8c\u8bc1\u7801\n        // \u5b9a\u4e49\u56fe\u5f62\u9a8c\u8bc1\u7801\u7684\u957f\u3001\u5bbd\u3001\u9a8c\u8bc1\u7801\u5b57\u7b26\u6570\u3001\u5e72\u6270\u7ebf\u5bbd\u5ea6\n        ShearCaptcha captcha = CaptchaUtil.createShearCaptcha(150, 40, 4, 2);\n        // \u751f\u6210\u4e00\u4e2a\u552f\u4e00id\n        long id = IdWorker.getId();\n        // \u5b58\u5165\u7f13\u5b58\u4e2d\uff0c5\u5206\u949f\u540e\u8fc7\u671f\n        redisOperator.set((IMAGE_CAPTCHA_PREFIX_KEY + id), captcha.getCode(), CAPTCHA_TIMEOUT_SECONDS);\n        return Result.success("\u83b7\u53d6\u9a8c\u8bc1\u7801\u6210\u529f.", new CaptchaResult(String.valueOf(id), captcha.getCode(), captcha.getImageBase64Data()));\n    }\n\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"2-captcharesult",children:["2. ",(0,r.jsx)(n.code,{children:"CaptchaResult"})]}),"\n",(0,r.jsx)(n.p,{children:"\u751f\u6210\u7684key\u662flong\uff0c\u7c7b\u4f7f\u7528String\u662f\u56e0\u4e3a\u524d\u7aef\u5bf9\u4e8elong\u7c7b\u578b\u7684\u5927\u6570\u636e\u4f1a\u6709\u7cbe\u5ea6\u4e22\u5931\u95ee\u9898\uff0c\u6240\u4ee5\u4f7f\u7528String"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"package com.example.model.response;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\n\n/**\n * \u83b7\u53d6\u9a8c\u8bc1\u7801\u8fd4\u56de\n *\n * @author vains\n */\n@Data\n@AllArgsConstructor\npublic class CaptchaResult {\n\n    /**\n     * \u9a8c\u8bc1\u7801id\n     */\n    private String captchaId;\n\n    /**\n     * \u9a8c\u8bc1\u7801\u7684\u503c\n     */\n    private String code;\n\n    /**\n     * \u56fe\u7247\u9a8c\u8bc1\u7801\u7684base64\u503c\n     */\n    private String imageData;\n\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-\u4f18\u5316\u767b\u5f55\u9875\u9762",children:"3. \u4f18\u5316\u767b\u5f55\u9875\u9762"}),"\n",(0,r.jsxs)(n.p,{children:["\u9875\u9762\u4fee\u6539\u4e0d\u5927\uff0c\u8fd9\u91cc\u53ea\u653e\u5173\u952e\u4ee3\u7801\uff0c\u5982\u679c\u6709\u9700\u8981\u7684\u53ef\u4ee5\u53bbgitee\u67e5\u770b\u5b8c\u6574\u4ee3\u7801\uff1a",(0,r.jsx)(n.a,{href:"https://gitee.com/vains-Sofia/authorization-example",children:"\u4ee3\u7801\u5730\u5740"}),"\n\u9875\u9762\u767b\u5f55\u8868\u5355\u6dfb\u52a0\u9690\u85cf\u57df\uff0c\u5b58\u50a8redis\u5b58\u50a8\u9a8c\u8bc1\u7801\u7684key"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<input type="hidden" id="captchaId" name="captchaId" value=""/>\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u83b7\u53d6\u9a8c\u8bc1\u7801\u5e76\u8bbe\u7f6e\u503c\u7684\u5730\u65b9\u4fee\u6539"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"function getVerifyCode() {\n    let requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n    };\n\n    fetch(`${window.location.origin}/getCaptcha`, requestOptions)\n        .then(response => response.text())\n        .then(r => {\n            if (r) {\n                let result = JSON.parse(r);\n                document.getElementById('captchaId').value = result.data.captchaId\n                document.getElementById('code-image').src = result.data.imageData\n            }\n        })\n        .catch(error => console.log('error', error));\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"4-\u4fee\u6539captchaauthenticationprovider\u4eceredis\u4e2d\u83b7\u53d6\u9a8c\u8bc1\u7801",children:["4. \u4fee\u6539",(0,r.jsx)(n.code,{children:"CaptchaAuthenticationProvider"}),"\u4eceredis\u4e2d\u83b7\u53d6\u9a8c\u8bc1\u7801"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.authorization.captcha;\n\nimport com.example.constant.SecurityConstants;\nimport com.example.exception.InvalidCaptchaException;\nimport com.example.support.RedisOperator;\nimport jakarta.servlet.http.HttpServletRequest;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.security.authentication.dao.DaoAuthenticationProvider;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.AuthenticationException;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.ObjectUtils;\nimport org.springframework.web.context.request.RequestAttributes;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\n\nimport java.util.Objects;\n\nimport static com.example.constant.RedisConstants.IMAGE_CAPTCHA_PREFIX_KEY;\n\n/**\n * \u9a8c\u8bc1\u7801\u6821\u9a8c\n * \u6ce8\u5165ioc\u4e2d\u66ff\u6362\u539f\u5148\u7684DaoAuthenticationProvider\n * \u5728authenticate\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u6821\u9a8c\u9a8c\u8bc1\u7801\u7684\u903b\u8f91\n * \u6700\u540e\u8c03\u7528\u7236\u7c7b\u7684authenticate\u65b9\u6cd5\u5e76\u8fd4\u56de\n *\n * @author vains\n */\n@Slf4j\npublic class CaptchaAuthenticationProvider extends DaoAuthenticationProvider {\n\n    private final RedisOperator<String> redisOperator;\n\n    /**\n     * \u5229\u7528\u6784\u9020\u65b9\u6cd5\u5728\u901a\u8fc7{@link Component}\u6ce8\u89e3\u521d\u59cb\u5316\u65f6\n     * \u6ce8\u5165UserDetailsService\u548cpasswordEncoder\uff0c\u7136\u540e\n     * \u8bbe\u7f6e\u8c03\u7528\u7236\u7c7b\u5173\u4e8e\u8fd9\u4e24\u4e2a\u5c5e\u6027\u7684set\u65b9\u6cd5\u8bbe\u7f6e\u8fdb\u53bb\n     *\n     * @param userDetailsService \u7528\u6237\u670d\u52a1\uff0c\u7ed9\u6846\u67b6\u63d0\u4f9b\u7528\u6237\u4fe1\u606f\n     * @param passwordEncoder    \u5bc6\u7801\u89e3\u6790\u5668\uff0c\u7528\u4e8e\u52a0\u5bc6\u548c\u6821\u9a8c\u5bc6\u7801\n     */\n    public CaptchaAuthenticationProvider(UserDetailsService userDetailsService, PasswordEncoder passwordEncoder, RedisOperator<String> redisOperator) {\n        this.redisOperator = redisOperator;\n        super.setPasswordEncoder(passwordEncoder);\n        super.setUserDetailsService(userDetailsService);\n    }\n\n    @Override\n    public Authentication authenticate(Authentication authentication) throws AuthenticationException {\n        log.info("Authenticate captcha...");\n\n        // \u83b7\u53d6\u5f53\u524drequest\n        RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();\n        if (requestAttributes == null) {\n            throw new InvalidCaptchaException("Failed to get the current request.");\n        }\n        HttpServletRequest request = ((ServletRequestAttributes) requestAttributes).getRequest();\n\n        // \u83b7\u53d6\u5f53\u524d\u767b\u5f55\u65b9\u5f0f\n        String loginType = request.getParameter(SecurityConstants.LOGIN_TYPE_NAME);\n        if (!Objects.equals(loginType, SecurityConstants.PASSWORD_LOGIN_TYPE)) {\n            // \u53ea\u8981\u4e0d\u662f\u5bc6\u7801\u767b\u5f55\u90fd\u4e0d\u9700\u8981\u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801\n            log.info("It isn\'t necessary captcha authenticate.");\n            return super.authenticate(authentication);\n        }\n\n        // \u83b7\u53d6\u53c2\u6570\u4e2d\u7684\u9a8c\u8bc1\u7801\n        String code = request.getParameter(SecurityConstants.CAPTCHA_CODE_NAME);\n        if (ObjectUtils.isEmpty(code)) {\n            throw new InvalidCaptchaException("The captcha cannot be empty.");\n        }\n\n        String captchaId = request.getParameter(SecurityConstants.CAPTCHA_ID_NAME);\n        // \u83b7\u53d6\u7f13\u5b58\u4e2d\u5b58\u50a8\u7684\u9a8c\u8bc1\u7801\n        String captchaCode = redisOperator.getAndDelete((IMAGE_CAPTCHA_PREFIX_KEY + captchaId));\n        if (!ObjectUtils.isEmpty(captchaCode)) {\n            if (!captchaCode.equalsIgnoreCase(code)) {\n                throw new InvalidCaptchaException("The captcha is incorrect.");\n            }\n        } else {\n            throw new InvalidCaptchaException("The captcha is abnormal. Obtain it again.");\n        }\n\n        log.info("Captcha authenticated.");\n        return super.authenticate(authentication);\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"5-\u4fee\u6539smscaptchaloginauthenticationprovider\u4eceredis\u4e2d\u83b7\u53d6\u77ed\u4fe1\u9a8c\u8bc1\u7801",children:["5. \u4fee\u6539",(0,r.jsx)(n.code,{children:"SmsCaptchaLoginAuthenticationProvider"}),"\u4eceredis\u4e2d\u83b7\u53d6\u77ed\u4fe1\u9a8c\u8bc1\u7801"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.authorization.sms;\n\nimport com.example.authorization.captcha.CaptchaAuthenticationProvider;\nimport com.example.constant.SecurityConstants;\nimport com.example.exception.InvalidCaptchaException;\nimport com.example.support.RedisOperator;\nimport jakarta.servlet.http.HttpServletRequest;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.security.authentication.BadCredentialsException;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.AuthenticationException;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.oauth2.core.endpoint.OAuth2ParameterNames;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.context.request.RequestAttributes;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\n\nimport java.util.Objects;\n\nimport static com.example.constant.RedisConstants.SMS_CAPTCHA_PREFIX_KEY;\n\n/**\n * \u77ed\u4fe1\u9a8c\u8bc1\u7801\u6821\u9a8c\u5b9e\u73b0\n *\n * @author vains\n */\n@Slf4j\n@Component\npublic class SmsCaptchaLoginAuthenticationProvider extends CaptchaAuthenticationProvider {\n\n    private final RedisOperator<String> redisOperator;\n\n    /**\n     * \u5229\u7528\u6784\u9020\u65b9\u6cd5\u5728\u901a\u8fc7{@link Component}\u6ce8\u89e3\u521d\u59cb\u5316\u65f6\n     * \u6ce8\u5165UserDetailsService\u548cpasswordEncoder\uff0c\u7136\u540e\n     * \u8bbe\u7f6e\u8c03\u7528\u7236\u7c7b\u5173\u4e8e\u8fd9\u4e24\u4e2a\u5c5e\u6027\u7684set\u65b9\u6cd5\u8bbe\u7f6e\u8fdb\u53bb\n     *\n     * @param userDetailsService \u7528\u6237\u670d\u52a1\uff0c\u7ed9\u6846\u67b6\u63d0\u4f9b\u7528\u6237\u4fe1\u606f\n     * @param passwordEncoder    \u5bc6\u7801\u89e3\u6790\u5668\uff0c\u7528\u4e8e\u52a0\u5bc6\u548c\u6821\u9a8c\u5bc6\u7801\n     */\n    public SmsCaptchaLoginAuthenticationProvider(UserDetailsService userDetailsService, PasswordEncoder passwordEncoder, RedisOperator<String> redisOperator) {\n        super(userDetailsService, passwordEncoder, redisOperator);\n        this.redisOperator = redisOperator;\n    }\n\n    @Override\n    protected void additionalAuthenticationChecks(UserDetails userDetails, UsernamePasswordAuthenticationToken authentication) throws AuthenticationException {\n        log.info("Authenticate sms captcha...");\n\n        if (authentication.getCredentials() == null) {\n            this.logger.debug("Failed to authenticate since no credentials provided");\n            throw new BadCredentialsException("The sms captcha cannot be empty.");\n        }\n\n        // \u83b7\u53d6\u5f53\u524drequest\n        RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();\n        if (requestAttributes == null) {\n            throw new InvalidCaptchaException("Failed to get the current request.");\n        }\n        HttpServletRequest request = ((ServletRequestAttributes) requestAttributes).getRequest();\n\n        // \u83b7\u53d6\u5f53\u524d\u767b\u5f55\u65b9\u5f0f\n        String loginType = request.getParameter(SecurityConstants.LOGIN_TYPE_NAME);\n        // \u83b7\u53d6grant_type\n        String grantType = request.getParameter(OAuth2ParameterNames.GRANT_TYPE);\n        // \u77ed\u4fe1\u767b\u5f55\u548c\u81ea\u5b9a\u4e49\u77ed\u4fe1\u8ba4\u8bc1grant type\u4f1a\u8d70\u4e0b\u65b9\u8ba4\u8bc1\n        // \u5982\u679c\u662f\u81ea\u5b9a\u4e49\u5bc6\u7801\u6a21\u5f0f\u5219\u4e0b\u65b9\u7684\u8ba4\u8bc1\u5224\u65ad\u53ea\u8981\u5224\u65ad\u4e0bloginType\u5373\u53ef\n        // if (Objects.equals(loginType, SecurityConstants.SMS_LOGIN_TYPE)) {}\n        if (Objects.equals(loginType, SecurityConstants.SMS_LOGIN_TYPE)\n                || Objects.equals(grantType, SecurityConstants.GRANT_TYPE_SMS_CODE)) {\n            // \u83b7\u53d6\u5b58\u5165\u7f13\u5b58\u4e2d\u7684\u9a8c\u8bc1\u7801(UsernamePasswordAuthenticationToken\u7684principal\u4e2d\u73b0\u5728\u5b58\u5165\u7684\u662f\u624b\u673a\u53f7)\n            String smsCaptcha = redisOperator.getAndDelete((SMS_CAPTCHA_PREFIX_KEY + authentication.getPrincipal()));\n            // \u6821\u9a8c\u8f93\u5165\u7684\u9a8c\u8bc1\u7801\u662f\u5426\u6b63\u786e(UsernamePasswordAuthenticationToken\u7684credentials\u4e2d\u73b0\u5728\u5b58\u5165\u7684\u662f\u8f93\u5165\u7684\u9a8c\u8bc1\u7801)\n            if (!Objects.equals(smsCaptcha, authentication.getCredentials())) {\n                throw new BadCredentialsException("The sms captcha is incorrect.");\n            }\n            // \u5728\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u62d3\u5c55\u5176\u5b83\u767b\u5f55\u65b9\u5f0f\uff0c\u6bd4\u5982\u90ae\u7bb1\u767b\u5f55\u4ec0\u4e48\u7684\n        } else {\n            log.info("Not sms captcha loginType, exit.");\n            // \u5176\u5b83\u8c03\u7528\u7236\u7c7b\u9ed8\u8ba4\u5b9e\u73b0\u7684\u5bc6\u7801\u65b9\u5f0f\u767b\u5f55\n            super.additionalAuthenticationChecks(userDetails, authentication);\n        }\n\n        log.info("Authenticated sms captcha.");\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"6-\u4fee\u6539oauth2basicuser\u7684authorities\u5c5e\u6027\u4ee5\u9632\u5e8f\u5217\u5316\u5931\u8d25",children:["6. \u4fee\u6539",(0,r.jsx)(n.code,{children:"Oauth2BasicUser"}),"\u7684",(0,r.jsx)(n.code,{children:"authorities"}),"\u5c5e\u6027\uff0c\u4ee5\u9632\u5e8f\u5217\u5316\u5931\u8d25"]}),"\n",(0,r.jsxs)(n.p,{children:["\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u6700\u5f00\u59cb\u6ca1\u6709\u6dfb\u52a0",(0,r.jsx)(n.code,{children:"@JsonSerialize"}),"\u4e0e",(0,r.jsx)(n.code,{children:"@JsonIgnoreProperties(ignoreUnknown = true)"}),"\u6ce8\u89e3\uff0c\u5bfc\u81f4\u6388\u6743\u786e\u8ba4\u65f6\u6846\u67b6\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u53cd\u5e8f\u5217\u5316\u65f6\u5931\u8d25\uff0c\u4f1a\u5bfc\u81f4",(0,r.jsx)(n.code,{children:"JsonMixin"}),"\u5f02\u5e38\uff0c",(0,r.jsx)(n.code,{children:"@JsonSerialize"}),"\u6ce8\u89e3\u5c31\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53e6\u4e00\u4e2a\u662f\u5ffd\u7565\u672a\u77e5\u5c5e\u6027\u7684\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.entity;\n\nimport com.baomidou.mybatisplus.annotation.*;\n\nimport java.io.Serial;\nimport java.io.Serializable;\nimport java.time.LocalDateTime;\nimport java.util.Collection;\n\nimport com.example.model.security.CustomGrantedAuthority;\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.databind.annotation.JsonSerialize;\nimport lombok.Data;\nimport org.springframework.security.core.userdetails.UserDetails;\n\n/**\n * <p>\n * \u57fa\u7840\u7528\u6237\u4fe1\u606f\u8868\n * </p>\n *\n * @author vains\n */\n@Data\n@JsonSerialize\n@TableName("oauth2_basic_user")\n@JsonIgnoreProperties(ignoreUnknown = true)\npublic class Oauth2BasicUser implements UserDetails, Serializable {\n\n    @Serial\n    private static final long serialVersionUID = 1L;\n\n    /**\n     * \u81ea\u589eid\n     */\n    @TableId(value = "id", type = IdType.AUTO)\n    private Integer id;\n\n    /**\n     * \u7528\u6237\u540d\u3001\u6635\u79f0\n     */\n    private String name;\n\n    /**\n     * \u8d26\u53f7\n     */\n    private String account;\n\n    /**\n     * \u5bc6\u7801\n     */\n    private String password;\n\n    /**\n     * \u624b\u673a\u53f7\n     */\n    private String mobile;\n\n    /**\n     * \u90ae\u7bb1\n     */\n    private String email;\n\n    /**\n     * \u5934\u50cf\u5730\u5740\n     */\n    private String avatarUrl;\n\n    /**\n     * \u662f\u5426\u5df2\u5220\u9664\n     */\n    private Boolean deleted;\n\n    /**\n     * \u7528\u6237\u6765\u6e90\n     */\n    private String sourceFrom;\n\n    /**\n     * \u521b\u5efa\u65f6\u95f4\n     */\n    @TableField(fill = FieldFill.INSERT)\n    private LocalDateTime createTime;\n\n    /**\n     * \u4fee\u6539\u65f6\u95f4\n     */\n    @TableField(fill = FieldFill.INSERT_UPDATE)\n    private LocalDateTime updateTime;\n\n    /**\n     * \u6743\u9650\u4fe1\u606f\n     *  \u975e\u6570\u636e\u5e93\u5b57\u6bb5\n     */\n    @TableField(exist = false)\n    private Collection<CustomGrantedAuthority> authorities;\n\n    @Override\n    public Collection<CustomGrantedAuthority> getAuthorities() {\n        return this.authorities;\n    }\n\n    @Override\n    public String getUsername() {\n        return this.account;\n    }\n\n    @Override\n    public boolean isAccountNonExpired() {\n        return true;\n    }\n\n    @Override\n    public boolean isAccountNonLocked() {\n        return true;\n    }\n\n    @Override\n    public boolean isCredentialsNonExpired() {\n        return true;\n    }\n\n    @Override\n    public boolean isEnabled() {\n        return !this.deleted;\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"1-customgrantedauthority",children:["1. ",(0,r.jsx)(n.code,{children:"CustomGrantedAuthority"})]}),"\n",(0,r.jsxs)(n.p,{children:["\u8be5\u7c7b\u4e2d\u6dfb\u52a0",(0,r.jsx)(n.code,{children:"@JsonSerialize"}),"\u4e5f\u662f\u4e3a\u4e86\u89e3\u51b3",(0,r.jsx)(n.code,{children:"JsonMixin"}),"\u95ee\u9898"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"package com.example.model.security;\n\nimport com.fasterxml.jackson.databind.annotation.JsonSerialize;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport org.springframework.security.core.GrantedAuthority;\n\n/**\n * \u81ea\u5b9a\u4e49\u6743\u9650\u7c7b\n *\n * @author vains\n */\n@Data\n@JsonSerialize\n@NoArgsConstructor\n@AllArgsConstructor\npublic class CustomGrantedAuthority implements GrantedAuthority {\n\n    private String authority;\n\n    @Override\n    public String getAuthority() {\n        return this.authority;\n    }\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"7-redis\u5e38\u91cf\u7c7bredisconstants",children:["7. Redis\u5e38\u91cf\u7c7b",(0,r.jsx)(n.code,{children:"RedisConstants"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.constant;\n\n/**\n * Redis\u76f8\u5173\u5e38\u91cf\n *\n * @author vains\n */\npublic class RedisConstants {\n\n    /**\n     * \u77ed\u4fe1\u9a8c\u8bc1\u7801\u524d\u7f00\n     */\n    public static final String SMS_CAPTCHA_PREFIX_KEY = "mobile_phone:";\n\n    /**\n     * \u56fe\u5f62\u9a8c\u8bc1\u7801\u524d\u7f00\n     */\n    public static final String IMAGE_CAPTCHA_PREFIX_KEY = "image_captcha:";\n\n    /**\n     * \u9a8c\u8bc1\u7801\u8fc7\u671f\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e94\u5206\u949f\n     */\n    public static final long CAPTCHA_TIMEOUT_SECONDS = 60L * 5;\n\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"8-securityconstants\u6dfb\u52a0\u5e38\u91cf",children:["8. ",(0,r.jsx)(n.code,{children:"SecurityConstants"}),"\u6dfb\u52a0\u5e38\u91cf"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'/**\n * \u767b\u5f55\u65b9\u5f0f\u5165\u53c2\u540d\n */\npublic static final String LOGIN_TYPE_NAME = "loginType";\n\n/**\n * \u9a8c\u8bc1\u7801id\u5165\u53c2\u540d\n */\npublic static final String CAPTCHA_ID_NAME = "captchaId";\n\n/**\n * \u9a8c\u8bc1\u7801\u503c\u5165\u53c2\u540d\n */\npublic static final String CAPTCHA_CODE_NAME = "code";\n'})}),"\n",(0,r.jsx)(n.h2,{id:"\u56db\u6574\u5408spring-data-redis\u7684\u6b65\u9aa4",children:"\u56db\u3001\u6574\u5408Spring data redis\u7684\u6b65\u9aa4"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5f15\u5165starter"}),"\n",(0,r.jsx)(n.li,{children:"\u7f16\u5199redis\u914d\u7f6e\u7c7b(\u53ef\u9009)"}),"\n",(0,r.jsx)(n.li,{children:"\u7f16\u5199redis\u64cd\u4f5c\u7c7b(\u53ef\u9009)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"1-\u5f15\u5165starer",children:"1. \u5f15\u5165starer"}),"\n",(0,r.jsx)(n.p,{children:"Spring boot\u9879\u76ee\u4e2d\u76f4\u63a5\u5f15\u5165starter\u5373\u53ef"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-redis</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u5f15\u5165",(0,r.jsx)(n.code,{children:"jackson-datatype-jsr310"}),"\u63d0\u4f9b\u5bf9Java8\u7684\u7279\u6027\u4e0eJava8\u65f6\u95f4\u76f8\u5173\u5e8f\u5217\u5316\u652f\u6301"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>com.fasterxml.jackson.datatype</groupId>\n    <artifactId>jackson-datatype-jsr310</artifactId>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// \u65b9\u5f0f\u4e00: \u624b\u52a8\u6307\u5b9a\u5e8f\u5217\u5316\u65b9\u5f0f\n@JsonSerialize(using = LocalDateTimeSerializer.class)\n@JsonDeserialize(using = LocalDateTimeDeserializer.class)\nprivate LocalDateTime createTime;\n\n// \u65b9\u5f0f\u4e8c: \u6ce8\u518cJDK8Module\uff0c\u5168\u5c40\u89e3\u6790 LocalDateTime\nObjectMapper objectMapper = new ObjectMapper();\nobjectMapper.registerModule(new Jdk8Module());\nobjectMapper.registerModule(new JavaTimeModule());\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-\u7f16\u5199redis\u914d\u7f6e\u6587\u4ef6",children:"2. \u7f16\u5199Redis\u914d\u7f6e\u6587\u4ef6"}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u4e2a\u662f\u53ef\u9009\u7684\uff0c\u4f46\u662f\u5982\u679c\u4e0d\u52a0\u8fd9\u4e9b\u5e8f\u5217\u5316\u5668\u4f1a\u4f7f\u7528jdk\u7684\u5e8f\u5217\u5316\u5668\uff0c\u5bfc\u81f4\u4f7f\u7528redis\u5ba2\u6237\u7aef\u67e5\u770b\u65f6\u4e0e\u5143\u6570\u636e\u6709\u5dee\u5f02"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"2023-07-10\u66f4\u65b0\uff1a\u53bb\u9664\u503c\u5e8f\u5217\u5316\u5668\uff0c\u79fb\u9664\u5185\u5bb9\u5982\u4e0b"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// \u8bbe\u7f6e\u503c\u5e8f\u5217\u5316\u5668(\u8be5\u5185\u5bb9\u5df2\u79fb\u9664)\nredisTemplate.setValueSerializer(valueSerializer);\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["2023-09-23\u66f4\u65b0\uff1a\u6dfb\u52a0",(0,r.jsx)(n.code,{children:"Security"}),"\u63d0\u4f9b\u7684",(0,r.jsx)(n.code,{children:"Json Mixin"}),"\uff0c\u652f\u6301",(0,r.jsx)(n.code,{children:"Jackson"}),"\u7684\u503c\u5e8f\u5217\u5316\u5668"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"package com.example.config;\n\nimport com.fasterxml.jackson.annotation.JsonAutoDetect;\nimport com.fasterxml.jackson.annotation.JsonTypeInfo;\nimport com.fasterxml.jackson.annotation.PropertyAccessor;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.connection.RedisConnectionFactory;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;\nimport org.springframework.data.redis.serializer.StringRedisSerializer;\nimport org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;\nimport org.springframework.security.jackson2.CoreJackson2Module;\n\n/**\n * Redis\u7684key\u5e8f\u5217\u5316\u914d\u7f6e\u7c7b\n *\n * @author vains\n */\n@Configuration\n@RequiredArgsConstructor\npublic class RedisConfig {\n\n    private final Jackson2ObjectMapperBuilder builder;\n\n    /**\n     * \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\n     *\n     * @param connectionFactory redis\u94fe\u63a5\u5de5\u5382\n     * @return RedisTemplate\n     */\n    @Bean\n    public RedisTemplate<Object, Object> redisTemplate(RedisConnectionFactory connectionFactory) {\n        // \u5b57\u7b26\u4e32\u5e8f\u5217\u5316\u5668\n        StringRedisSerializer stringRedisSerializer = new StringRedisSerializer();\n\n        // \u521b\u5efaObjectMapper\u5e76\u6dfb\u52a0\u9ed8\u8ba4\u914d\u7f6e\n        ObjectMapper objectMapper = builder.createXmlMapper(false).build();\n\n        // \u5e8f\u5217\u5316\u6240\u6709\u5b57\u6bb5\n        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);\n\n        // \u6b64\u9879\u5fc5\u987b\u914d\u7f6e\uff0c\u5426\u5219\u5982\u679c\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u91cc\u8fb9\u8fd8\u6709\u5bf9\u8c61\uff0c\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef\uff1a\n        //     java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to XXX\n        objectMapper.activateDefaultTyping(\n                objectMapper.getPolymorphicTypeValidator(),\n                ObjectMapper.DefaultTyping.NON_FINAL,\n                JsonTypeInfo.As.PROPERTY);\n\n        // \u6dfb\u52a0Security\u63d0\u4f9b\u7684Jackson Mixin\n        objectMapper.registerModule(new CoreJackson2Module());\n\n        // \u5b58\u5165redis\u65f6\u5e8f\u5217\u5316\u503c\u7684\u5e8f\u5217\u5316\u5668\n        Jackson2JsonRedisSerializer<Object> valueSerializer =\n                new Jackson2JsonRedisSerializer<>(objectMapper, Object.class);\n\n        RedisTemplate<Object, Object> redisTemplate = new RedisTemplate<>();\n\n        // \u8bbe\u7f6e\u503c\u5e8f\u5217\u5316\n        redisTemplate.setValueSerializer(valueSerializer);\n        // \u8bbe\u7f6ehash\u683c\u5f0f\u6570\u636e\u503c\u7684\u5e8f\u5217\u5316\u5668\n        redisTemplate.setHashValueSerializer(valueSerializer);\n        // \u9ed8\u8ba4\u7684Key\u5e8f\u5217\u5316\u5668\u4e3a\uff1aJdkSerializationRedisSerializer\n        redisTemplate.setKeySerializer(stringRedisSerializer);\n        // \u8bbe\u7f6e\u5b57\u7b26\u4e32\u5e8f\u5217\u5316\u5668\n        redisTemplate.setStringSerializer(stringRedisSerializer);\n        // \u8bbe\u7f6ehash\u7ed3\u6784\u7684key\u7684\u5e8f\u5217\u5316\u5668\n        redisTemplate.setHashKeySerializer(stringRedisSerializer);\n\n        // \u8bbe\u7f6e\u8fde\u63a5\u5de5\u5382\n        redisTemplate.setConnectionFactory(connectionFactory);\n\n        return redisTemplate;\n    }\n\n    /**\n     * \u64cd\u4f5chash\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\n     *\n     * @param connectionFactory redis\u94fe\u63a5\u5de5\u5382\n     * @return RedisTemplate\n     */\n    @Bean\n    public RedisTemplate<Object, Object> redisHashTemplate(RedisConnectionFactory connectionFactory) {\n\n        return redisTemplate(connectionFactory);\n    }\n\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-\u7f16\u5199redis\u64cd\u4f5c\u7c7b",children:"3. \u7f16\u5199redis\u64cd\u4f5c\u7c7b"}),"\n",(0,r.jsxs)(n.p,{children:["\u53ef\u9009\uff0c\u6846\u67b6\u63d0\u4f9b\u4e86",(0,r.jsx)(n.code,{children:"RedisTemplate"}),"\u6765\u64cd\u4f5credis"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"package com.example.support;\n\nimport com.example.util.JsonUtils;\nimport jakarta.annotation.Resource;\nimport org.springframework.data.redis.core.HashOperations;\nimport org.springframework.data.redis.core.ListOperations;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.core.ValueOperations;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.ObjectUtils;\n\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Map;\nimport java.util.concurrent.TimeUnit;\n\n/**\n * Redis\u64cd\u4f5c\u7c7b\n *\n * @param <V> value\u7684\u7c7b\u578b\n * @author vains\n */\n@Component\npublic class RedisOperator<V> {\n\n    /**\n     * \u8fd9\u91cc\u4f7f\u7528 @Resource \u6ce8\u89e3\u662f\u56e0\u4e3a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u5165ioc\u7684\u6cdb\u578b\u662f<Object, Object>\uff0c\u6240\u4ee5\u7c7b\u578b\u5339\u914d\u4e0d\u4e0a\uff0c\n     * resource\u662f\u4f1a\u5148\u6839\u636e\u540d\u5b57\u53bb\u5339\u914d\u7684\uff0c\u6240\u4ee5\u4f7f\u7528Resource\u6ce8\u89e3\u53ef\u4ee5\u6210\u529f\u6ce8\u5165\n     */\n    @Resource\n    private RedisTemplate<String, V> redisTemplate;\n\n    @Resource\n    private RedisTemplate<String, Object> redisHashTemplate;\n\n    /**\n     * \u8bbe\u7f6ekey\u7684\u8fc7\u671f\u65f6\u95f4\n     *\n     * @param key     \u7f13\u5b58key\n     * @param timeout \u5b58\u6d3b\u65f6\u95f4\n     * @param unit    \u65f6\u95f4\u5355\u4f4d\n     */\n    public void setExpire(String key, long timeout, TimeUnit unit) {\n        redisHashTemplate.expire(key, timeout, unit);\n    }\n\n    /**\n     * \u6839\u636ekey\u5220\u9664\u7f13\u5b58\n     *\n     * @param keys \u8981\u5220\u9664\u7684key\uff0c\u53ef\u53d8\u53c2\u6570\u5217\u8868\n     * @return \u5220\u9664\u7684\u7f13\u5b58\u6570\u91cf\n     */\n    public Long delete(String... keys) {\n        if (ObjectUtils.isEmpty(keys)) {\n            return 0L;\n        }\n        return redisTemplate.delete(Arrays.asList(keys));\n    }\n\n    /**\n     * \u5b58\u5165\u503c\n     *\n     * @param key   \u7f13\u5b58\u4e2d\u7684key\n     * @param value \u5b58\u5165\u7684value\n     */\n    public void set(String key, V value) {\n        valueOperations().set(key, value);\n    }\n\n    /**\n     * \u6839\u636ekey\u53d6\u503c\n     *\n     * @param key \u7f13\u5b58\u4e2d\u7684key\n     * @return \u8fd4\u56de\u952e\u503c\u5bf9\u5e94\u7f13\u5b58\n     */\n    public V get(String key) {\n        return valueOperations().get(key);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u952e\u503c\u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\n     *\n     * @param key     \u952e\n     * @param value   \u503c\n     * @param timeout \u8fc7\u671f\u65f6\u95f4\n     * @param unit    \u8fc7\u671f\u65f6\u95f4\u7684\u5355\u4f4d\n     */\n    public void set(String key, V value, long timeout, TimeUnit unit) {\n        valueOperations().set(key, value, timeout, unit);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u952e\u503c\u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff08\u5355\u4f4d\u79d2\uff09\n     *\n     * @param key     \u952e\n     * @param value   \u503c\n     * @param timeout \u8fc7\u671f\u65f6\u95f4,\u5355\u4f4d\uff1a\u79d2\n     */\n    public void set(String key, V value, long timeout) {\n        this.set(key, value, timeout, TimeUnit.SECONDS);\n    }\n\n    /**\n     * \u6839\u636ekey\u83b7\u53d6\u7f13\u5b58\u5e76\u5220\u9664\u7f13\u5b58\n     *\n     * @param key \u8981\u83b7\u53d6\u7f13\u5b58\u7684key\n     * @return key\u5bf9\u5e94\u7684\u7f13\u5b58\n     */\n    public V getAndDelete(String key) {\n        if (ObjectUtils.isEmpty(key)) {\n            return null;\n        }\n        V value = valueOperations().get(key);\n        this.delete(key);\n        return value;\n    }\n\n    /**\n     * \u5f80hash\u7c7b\u578b\u7684\u6570\u636e\u4e2d\u5b58\u503c\n     *\n     * @param key   \u7f13\u5b58\u4e2d\u7684key\n     * @param field hash\u7ed3\u6784\u7684key\n     * @param value \u5b58\u5165\u7684value\n     */\n    public void setHash(String key, String field, V value) {\n        hashOperations().put(key, field, value);\n    }\n\n    /**\n     * \u6839\u636ekey\u53d6\u503c\n     *\n     * @param key \u7f13\u5b58\u4e2d\u7684key\n     * @return \u7f13\u5b58key\u5bf9\u5e94\u7684hash\u6570\u636e\u4e2dfield\u5c5e\u6027\u7684\u503c\n     */\n    public Object getHash(String key, String field) {\n        return hashOperations().hasKey(key, field) ? hashOperations().get(key, field) : null;\n    }\n\n    /**\n     * \u4ee5hash\u683c\u5f0f\u5b58\u5165redis\n     *\n     * @param key   \u7f13\u5b58\u4e2d\u7684key\n     * @param value \u5b58\u5165\u7684\u5bf9\u8c61\n     */\n    public void setHashAll(String key, Object value) {\n        Map<String, Object> map = JsonUtils.objectCovertToObject(value, Map.class, String.class, Object.class);\n        hashOperations().putAll(key, map);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u952e\u503c\u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\n     *\n     * @param key     \u952e\n     * @param value   \u503c\n     * @param timeout \u8fc7\u671f\u65f6\u95f4\n     * @param unit    \u8fc7\u671f\u65f6\u95f4\u7684\u5355\u4f4d\n     */\n    public void setHashAll(String key, Object value, long timeout, TimeUnit unit) {\n        this.setHashAll(key, value);\n        this.setExpire(key, timeout, unit);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u952e\u503c\u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff08\u5355\u4f4d\u79d2\uff09\n     *\n     * @param key     \u952e\n     * @param value   \u503c\n     * @param timeout \u8fc7\u671f\u65f6\u95f4,\u5355\u4f4d\uff1a\u79d2\n     */\n    public void setHashAll(String key, Object value, long timeout) {\n        this.setHashAll(key, value, timeout, TimeUnit.SECONDS);\n    }\n\n    /**\n     * \u4eceredis\u4e2d\u83b7\u53d6hash\u7c7b\u578b\u6570\u636e\n     *\n     * @param key \u7f13\u5b58\u4e2d\u7684key\n     * @return redis \u4e2dhash\u6570\u636e\n     */\n    public Map<String, Object> getMapHashAll(String key) {\n        return hashOperations().entries(key);\n    }\n\n    /**\n     * \u6839\u636e\u6307\u5b9aclazz\u7c7b\u578b\u4eceredis\u4e2d\u83b7\u53d6\u5bf9\u5e94\u7684\u5b9e\u4f8b\n     *\n     * @param key   \u7f13\u5b58key\n     * @param clazz hash\u5bf9\u5e94java\u7c7b\u7684class\n     * @param <T>   redis\u4e2dhash\u5bf9\u5e94\u7684java\u7c7b\u578b\n     * @return clazz\u5b9e\u4f8b\n     */\n    public <T> T getHashAll(String key, Class<T> clazz) {\n        Map<String, Object> entries = hashOperations().entries(key);\n        if (ObjectUtils.isEmpty(entries)) {\n            return null;\n        }\n        return JsonUtils.objectCovertToObject(entries, clazz);\n    }\n\n    /**\n     * \u6839\u636ekey\u5220\u9664\u7f13\u5b58\n     *\n     * @param key    \u8981\u5220\u9664\u7684key\n     * @param fields key\u5bf9\u5e94\u7684hash\u6570\u636e\u7684\u952e\u503c(HashKey)\uff0c\u53ef\u53d8\u53c2\u6570\u5217\u8868\n     * @return hash\u5220\u9664\u7684\u5c5e\u6027\u6570\u91cf\n     */\n    public Long deleteHashField(String key, String... fields) {\n        if (ObjectUtils.isEmpty(key) || ObjectUtils.isEmpty(fields)) {\n            return 0L;\n        }\n        return hashOperations().delete(key, (Object[]) fields);\n    }\n\n    /**\n     * \u5c06value\u6dfb\u52a0\u81f3key\u5bf9\u5e94\u7684\u5217\u8868\u4e2d\n     *\n     * @param key   \u7f13\u5b58key\n     * @param value \u503c\n     */\n    public void listPush(String key, V value) {\n        listOperations().rightPush(key, value);\n    }\n\n    /**\n     * \u5c06value\u6dfb\u52a0\u81f3key\u5bf9\u5e94\u7684\u5217\u8868\u4e2d\uff0c\u5e76\u6dfb\u52a0\u8fc7\u671f\u65f6\u95f4\n     *\n     * @param key     \u7f13\u5b58key\n     * @param value   \u503c\n     * @param timeout key\u7684\u5b58\u6d3b\u65f6\u95f4\n     * @param unit    \u65f6\u95f4\u5355\u4f4d\n     */\n    public void listPush(String key, V value, long timeout, TimeUnit unit) {\n        listOperations().rightPush(key, value);\n        this.setExpire(key, timeout, unit);\n    }\n\n    /**\n     * \u5c06value\u6dfb\u52a0\u81f3key\u5bf9\u5e94\u7684\u5217\u8868\u4e2d\uff0c\u5e76\u6dfb\u52a0\u8fc7\u671f\u65f6\u95f4\n     * \u9ed8\u8ba4\u5355\u4f4d\u662f\u79d2(s)\n     *\n     * @param key     \u7f13\u5b58key\n     * @param value   \u503c\n     * @param timeout key\u7684\u5b58\u6d3b\u65f6\u95f4\n     */\n    public void listPush(String key, V value, long timeout) {\n        this.listPush(key, value, timeout, TimeUnit.SECONDS);\n    }\n\n    /**\n     * \u5c06\u4f20\u5165\u7684\u53c2\u6570\u5217\u8868\u6dfb\u52a0\u81f3key\u7684\u5217\u8868\u4e2d\n     *\n     * @param key    \u7f13\u5b58key\n     * @param values \u503c\u5217\u8868\n     * @return \u5b58\u5165\u6570\u636e\u7684\u957f\u5ea6\n     */\n    public Long listPushAll(String key, Collection<V> values) {\n        return listOperations().rightPushAll(key, values);\n    }\n\n    /**\n     * \u5c06\u4f20\u5165\u7684\u53c2\u6570\u5217\u8868\u6dfb\u52a0\u81f3key\u7684\u5217\u8868\u4e2d\uff0c\u5e76\u8bbe\u7f6ekey\u7684\u5b58\u6d3b\u65f6\u95f4\n     *\n     * @param key     \u7f13\u5b58key\n     * @param values  \u503c\u5217\u8868\n     * @param timeout key\u7684\u5b58\u6d3b\u65f6\u95f4\n     * @param unit    \u65f6\u95f4\u5355\u4f4d\n     * @return \u5b58\u5165\u6570\u636e\u7684\u957f\u5ea6\n     */\n    public Long listPushAll(String key, Collection<V> values, long timeout, TimeUnit unit) {\n        Long count = listOperations().rightPushAll(key, values);\n        this.setExpire(key, timeout, unit);\n        return count;\n    }\n\n    /**\n     * \u5c06\u4f20\u5165\u7684\u53c2\u6570\u5217\u8868\u6dfb\u52a0\u81f3key\u7684\u5217\u8868\u4e2d\uff0c\u5e76\u8bbe\u7f6ekey\u7684\u5b58\u6d3b\u65f6\u95f4\n     *  \u9ed8\u8ba4\u5355\u4f4d\u662f\u79d2(s)\n     *\n     * @param key     \u7f13\u5b58key\n     * @param values  \u503c\u5217\u8868\n     * @param timeout key\u7684\u5b58\u6d3b\u65f6\u95f4\n     * @return \u5b58\u5165\u6570\u636e\u7684\u957f\u5ea6\n     */\n    public Long listPushAll(String key, Collection<V> values, long timeout) {\n        return this.listPushAll(key, values, timeout, TimeUnit.SECONDS);\n    }\n\n    /**\n     * \u6839\u636ekey\u83b7\u53d6list\u5217\u8868\n     *\n     * @param key \u7f13\u5b58key\n     * @return key\u5bf9\u5e94\u7684list\u5217\u8868\n     */\n    public Collection<V> getList(String key) {\n        Long size = listOperations().size(key);\n        if (size == null || size == 0) {\n            return null;\n        }\n        return listOperations().range(key, 0, (size - 1));\n    }\n\n    /**\n     * value\u64cd\u4f5c\u96c6\n     *\n     * @return ValueOperations\n     */\n    private ValueOperations<String, V> valueOperations() {\n        return redisTemplate.opsForValue();\n    }\n\n    /**\n     * hash\u64cd\u4f5c\u96c6\n     *\n     * @return ValueOperations\n     */\n    private HashOperations<String, String, Object> hashOperations() {\n        return redisHashTemplate.opsForHash();\n    }\n\n    /**\n     * hash\u64cd\u4f5c\u96c6\n     *\n     * @return ValueOperations\n     */\n    private ListOperations<String, V> listOperations() {\n        return redisTemplate.opsForList();\n    }\n\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u6682\u65f6\u53ea\u63d0\u4f9b\u4e86string\u3001list\u3001hash\u7684\u64cd\u4f5c\uff0c\u5176\u5b83\u7684\u540e\u7eed\u5728\u52a0\u5427"}),"\n",(0,r.jsx)(n.h3,{id:"4-\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\u6d4b\u8bd5\u8fd9\u4e2a\u5de5\u5177\u7c7b",children:"4. \u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\u6d4b\u8bd5\u8fd9\u4e2a\u5de5\u5177\u7c7b"}),"\n",(0,r.jsx)(n.p,{children:"test\u76ee\u5f55\u4e0b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example;\n\nimport com.example.entity.Oauth2BasicUser;\nimport com.example.support.RedisOperator;\nimport lombok.SneakyThrows;\nimport lombok.extern.slf4j.Slf4j;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.security.core.userdetails.UserDetailsService;\n\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.TimeUnit;\n\n/**\n * redis\u5de5\u5177\u7c7b\u6d4b\u8bd5\n *\n * @author vains\n */\n@Slf4j\n@SpringBootTest\npublic class RedisOperatorTests {\n\n    @Autowired\n    private RedisOperator<String> redisOperator;\n\n    @Autowired\n    private UserDetailsService userDetailsService;\n\n    @Autowired\n    private RedisOperator<Oauth2BasicUser> userRedisOperator;\n\n    @Test\n    @SneakyThrows\n    void contextLoads() {\n        // \u9ed8\u8ba4key\n        String defaultKey = "testKey";\n        // \u9ed8\u8ba4\u7f13\u5b58\u503c\n        String defaultValue = "123456";\n        // key\u7684\u5b58\u6d3b\u65f6\u95f4\n        long timeout = 3;\n        // \u64cd\u4f5chash\u7684\u5c5e\u6027\u58f0\u660e\n        String name = "name";\n\n        // \u6e05\u9664key\n        redisOperator.delete(defaultKey);\n\n        // \u83b7\u53d6\u7528\u6237\u4fe1\u606f\n        Oauth2BasicUser userDetails = (Oauth2BasicUser) userDetailsService.loadUserByUsername("admin");\n\n        redisOperator.set(defaultKey, defaultValue);\n        log.info("\u6839\u636ekey\uff1a{}\u5b58\u5165\u503c{}", defaultKey, defaultValue);\n\n        String valueByKey = redisOperator.get(defaultKey);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230\u503c\uff1a{}", defaultKey, valueByKey);\n\n        String valueByKeyAndDelete = redisOperator.getAndDelete(defaultKey);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230\u503c\uff1a{},\u5220\u9664key.", defaultKey, valueByKeyAndDelete);\n\n        Long delete = redisOperator.delete(defaultKey);\n        log.info("\u5220\u9664key\uff1a{}\uff0c\u5220\u9664\u6570\u91cf\uff1a{}.", defaultKey, delete);\n\n        valueByKey = redisOperator.get(defaultKey);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230\u503c\uff1a{}", defaultKey, valueByKey);\n\n        redisOperator.set(defaultKey, defaultValue, timeout);\n        log.info("\u6839\u636ekey\uff1a{}\u5b58\u5165\u503c{}\uff0c\u5b58\u6d3b\u65f6\u957f\u4e3a\uff1a{}", defaultKey, defaultValue, timeout);\n        valueByKey = redisOperator.get(defaultKey);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230\u503c\uff1a{}", defaultKey, valueByKey);\n\n        // \u7761\u7720\uff0c\u8ba9key\u5931\u6548\n        TimeUnit.SECONDS.sleep((timeout + 1));\n\n        // \u91cd\u590d\u83b7\u53d6\n        valueByKey = redisOperator.get(defaultKey);\n        log.info("\u7ebf\u7a0b\u7761\u7720\u540e\u6839\u636e\u5931\u6548\u7684key\uff1a{}\u83b7\u53d6\u5230\u503c\uff1a{}", defaultKey, valueByKey);\n\n        redisOperator.setHashAll(defaultKey, userDetails, timeout);\n        log.info("\u6839\u636ekey\uff1a{}\u5b58\u5165hash\u7c7b\u578b\u503c{},\u5b58\u6d3b\u65f6\u95f4\uff1a{}", defaultKey, userDetails, timeout);\n\n        Oauth2BasicUser basicUser = redisOperator.getHashAll(defaultKey, Oauth2BasicUser.class);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230hash\u7c7b\u578b\u503c\uff1a{}", defaultKey, basicUser);\n\n        // \u7761\u7720\uff0c\u8ba9key\u5931\u6548\n        TimeUnit.SECONDS.sleep((timeout + 1));\n        // \u91cd\u590d\u83b7\u53d6\n        basicUser = redisOperator.getHashAll(defaultKey, Oauth2BasicUser.class);\n        log.info("\u7ebf\u7a0b\u7761\u7720\u540e\u6839\u636e\u5931\u6548\u7684key\uff1a{}\u83b7\u53d6\u5230hash\u7c7b\u578b\u503c\uff1a{}", defaultKey, basicUser);\n\n        redisOperator.setHashAll(defaultKey, userDetails, timeout);\n        log.info("\u6839\u636ekey\uff1a{}\u5b58\u5165hash\u7c7b\u578b\u503c{},\u5b58\u6d3b\u65f6\u95f4\uff1a{}", defaultKey, userDetails, timeout);\n\n        Map<String, Object> mapHashAll = redisOperator.getMapHashAll(defaultKey);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230hash\u7c7b\u578b\u503c\uff1a{}", defaultKey, mapHashAll);\n\n        Object field = redisOperator.getHash(defaultKey, name);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230hash\u7c7b\u578b\u5c5e\u6027\uff1a{}\u7684\u503c\uff1a{}", defaultKey, name, field);\n\n        Long deleteHashField = redisOperator.deleteHashField(defaultKey, name);\n        log.info("\u6839\u636ekey\uff1a{}\u5220\u9664hash\u7c7b\u578b\u7684{}\u5c5e\u6027\uff0c\u5220\u9664\u6570\u91cf\uff1a{}", defaultKey, name, deleteHashField);\n\n        // \u91cd\u590d\u83b7\u53d6\u9a8c\u8bc1\u5220\u9664\n        field = redisOperator.getHash(defaultKey, name);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230hash\u7c7b\u578b\u5c5e\u6027\uff1a{}\u7684\u503c\uff1a{}", defaultKey, name, field);\n        basicUser = redisOperator.getHashAll(defaultKey, Oauth2BasicUser.class);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230hash\u7c7b\u578b\u503c\uff1a{}", defaultKey, basicUser);\n\n        redisOperator.setHash(defaultKey, name, userDetails.getName());\n        log.info("\u6839\u636ekey\uff1a{}\u8bbe\u7f6ehash\u7c7b\u578b\u7684{}\u5c5e\u6027\uff0c\u5c5e\u6027\u503c\u4e3a\uff1a{}", defaultKey, name, userDetails.getName());\n\n        // \u91cd\u590d\u83b7\u53d6\u9a8c\u8bc1\u5220\u9664\n        field = redisOperator.getHash(defaultKey, name);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230hash\u7c7b\u578b\u5c5e\u6027\uff1a{}\u7684\u503c\uff1a{}", defaultKey, name, field);\n        basicUser = redisOperator.getHashAll(defaultKey, Oauth2BasicUser.class);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6\u5230hash\u7c7b\u578b\u503c\uff1a{}", defaultKey, basicUser);\n\n        // \u6e05\u9664key\n        redisOperator.delete(defaultKey);\n\n        userRedisOperator.listPush(defaultKey, userDetails);\n        log.info("\u6839\u636ekey\uff1a{}\u5f80list\u7c7b\u578b\u6570\u636e\u4e2d\u6dfb\u52a0\u6570\u636e\uff1a{}", defaultKey, userDetails);\n\n        Collection<Oauth2BasicUser> users = userRedisOperator.getList(defaultKey);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6list\u6570\u636e\uff1a{}", defaultKey, users);\n\n        Long listPushAll = userRedisOperator.listPushAll(defaultKey, List.of(userDetails));\n        log.info("\u6839\u636ekey\uff1a{}\u5f80list\u7c7b\u578b\u6570\u636e\u4e2d\u6dfb\u52a0\u6570\u636e\uff1a{}\uff0c\u6210\u529f\u6dfb\u52a0{}\u6761\u6570\u636e", defaultKey, List.of(userDetails), listPushAll);\n\n        users = userRedisOperator.getList(defaultKey);\n        log.info("\u6839\u636ekey\uff1a{}\u83b7\u53d6list\u6570\u636e\uff1a{}", defaultKey, users);\n\n        userRedisOperator.listPush(defaultKey, userDetails, timeout);\n        log.info("\u6839\u636ekey\uff1a{}\u5f80list\u7c7b\u578b\u6570\u636e\u4e2d\u6dfb\u52a0\u6570\u636e\uff1a{}\uff0ckey\u7684\u5b58\u6d3b\u65f6\u95f4\u4e3a\uff1a{}", defaultKey, userDetails, timeout);\n        // \u7761\u7720\uff0c\u8ba9key\u5931\u6548\n        TimeUnit.SECONDS.sleep((timeout + 1));\n        // \u91cd\u590d\u83b7\u53d6\n        users = userRedisOperator.getList(defaultKey);\n        log.info("\u7ebf\u7a0b\u7761\u7720\u540e\u6839\u636e\u5931\u6548\u7684key\uff1a{}\u83b7\u53d6\u5230list\u7c7b\u578b\u503c\uff1a{}", defaultKey, users);\n\n        Long aLong = userRedisOperator.listPushAll(defaultKey, List.of(userDetails), timeout);\n        log.info("\u6839\u636ekey\uff1a{}\u5f80list\u7c7b\u578b\u6570\u636e\u4e2d\u6dfb\u52a0\u6570\u636e\uff1a{}\uff0c\u6210\u529f\u6dfb\u52a0{}\u6761\u6570\u636e\uff0c\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff1a{}", defaultKey, List.of(userDetails), aLong, timeout);\n    }\n\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"\u4e94\u6d4b\u8bd5",children:"\u4e94\u3001\u6d4b\u8bd5"}),"\n",(0,r.jsx)(n.p,{children:"\u7ec4\u88c5url\u53d1\u8d77\u6388\u6743\u8bf7\u6c42"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"http://127.0.0.1:8080/oauth2/authorize?client_id=messaging-client&response_type=code&scope=message.read&redirect_uri=http://127.0.0.1:8000/login/oauth2/code/messaging-client-oidc\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u9875\u9762"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(18730).A+"",width:"1920",height:"986"})}),"\n",(0,r.jsx)(n.p,{children:"\u67e5\u770bredis"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(62698).A+"",width:"1920",height:"144"})}),"\n",(0,r.jsx)(n.p,{children:"\u767b\u5f55\u540e\u91cd\u5b9a\u5411\u81f3\u6388\u6743\u786e\u8ba4\u9875\u9762"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(18084).A+"",width:"1920",height:"988"})}),"\n",(0,r.jsx)(n.p,{children:"\u786e\u8ba4\u540e\u91cd\u5b9a\u5411\u81f3\u56de\u8c03\u9875\u9762"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(66151).A+"",width:"1920",height:"299"})}),"\n",(0,r.jsx)(n.p,{children:"\u5982\u679c\u6709\u4ec0\u4e48\u95ee\u9898\u8bf7\u5728\u8bc4\u8bba\u533a\u6307\u51fa\uff0c\u5982\u679c\u6211\u770b\u5230\u4f1a\u5c3d\u5feb\u5904\u7406\u7684\uff0c\u8c22\u8c22"}),"\n",(0,r.jsxs)(n.p,{children:["\u4ee3\u7801\u5df2\u63d0\u4ea4\u81f3Gitee\uff1a",(0,r.jsx)(n.a,{href:"https://gitee.com/vains-Sofia/authorization-example",children:"\u4ed3\u5e93\u5730\u5740"})]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},18730:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/101-1-79c1a7fd488e38d67c07f90668bcc38c.awebp"},62698:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/101-2-d80c6bae97a179b1fb9d51ba784eb87c.awebp"},18084:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/101-3-3ef63ce1e682286bcec085add537d9dd.awebp"},66151:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/101-4-5e2e7e13924aa60c5ecd0d785e74793d.awebp"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(96540);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);