"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[8757],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var u=n.createContext({}),s=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(a),c=l,f=m["".concat(u,".").concat(c)]||m[c]||d[c]||r;return a?n.createElement(f,i(i({ref:t},p),{},{components:a})):n.createElement(f,i({ref:t},p))}));function f(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[m]="string"==typeof e?e:l,i[1]=o;for(var s=2;s<r;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},7284:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=a(7462),l=(a(7294),a(3905));const r={},i=void 0,o={unversionedId:"influxdb/Influxdb-Export-To-Timescaledb",id:"influxdb/Influxdb-Export-To-Timescaledb",title:"Influxdb-Export-To-Timescaledb",description:"\u4f7f\u7528outflux \u5bfc\u5165influxdb\u7684\u6570\u636e\u5230timescaledb",source:"@site/middleware/influxdb/Influxdb-Export-To-Timescaledb.md",sourceDirName:"influxdb",slug:"/influxdb/Influxdb-Export-To-Timescaledb",permalink:"/light-docusaurus/middleware/influxdb/Influxdb-Export-To-Timescaledb",draft:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/middleware/influxdb/Influxdb-Export-To-Timescaledb.md",tags:[],version:"current",lastUpdatedBy:"Hui Liu",lastUpdatedAt:1692685099,formattedLastUpdatedAt:"2023\u5e748\u670822\u65e5",frontMatter:{},sidebar:"middleware",previous:{title:"Influxdb-DownSample",permalink:"/light-docusaurus/middleware/influxdb/Influxdb-DownSample"},next:{title:"Influxdb-Retention-Policy",permalink:"/light-docusaurus/middleware/influxdb/Influxdb-Retention-Policy"}},u={},s=[{value:"\u4f7f\u7528<code>outflux</code> \u5bfc\u5165<code>influxdb</code>\u7684\u6570\u636e\u5230<code>timescaledb</code>",id:"\u4f7f\u7528outflux-\u5bfc\u5165influxdb\u7684\u6570\u636e\u5230timescaledb",level:2},{value:"1. \u73af\u5883\u51c6\u5907",id:"1-\u73af\u5883\u51c6\u5907",level:2},{value:"2. Influxdb \u6570\u636e\u5bfc\u5165",id:"2-influxdb-\u6570\u636e\u5bfc\u5165",level:2},{value:"3. Schema \u8fc1\u79fb",id:"3-schema-\u8fc1\u79fb",level:2},{value:"4. \u6570\u636e\u8fc1\u79fb",id:"4-\u6570\u636e\u8fc1\u79fb",level:2},{value:"5. \u53c2\u8003\u8d44\u6599",id:"5-\u53c2\u8003\u8d44\u6599",level:2}],p={toc:s},m="wrapper";function d(e){let{components:t,...a}=e;return(0,l.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"\u4f7f\u7528outflux-\u5bfc\u5165influxdb\u7684\u6570\u636e\u5230timescaledb"},"\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"h2"},"outflux")," \u5bfc\u5165",(0,l.kt)("inlineCode",{parentName:"h2"},"influxdb"),"\u7684\u6570\u636e\u5230",(0,l.kt)("inlineCode",{parentName:"h2"},"timescaledb")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"influxdb")," \u4ee5\u53ca ",(0,l.kt)("inlineCode",{parentName:"p"},"timescaledb")," \u90fd\u662f\u4e0d\u9519\u7684\u65f6\u5e8f\u6570\u636e\u5e93\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"timescaledb")," \u56e2\u961f\u63d0\u4f9b\u4e86\u76f4\u63a5\u4ece ",(0,l.kt)("inlineCode",{parentName:"p"},"influxdb")," \u5bfc\u5165"),(0,l.kt)("h2",{id:"1-\u73af\u5883\u51c6\u5907"},"1. \u73af\u5883\u51c6\u5907"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"docker-compose")," \u6587\u4ef6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3"\nservices:\n    timescaledb:\n      image: timescale/timescaledb-postgis:latest-pg10\n      ports:\n      - "5432:5432"\n      environment:\n      - "POSTGRES_PASSWORD=dalong"\n    influxdb:\n      image: influxdb\n      ports: \n      - "8086:8086"\n')),(0,l.kt)("h2",{id:"2-influxdb-\u6570\u636e\u5bfc\u5165"},"2. Influxdb \u6570\u636e\u5bfc\u5165"),(0,l.kt)("p",null,"\u4e0b\u8f7d\u6d4b\u8bd5\u6570\u636e\n\u6ce8\u610f\u9700\u8981\u5728\u5bb9\u5668\u4e2d\u64cd\u4f5c ",(0,l.kt)("inlineCode",{parentName:"p"},"docker-compose exec influxdb sh")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://timescaledata.blob.core.windows.net/datasets/outflux_taxi.txt\n")),(0,l.kt)("p",null,"\u5bfc\u5165"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"influx -import -path=./outflux_taxi.txt -database=outflux_tutorial\n")),(0,l.kt)("h2",{id:"3-schema-\u8fc1\u79fb"},"3. Schema \u8fc1\u79fb"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'./outflux schema-transfer outflux_tutorial taxi --input-server=http://localhost:8086 --output-conn="dbname=postgres user=postgres password=dalong"\n')),(0,l.kt)("p",null,"\u6548\u679c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"2019/04/12 11:03:55 Selected input database: outflux_tutorial\n2019/04/12 11:03:55 Overriding PG environment variables for connection with: dbname=postgres user=postgres password=dalong\n2019/04/12 11:03:55 pipe_taxi starting execution\n2019/04/12 11:03:55 Discovering influx schema for measurement: taxi\n2019/04/12 11:03:55 Discovered: DataSet { Name: taxi, Columns: [Column { Name: time, DataType: IDRFTimestamp} Column { Name: location_id, DataType: IDRFString} Column { Name: rating, DataType: IDRFString} Column { Name: vendor, DataType: IDRFString} Column { Name: fare, DataType: IDRFDouble}Column { Name: mta_tax, DataType: IDRFDouble} Column { Name: tip, DataType: IDRFDouble} Column { Name: tolls, DataType: IDRFDouble}], Time Column: time }\n2019/04/12 11:03:55 Selected Schema Strategy: CreateIfMissing\n2019/04/12 11:03:55 existing hypertable 'taxi' is partitioned properly\n2019/04/12 11:03:55 No data transfer will occur\n2019/04/12 11:03:55 Schema Transfer complete in: 0.079 seconds\n")),(0,l.kt)("h2",{id:"4-\u6570\u636e\u8fc1\u79fb"},"4. \u6570\u636e\u8fc1\u79fb"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'./outflux migrate outflux_tutorial taxi --input-server=http://localhost:8086 --output-conn="dbname=postgres user=postgres password=dalong" --schema-strategy=DropAndCreate\n')),(0,l.kt)("p",null,"\u6548\u679c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'2019/04/12 11:04:33 All pipelines scheduled\n2019/04/12 11:04:33 Overriding PG environment variables for connection with: dbname=postgres user=postgres password=dalong\n2019/04/12 11:04:33 pipe_taxi starting execution\n2019/04/12 11:04:33 Discovering influx schema for measurement: taxi\n2019/04/12 11:04:33 Discovered: DataSet { Name: taxi, Columns: [Column { Name: time, DataType: IDRFTimestamp} Column { Name: location_id, DataType: IDRFString} Column { Name: rating, DataType: IDRFString} Column { Name: vendor, DataType: IDRFString} Column { Name: fare, DataType: IDRFDouble}Column { Name: mta_tax, DataType: IDRFDouble} Column { Name: tip, DataType: IDRFDouble} Column { Name: tolls, DataType: IDRFDouble}], Time Column: time }\n2019/04/12 11:04:33 Selected Schema Strategy: DropAndCreate\n2019/04/12 11:04:33 Table taxi exists, dropping it\n2019/04/12 11:04:33 Executing: DROP TABLE taxi\n2019/04/12 11:04:33 Table taxi ready to be created\n2019/04/12 11:04:33 Creating table with:\n CREATE TABLE "taxi"("time" TIMESTAMP, "location_id" TEXT, "rating" TEXT, "vendor" TEXT, "fare" FLOAT, "mta_tax" FLOAT, "tip" FLOAT, "tolls" FLOAT\n)\n2019/04/12 11:04:33 Preparing TimescaleDB extension:\nCREATE EXTENSION IF NOT EXISTS timescaledb\n2019/04/12 11:04:33 Creating hypertable with: SELECT create_hypertable(\'"taxi"\', \'time\');\n2019/04/12 11:04:33 Starting extractor \'pipe_taxi_ext\' for measure: taxi\n2019/04/12 11:04:33 Starting data ingestor \'pipe_taxi_ing\'\n2019/04/12 11:04:33 pipe_taxi_ext: Extracting data from database \'outflux_tutorial\'\n2019/04/12 11:04:33 pipe_taxi_ext: SELECT "time", "location_id", "rating", "vendor", "fare", "mta_tax", "tip", "tolls"\nFROM "taxi"\n2019/04/12 11:04:33 pipe_taxi_ext:Pulling chunks with size 15000\n2019/04/12 11:04:33 Will batch insert 8000 rows at once. With commit strategy: CommitOnEachBatch\n2019/04/12 11:04:33 pipe_taxi_ext: Extracted 185 rows from Influx\n2019/04/12 11:04:33 pipe_taxi_ing: Complete. Inserted 185 rows.\n2019/04/12 11:04:33 All pipelines finished\n2019/04/12 11:04:33 Migration execution time: 0.094 seconds\n')),(0,l.kt)("h2",{id:"5-\u53c2\u8003\u8d44\u6599"},"5. \u53c2\u8003\u8d44\u6599"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://blog.51cto.com/rongfengliang/3124713"},"https://blog.51cto.com/rongfengliang/3124713")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.timescale.com/v1.2/tutorials/outflux"},"https://docs.timescale.com/v1.2/tutorials/outflux")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.influxdata.com/influxdb/v1.7/introduction/getting-started/"},"https://docs.influxdata.com/influxdb/v1.7/introduction/getting-started/")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://blog.timescale.com/migrate-outflux-a-smart-way-out-of-influxdb/"},"https://blog.timescale.com/migrate-outflux-a-smart-way-out-of-influxdb/"))))}d.isMDXComponent=!0}}]);