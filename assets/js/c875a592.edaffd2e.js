"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[40581],{1915:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var t=r(74848),a=r(28453);const l={},o=void 0,c={id:"zh-cn/spring-boot/Customlize-Request-Trace",title:"Customlize-Request-Trace",description:"- \u624b\u52a8\u5b9e\u73b0 Spring Boot \u65e5\u5fd7\u94fe\u8def\u8ffd\u8e2a\uff0c\u65e0\u9700\u5f15\u5165\u7ec4\u4ef6\uff0c\u65e5\u5fd7\u5b9a\u4f4d\u66f4\u65b9\u4fbf\uff01",source:"@site/docs/zh-cn/spring-boot/25-Customlize-Request-Trace.md",sourceDirName:"zh-cn/spring-boot",slug:"/zh-cn/spring-boot/Customlize-Request-Trace",permalink:"/docs/zh-cn/spring-boot/Customlize-Request-Trace",draft:!1,unlisted:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/spring-boot/25-Customlize-Request-Trace.md",tags:[],version:"current",sidebarPosition:25,frontMatter:{},sidebar:"troch",previous:{title:"Spring-Boot-Hotswap-Aop",permalink:"/docs/zh-cn/spring-boot/Spring-Boot-Hotswap-Aop"},next:{title:"Spring-Boot-Integrate-Alipay",permalink:"/docs/zh-cn/spring-boot/Spring-Boot-Integrate-Alipay"}},i={},s=[{value:"\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u5b9e\u73b0\u94fe\u8def\u8ffd\u8e2a",id:"\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u5b9e\u73b0\u94fe\u8def\u8ffd\u8e2a",level:2},{value:"1. pom.xml \u4f9d\u8d56",id:"1-pomxml-\u4f9d\u8d56",level:3},{value:"2. logback-spring.xml \u914d\u7f6e",id:"2-logback-springxml-\u914d\u7f6e",level:3},{value:"3. application.yaml",id:"3-applicationyaml",level:3},{value:"4. TraceLogInterceptor \u81ea\u5b9a\u4e49\u65e5\u5fd7\u62e6\u622a",id:"4-traceloginterceptor-\u81ea\u5b9a\u4e49\u65e5\u5fd7\u62e6\u622a",level:3},{value:"5. LogMvcConfigurer \u6dfb\u52a0\u62e6\u622a\u5668",id:"5-logmvcconfigurer-\u6dfb\u52a0\u62e6\u622a\u5668",level:3},{value:"6. ThreadPoolConfig \u5b9a\u4e49\u7ebf\u7a0b\u6c60\uff0c\u4ea4\u7ed9spring\u7ba1\u7406",id:"6-threadpoolconfig-\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u4ea4\u7ed9spring\u7ba1\u7406",level:3},{value:"7. TraceThreadPoolTaskExecutor \u5305\u88c5",id:"7-tracethreadpooltaskexecutor-\u5305\u88c5",level:3},{value:"8. TraceThreadMdcTool \u5305\u88c5",id:"8-tracethreadmdctool-\u5305\u88c5",level:3},{value:"\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a",id:"\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a",level:2},{value:"\u75db\u70b9",id:"\u75db\u70b9",level:3},{value:"\u89e3\u51b3",id:"\u89e3\u51b3",level:3},{value:"TraceId + MDC",id:"traceid--mdc",level:4},{value:"\u6574\u5408 Feign",id:"\u6574\u5408-feign",level:4},{value:"\u591a\u7ebf\u7a0b\u9002\u914d",id:"\u591a\u7ebf\u7a0b\u9002\u914d",level:4},{value:"\u6574\u5408 Skywalking",id:"\u6574\u5408-skywalking",level:4},{value:"MDC \u539f\u7406",id:"mdc-\u539f\u7406",level:3},{value:"Logback \u5360\u4f4d\u7b26",id:"logback-\u5360\u4f4d\u7b26",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/JerVwf0zlcalA28WTof63g",children:"\u624b\u52a8\u5b9e\u73b0 Spring Boot \u65e5\u5fd7\u94fe\u8def\u8ffd\u8e2a\uff0c\u65e0\u9700\u5f15\u5165\u7ec4\u4ef6\uff0c\u65e5\u5fd7\u5b9a\u4f4d\u66f4\u65b9\u4fbf\uff01"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/MY-ZreM-wG2OMCLJKxlPjA",children:"\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\uff1aTraceIdFilter + MDC + Skywalking"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7278498472860581925",children:"\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\uff1aTraceIdFilter + MDC + Skywalking"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u5b9e\u73b0\u94fe\u8def\u8ffd\u8e2a",children:"\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u5b9e\u73b0\u94fe\u8def\u8ffd\u8e2a"}),"\n",(0,t.jsx)(n.h3,{id:"1-pomxml-\u4f9d\u8d56",children:"1. pom.xml \u4f9d\u8d56"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-test</artifactId>\n        <scope>test</scope>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n    </dependency>\n    \x3c!--lombok\u914d\u7f6e--\x3e\n    <dependency>\n        <groupId>org.projectlombok</groupId>\n        <artifactId>lombok</artifactId>\n        <version>1.16.10</version>\n    </dependency>\n</dependencies>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-logback-springxml-\u914d\u7f6e",children:"2. logback-spring.xml \u914d\u7f6e"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n\x3c!-- \u65e5\u5fd7\u7ea7\u522b\u4ece\u4f4e\u5230\u9ad8\u5206\u4e3aTRACE < DEBUG < INFO < WARN < ERROR < FATAL\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3aWARN\uff0c\u5219\u4f4e\u4e8eWARN\u7684\u4fe1\u606f\u90fd\u4e0d\u4f1a\u8f93\u51fa --\x3e\n\x3c!-- scan:\u5f53\u6b64\u5c5e\u6027\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u914d\u7f6e\u6587\u6863\u5982\u679c\u53d1\u751f\u6539\u53d8\uff0c\u5c06\u4f1a\u88ab\u91cd\u65b0\u52a0\u8f7d\uff0c\u9ed8\u8ba4\u503c\u4e3atrue --\x3e\n\x3c!-- scanPeriod:\u8bbe\u7f6e\u76d1\u6d4b\u914d\u7f6e\u6587\u6863\u662f\u5426\u6709\u4fee\u6539\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u65f6\u95f4\u5355\u4f4d\uff0c\u9ed8\u8ba4\u5355\u4f4d\u662f\u6beb\u79d2\u3002\n                 \u5f53scan\u4e3atrue\u65f6\uff0c\u6b64\u5c5e\u6027\u751f\u6548\u3002\u9ed8\u8ba4\u7684\u65f6\u95f4\u95f4\u9694\u4e3a1\u5206\u949f\u3002 --\x3e\n\x3c!-- debug:\u5f53\u6b64\u5c5e\u6027\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u5c06\u6253\u5370\u51falogback\u5185\u90e8\u65e5\u5fd7\u4fe1\u606f\uff0c\u5b9e\u65f6\u67e5\u770blogback\u8fd0\u884c\u72b6\u6001\u3002\u9ed8\u8ba4\u503c\u4e3afalse\u3002 --\x3e\n<configuration  scan="true" scanPeriod="10 seconds">\n    <contextName>logback</contextName>\n\n    \x3c!-- name\u7684\u503c\u662f\u53d8\u91cf\u7684\u540d\u79f0\uff0cvalue\u7684\u503c\u65f6\u53d8\u91cf\u5b9a\u4e49\u7684\u503c\u3002\u901a\u8fc7\u5b9a\u4e49\u7684\u503c\u4f1a\u88ab\u63d2\u5165\u5230logger\u4e0a\u4e0b\u6587\u4e2d\u3002\u5b9a\u4e49\u540e\uff0c\u53ef\u4ee5\u4f7f ${} \u6765\u4f7f\u7528\u53d8\u91cf\u3002 --\x3e\n    <property name="log.path" value="${project.basedir}/logs" />\n    <property name="app.name" value="${spring.application.name:- cloud-service-demo}" />\n\n    \x3c!--0. \u65e5\u5fd7\u683c\u5f0f\u548c\u989c\u8272\u6e32\u67d3 --\x3e\n    \x3c!-- \u5f69\u8272\u65e5\u5fd7\u4f9d\u8d56\u7684\u6e32\u67d3\u7c7b --\x3e\n    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />\n    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />\n    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />\n    \x3c!-- \u5f69\u8272\u65e5\u5fd7\u683c\u5f0f --\x3e\n    \x3c!--\n        \u9ed1      \u7ea2    \u7eff      \u9ec4       \u84dd     \u6d0b\u7ea2        \u9752     \u767d      \u7070\n        %black\u3001%red\u3001%green\u3001%yellow\u3001%blue\u3001%magenta\u3001%cyan\u3001%white\u3001%gray\u3001\n        \u52a0\u7c97\u7ea2     \u52a0\u7c97\u7eff       \u52a0\u7c97\u9ec4        \u52a0\u7c97\u84dd     \u52a0\u7c97\u6d0b\u7ea2       \u52a0\u7c97\u9752      \u52a0\u7c97\u767d       \u9ad8\u4eae\n        %boldRed\u3001%boldGreen\u3001%boldYellow\u3001%boldBlue\u3001%boldMagenta\u3001%boldCyan\u3001%boldWhite\u3001%highlight\n    --\x3e\n    \x3c!--\u683c\u5f0f\u5316\u8f93\u51fa\uff1a\n        %d %date       \u8868\u793a\u65e5\u671f\uff0c\n        %t %thread     \u8868\u793a\u7ebf\u7a0b\u540d\uff0c\n        %p %-5level    \u7ea7\u522b\u4ece\u5de6\u663e\u793a5\u4e2a\u5b57\u7b26\u5bbd\u5ea6\n        %m %msg        \u65e5\u5fd7\u6d88\u606f\uff0c\n        %n          \u662f\u6362\u884c\u7b26\n    --\x3e\n    <property name="FILE_LOG_PATTERN" value="[%X{traceId}] %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{50}#%method:%line : %msg%n" />\n    <property name="CONSOLE_LOG_PATTERN" value="[%X{traceId}] %d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %green([${app.name}]) %red(${PID:- }) --- %magenta([%thread]) %cyan(%-50.50logger{49}#%method:%line) : %msg%n" />\n    <property name="CONSOLE_LOG_PATTERN" value="[%X{traceId}] ${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint}\n                    %clr(${LOG_LEVEL_PATTERN:-%5level}){highlight} %clr(${app.name}){green} %clr(${PID:- }){red}\n                    %clr(---){faint} %clr([%15.15thread]){magenta} %clr(%-50.50logger{49}){cyan}%clr(#%method){cyan}%clr(:%line){cyan}\n                    %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>\n\n    \x3c!--1. \u8f93\u51fa\u5230\u63a7\u5236\u53f0--\x3e\n    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">\n        <encoder>\n            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>\n            \x3c!-- \u8bbe\u7f6e\u5b57\u7b26\u96c6 --\x3e\n            <charset>UTF-8</charset>\n        </encoder>\n        \x3c!--\u6b64\u65e5\u5fd7appender\u662f\u4e3a\u5f00\u53d1\u4f7f\u7528\uff0c\u53ea\u914d\u7f6e\u6700\u5e95\u7ea7\u522b\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u7684\u65e5\u5fd7\u7ea7\u522b\u662f\u5927\u4e8e\u6216\u7b49\u4e8e\u6b64\u7ea7\u522b\u7684\u65e5\u5fd7\u4fe1\u606f--\x3e\n        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">\n            <level>DEBUG</level>\n        </filter>\n    </appender>\n\n    \x3c!--2. \u8f93\u51fa\u5230\u6587\u6863--\x3e\n    \x3c!-- 2.1 level\u4e3a DEBUG \u65e5\u5fd7\uff0c\u65f6\u95f4\u6eda\u52a8\u8f93\u51fa  --\x3e\n    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        \x3c!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u6863\u7684\u8def\u5f84\u53ca\u6587\u6863\u540d --\x3e\n        <file>${log.path}/debug.log</file>\n        \x3c!--\u65e5\u5fd7\u6587\u6863\u8f93\u51fa\u683c\u5f0f--\x3e\n        <encoder>\n            \x3c!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>--\x3e\n            <pattern>${FILE_LOG_PATTERN}</pattern>\n            <charset>UTF-8</charset> \x3c!-- \u8bbe\u7f6e\u5b57\u7b26\u96c6 --\x3e\n        </encoder>\n        \x3c!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --\x3e\n        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n            \x3c!-- \u65e5\u5fd7\u5f52\u6863 --\x3e\n            <fileNamePattern>${log.path}/web-debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>\n            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">\n                <maxFileSize>100MB</maxFileSize>\n            </timeBasedFileNamingAndTriggeringPolicy>\n            \x3c!--\u65e5\u5fd7\u6587\u6863\u4fdd\u7559\u5929\u6570--\x3e\n            <maxHistory>15</maxHistory>\n        </rollingPolicy>\n        \x3c!-- \u6b64\u65e5\u5fd7\u6587\u6863\u53ea\u8bb0\u5f55debug\u7ea7\u522b\u7684 --\x3e\n        <filter class="ch.qos.logback.classic.filter.LevelFilter">\n            <level>DEBUG</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n    </appender>\n\n    \x3c!-- 2.2 level\u4e3a INFO \u65e5\u5fd7\uff0c\u65f6\u95f4\u6eda\u52a8\u8f93\u51fa  --\x3e\n    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        \x3c!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u6863\u7684\u8def\u5f84\u53ca\u6587\u6863\u540d --\x3e\n        <file>${log.path}/info.log</file>\n        \x3c!--\u65e5\u5fd7\u6587\u6863\u8f93\u51fa\u683c\u5f0f--\x3e\n        <encoder>\n            <pattern>${FILE_LOG_PATTERN}</pattern>\n            <charset>UTF-8</charset>\n        </encoder>\n        \x3c!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --\x3e\n        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n            \x3c!-- \u6bcf\u5929\u65e5\u5fd7\u5f52\u6863\u8def\u5f84\u4ee5\u53ca\u683c\u5f0f --\x3e\n            <fileNamePattern>${log.path}/web-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>\n            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">\n                <maxFileSize>100MB</maxFileSize>\n            </timeBasedFileNamingAndTriggeringPolicy>\n            \x3c!--\u65e5\u5fd7\u6587\u6863\u4fdd\u7559\u5929\u6570--\x3e\n            <maxHistory>15</maxHistory>\n        </rollingPolicy>\n        \x3c!-- \u6b64\u65e5\u5fd7\u6587\u6863\u53ea\u8bb0\u5f55info\u7ea7\u522b\u7684 --\x3e\n        <filter class="ch.qos.logback.classic.filter.LevelFilter">\n            <level>INFO</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n    </appender>\n\n    \x3c!-- 2.3 level\u4e3a WARN \u65e5\u5fd7\uff0c\u65f6\u95f4\u6eda\u52a8\u8f93\u51fa  --\x3e\n    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        \x3c!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u6863\u7684\u8def\u5f84\u53ca\u6587\u6863\u540d --\x3e\n        <file>${log.path}/warn.log</file>\n        \x3c!--\u65e5\u5fd7\u6587\u6863\u8f93\u51fa\u683c\u5f0f--\x3e\n        <encoder>\n            <pattern>${FILE_LOG_PATTERN}</pattern>\n            <charset>UTF-8</charset> \x3c!-- \u6b64\u5904\u8bbe\u7f6e\u5b57\u7b26\u96c6 --\x3e\n        </encoder>\n        \x3c!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --\x3e\n        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n            <fileNamePattern>${log.path}/web-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>\n            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">\n                <maxFileSize>100MB</maxFileSize>\n            </timeBasedFileNamingAndTriggeringPolicy>\n            \x3c!--\u65e5\u5fd7\u6587\u6863\u4fdd\u7559\u5929\u6570--\x3e\n            <maxHistory>15</maxHistory>\n        </rollingPolicy>\n        \x3c!-- \u6b64\u65e5\u5fd7\u6587\u6863\u53ea\u8bb0\u5f55warn\u7ea7\u522b\u7684 --\x3e\n        <filter class="ch.qos.logback.classic.filter.LevelFilter">\n            <level>WARN</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n    </appender>\n\n    \x3c!-- 2.4 level\u4e3a ERROR \u65e5\u5fd7\uff0c\u65f6\u95f4\u6eda\u52a8\u8f93\u51fa  --\x3e\n    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        \x3c!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u6863\u7684\u8def\u5f84\u53ca\u6587\u6863\u540d --\x3e\n        <file>${log.path}/error.log</file>\n        \x3c!--\u65e5\u5fd7\u6587\u6863\u8f93\u51fa\u683c\u5f0f--\x3e\n        <encoder>\n            <pattern>${FILE_LOG_PATTERN}</pattern>\n            <charset>UTF-8</charset> \x3c!-- \u6b64\u5904\u8bbe\u7f6e\u5b57\u7b26\u96c6 --\x3e\n        </encoder>\n        \x3c!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --\x3e\n        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n            <fileNamePattern>${log.path}/web-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>\n            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">\n                <maxFileSize>100MB</maxFileSize>\n            </timeBasedFileNamingAndTriggeringPolicy>\n            \x3c!--\u65e5\u5fd7\u6587\u6863\u4fdd\u7559\u5929\u6570--\x3e\n            <maxHistory>15</maxHistory>\n        </rollingPolicy>\n        \x3c!-- \u6b64\u65e5\u5fd7\u6587\u6863\u53ea\u8bb0\u5f55ERROR\u7ea7\u522b\u7684 --\x3e\n        <filter class="ch.qos.logback.classic.filter.LevelFilter">\n            <level>ERROR</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n    </appender>\n\n    \x3c!--\n        <logger>\u7528\u6765\u8bbe\u7f6e\u67d0\u4e00\u4e2a\u5305\u6216\u8005\u5177\u4f53\u7684\u67d0\u4e00\u4e2a\u7c7b\u7684\u65e5\u5fd7\u6253\u5370\u7ea7\u522b\u3001\n        \u4ee5\u53ca\u6307\u5b9a<appender>\u3002<logger>\u4ec5\u6709\u4e00\u4e2aname\u5c5e\u6027\uff0c\n        \u4e00\u4e2a\u53ef\u9009\u7684level\u548c\u4e00\u4e2a\u53ef\u9009\u7684addtivity\u5c5e\u6027\u3002\n        name:\u7528\u6765\u6307\u5b9a\u53d7\u6b64logger\u7ea6\u675f\u7684\u67d0\u4e00\u4e2a\u5305\u6216\u8005\u5177\u4f53\u7684\u67d0\u4e00\u4e2a\u7c7b\u3002\n        level:\u7528\u6765\u8bbe\u7f6e\u6253\u5370\u7ea7\u522b\uff0c\u5927\u5c0f\u5199\u65e0\u5173\uff1aTRACE, DEBUG, INFO, WARN, ERROR, ALL \u548c OFF\uff0c\n              \u8fd8\u6709\u4e00\u4e2a\u7279\u4fd7\u503cINHERITED\u6216\u8005\u540c\u4e49\u8bcdNULL\uff0c\u4ee3\u8868\u5f3a\u5236\u6267\u884c\u4e0a\u7ea7\u7684\u7ea7\u522b\u3002\n              \u5982\u679c\u672a\u8bbe\u7f6e\u6b64\u5c5e\u6027\uff0c\u90a3\u4e48\u5f53\u524dlogger\u5c06\u4f1a\u7ee7\u627f\u4e0a\u7ea7\u7684\u7ea7\u522b\u3002\n        addtivity:\u662f\u5426\u5411\u4e0a\u7ea7logger\u4f20\u9012\u6253\u5370\u4fe1\u606f\u3002\u9ed8\u8ba4\u662ftrue\u3002\n        <logger name="org.springframework.web" level="info"/>\n        <logger name="org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor" level="INFO"/>\n    --\x3e\n\n    \x3c!--\n        \u4f7f\u7528mybatis\u7684\u65f6\u5019\uff0csql\u8bed\u53e5\u662fdebug\u4e0b\u624d\u4f1a\u6253\u5370\uff0c\u800c\u8fd9\u91cc\u6211\u4eec\u53ea\u914d\u7f6e\u4e86info\uff0c\u6240\u4ee5\u60f3\u8981\u67e5\u770bsql\u8bed\u53e5\u7684\u8bdd\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n        \u7b2c\u4e00\u79cd\u628a<root level="info">\u6539\u6210<root level="DEBUG">\u8fd9\u6837\u5c31\u4f1a\u6253\u5370sql\uff0c\u4e0d\u8fc7\u8fd9\u6837\u65e5\u5fd7\u90a3\u8fb9\u4f1a\u51fa\u73b0\u5f88\u591a\u5176\u4ed6\u6d88\u606f\n        \u7b2c\u4e8c\u79cd\u5c31\u662f\u5355\u72ec\u7ed9dao\u4e0b\u76ee\u5f55\u914d\u7f6edebug\u6a21\u5f0f\uff0c\u4ee3\u7801\u5982\u4e0b\uff0c\u8fd9\u6837\u914d\u7f6esql\u8bed\u53e5\u4f1a\u6253\u5370\uff0c\u5176\u4ed6\u8fd8\u662f\u6b63\u5e38info\u7ea7\u522b\uff1a\n        \u3010logging.level.org.mybatis=debug logging.level.dao=debug\u3011\n     --\x3e\n\n    \x3c!--\n        root\u8282\u70b9\u662f\u5fc5\u9009\u8282\u70b9\uff0c\u7528\u6765\u6307\u5b9a\u6700\u57fa\u7840\u7684\u65e5\u5fd7\u8f93\u51fa\u7ea7\u522b\uff0c\u53ea\u6709\u4e00\u4e2alevel\u5c5e\u6027\n        level:\u7528\u6765\u8bbe\u7f6e\u6253\u5370\u7ea7\u522b\uff0c\u5927\u5c0f\u5199\u65e0\u5173\uff1aTRACE, DEBUG, INFO, WARN, ERROR, ALL \u548c OFF\uff0c\n        \u4e0d\u80fd\u8bbe\u7f6e\u4e3aINHERITED\u6216\u8005\u540c\u4e49\u8bcdNULL\u3002\u9ed8\u8ba4\u662fDEBUG\n        \u53ef\u4ee5\u5305\u542b\u96f6\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\uff0c\u6807\u8bc6\u8fd9\u4e2aappender\u5c06\u4f1a\u6dfb\u52a0\u5230\u8fd9\u4e2alogger\u3002\n    --\x3e\n\n    \x3c!-- 4. \u6700\u7ec8\u7684\u7b56\u7565 --\x3e\n    \x3c!-- 4.1 \u5f00\u53d1\u73af\u5883:\u6253\u5370\u63a7\u5236\u53f0--\x3e\n    <springProfile name="dev">\n        <logger name="com.light" level="info"/>\n        <root level="info">\n            <appender-ref ref="CONSOLE" />\n            <appender-ref ref="DEBUG_FILE" />\n            <appender-ref ref="INFO_FILE" />\n            <appender-ref ref="WARN_FILE" />\n            <appender-ref ref="ERROR_FILE" />\n        </root>\n    </springProfile>\n\n\n    \x3c!-- 4.2 \u751f\u4ea7\u73af\u5883:\u8f93\u51fa\u5230\u6587\u6863--\x3e\n    <springProfile name="prod">\n        <logger name="com.light" level="warn"/>\n        <root level="info">\n            <appender-ref ref="ERROR_FILE" />\n            <appender-ref ref="WARN_FILE" />\n        </root>\n    </springProfile>\n\n</configuration>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-applicationyaml",children:"3. application.yaml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"server:\n  port: 8080\n\nlogging:\n  config: classpath:logback-spring.xml\n\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-traceloginterceptor-\u81ea\u5b9a\u4e49\u65e5\u5fd7\u62e6\u622a",children:"4. TraceLogInterceptor \u81ea\u5b9a\u4e49\u65e5\u5fd7\u62e6\u622a"}),"\n",(0,t.jsx)(n.p,{children:"\u7528\u9014\uff1a\u6bcf\u4e00\u6b21\u94fe\u8def\uff0c\u7ebf\u7a0b\u7ef4\u5ea6\uff0c\u6dfb\u52a0\u6700\u7ec8\u7684\u94fe\u8defID TRACE_ID"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.common.web.log;\n\nimport jakarta.annotation.Nullable;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport org.apache.commons.lang3.StringUtils;\nimport org.slf4j.MDC;\nimport org.springframework.web.servlet.HandlerInterceptor;\n\nimport java.util.UUID;\n\npublic class TraceLogInterceptor implements HandlerInterceptor {\n\n    private static final String TRACE_ID = "traceId";\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n        String traceId = UUID.randomUUID().toString();\n        // \u53ef\u4ee5\u8003\u8651\u8ba9\u5ba2\u6237\u7aef\u4f20\u5165\u94fe\u8defID\uff0c\u4f46\u9700\u4fdd\u8bc1\u4e00\u5b9a\u7684\u590d\u6742\u5ea6\u552f\u4e00\u6027\uff1b\u5982\u679c\u6ca1\u4f7f\u7528\u9ed8\u8ba4UUID\u81ea\u52a8\u751f\u6210\n        if (StringUtils.isNotBlank(request.getHeader(TRACE_ID))) {\n            traceId = request.getHeader(TRACE_ID);\n        }\n        MDC.put(TRACE_ID, traceId);\n        return true;\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler,\n                                @Nullable Exception ex) {\n        MDC.remove(TRACE_ID);\n    }\n\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"MDC(Mapped Diagnostic Context)\u8bca\u65ad\u4e0a\u4e0b\u6587\u6620\u5c04\uff0c\u662f@Slf4j\u63d0\u4f9b\u7684\u4e00\u4e2a\u652f\u6301\u52a8\u6001\u6253\u5370\u65e5\u5fd7\u4fe1\u606f\u7684\u5de5\u5177\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"5-logmvcconfigurer-\u6dfb\u52a0\u62e6\u622a\u5668",children:"5. LogMvcConfigurer \u6dfb\u52a0\u62e6\u622a\u5668"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.common.web.config;\n\nimport com.light.cloud.common.web.log.TraceLogInterceptor;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class LogMvcConfigurer implements WebMvcConfigurer {\n\n    @Bean\n    public TraceLogInterceptor traceLogInterceptor() {\n        return new TraceLogInterceptor();\n    }\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(traceLogInterceptor())\n                // \u53ef\u4ee5\u5177\u4f53\u5236\u5b9a\u54ea\u4e9b\u9700\u8981\u62e6\u622a\uff0c\u54ea\u4e9b\u4e0d\u62e6\u622a\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u6ce8\u89e3\u66f4\u7075\u6d3b\u5b8c\u6210\n                .addPathPatterns("/**")\n                .excludePathPatterns("/*.html");\n    }\n\n}\n\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u5176\u5b9e\u8fd9\u4e2a\u62e6\u622a\u7684\u90e8\u5206\u53ef\u4ee5\u6539\u4e3a\u4f7f\u7528\u81ea\u5b9a\u4e49\u6ce8\u89e3 + AOP\u5b9e\u73b0\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"6-threadpoolconfig-\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u4ea4\u7ed9spring\u7ba1\u7406",children:"6. ThreadPoolConfig \u5b9a\u4e49\u7ebf\u7a0b\u6c60\uff0c\u4ea4\u7ed9spring\u7ba1\u7406"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.scheduling.annotation.EnableAsync;\nimport java.util.concurrent.Executor;\n \n@Configuration\n@EnableAsync\npublic class ThreadPoolConfig {\n    /**\n     * \u58f0\u660e\u4e00\u4e2a\u7ebf\u7a0b\u6c60\n     *\n     * @return \u6267\u884c\u5668\n     */\n    @Bean("MyExecutor")\n    public Executor asyncExecutor() {\n        TraceThreadPoolTaskExecutor executor = new TraceThreadPoolTaskExecutor();\n        //\u6838\u5fc3\u7ebf\u7a0b\u65705\uff1a\u7ebf\u7a0b\u6c60\u521b\u5efa\u65f6\u5019\u521d\u59cb\u5316\u7684\u7ebf\u7a0b\u6570\n        executor.setCorePoolSize(5);\n        //\u6700\u5927\u7ebf\u7a0b\u65705\uff1a\u7ebf\u7a0b\u6c60\u6700\u5927\u7684\u7ebf\u7a0b\u6570\uff0c\u53ea\u6709\u5728\u7f13\u51b2\u961f\u5217\u6ee1\u4e86\u4e4b\u540e\u624d\u4f1a\u7533\u8bf7\u8d85\u8fc7\u6838\u5fc3\u7ebf\u7a0b\u6570\u7684\u7ebf\u7a0b\n        executor.setMaxPoolSize(5);\n        //\u7f13\u51b2\u961f\u5217500\uff1a\u7528\u6765\u7f13\u51b2\u6267\u884c\u4efb\u52a1\u7684\u961f\u5217\n        executor.setQueueCapacity(500);\n        //\u5141\u8bb8\u7ebf\u7a0b\u7684\u7a7a\u95f2\u65f6\u95f460\u79d2\uff1a\u5f53\u8d85\u8fc7\u4e86\u6838\u5fc3\u7ebf\u7a0b\u51fa\u4e4b\u5916\u7684\u7ebf\u7a0b\u5728\u7a7a\u95f2\u65f6\u95f4\u5230\u8fbe\u4e4b\u540e\u4f1a\u88ab\u9500\u6bc1\n        executor.setKeepAliveSeconds(60);\n        //\u7ebf\u7a0b\u6c60\u540d\u7684\u524d\u7f00\uff1a\u8bbe\u7f6e\u597d\u4e86\u4e4b\u540e\u53ef\u4ee5\u65b9\u4fbf\u6211\u4eec\u5b9a\u4f4d\u5904\u7406\u4efb\u52a1\u6240\u5728\u7684\u7ebf\u7a0b\u6c60\n        executor.setThreadNamePrefix("asyncJCccc");\n        executor.initialize();\n        return executor;\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"7-tracethreadpooltaskexecutor-\u5305\u88c5",children:"7. TraceThreadPoolTaskExecutor \u5305\u88c5"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"package com.light.cloud.common.web.log;\n\nimport org.slf4j.MDC;\nimport org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\nimport org.springframework.util.concurrent.ListenableFuture;\n\nimport java.util.concurrent.Callable;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.concurrent.Future;\n\npublic class TracedThreadPoolTaskExecutor extends ThreadPoolTaskExecutor {\n\n    public TracedThreadPoolTaskExecutor() {\n        super();\n    }\n\n    @Override\n    public void execute(Runnable task) {\n        super.execute(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public <T> Future<T> submit(Callable<T> task) {\n        return super.submit(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public Future<?> submit(Runnable task) {\n        return super.submit(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public <T> CompletableFuture<T> submitCompletable(Callable<T> task) {\n        return super.submitCompletable(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public CompletableFuture<Void> submitCompletable(Runnable task) {\n        return super.submitCompletable(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public ListenableFuture<?> submitListenable(Runnable task) {\n        return super.submitListenable(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public <T> ListenableFuture<T> submitListenable(Callable<T> task) {\n        return super.submitListenable(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n}\n\n"})}),"\n",(0,t.jsx)(n.h3,{id:"8-tracethreadmdctool-\u5305\u88c5",children:"8. TraceThreadMdcTool \u5305\u88c5"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.common.web.log;\n\nimport org.slf4j.MDC;\n\nimport java.util.Map;\nimport java.util.UUID;\nimport java.util.concurrent.Callable;\n\npublic class TraceThreadMdcTool {\n    private static final String TRACE_ID = "traceId";\n\n    // \u83b7\u53d6\u552f\u4e00\u6027\u6807\u8bc6\n    public static String generateTraceId() {\n        return UUID.randomUUID().toString();\n    }\n\n    public static void setTraceIdIfAbsent() {\n        if (MDC.get(TRACE_ID) == null) {\n            MDC.put(TRACE_ID, generateTraceId());\n        }\n    }\n\n    /**\n     * \u7528\u4e8e\u7236\u7ebf\u7a0b\u5411\u7ebf\u7a0b\u6c60\u4e2d\u63d0\u4ea4\u4efb\u52a1\u65f6\uff0c\u5c06\u81ea\u8eabMDC\u4e2d\u7684\u6570\u636e\u590d\u5236\u7ed9\u5b50\u7ebf\u7a0b\n     *\n     * @param callable\n     * @param context\n     * @param <T>\n     * @return\n     */\n    public static <T> Callable<T> wrap(final Callable<T> callable, final Map<String, String> context) {\n        return () -> {\n            if (context == null) {\n                MDC.clear();\n            } else {\n                MDC.setContextMap(context);\n            }\n            setTraceIdIfAbsent();\n            try {\n                return callable.call();\n            } finally {\n                MDC.clear();\n            }\n        };\n    }\n\n    /**\n     * \u7528\u4e8e\u7236\u7ebf\u7a0b\u5411\u7ebf\u7a0b\u6c60\u4e2d\u63d0\u4ea4\u4efb\u52a1\u65f6\uff0c\u5c06\u81ea\u8eabMDC\u4e2d\u7684\u6570\u636e\u590d\u5236\u7ed9\u5b50\u7ebf\u7a0b\n     *\n     * @param runnable\n     * @param context\n     * @return\n     */\n    public static Runnable wrap(final Runnable runnable, final Map<String, String> context) {\n        return () -> {\n            if (context == null) {\n                MDC.clear();\n            } else {\n                MDC.setContextMap(context);\n            }\n            setTraceIdIfAbsent();\n            try {\n                runnable.run();\n            } finally {\n                MDC.clear();\n            }\n        };\n    }\n\n}\n\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a",children:"\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a"}),"\n",(0,t.jsx)(n.h3,{id:"\u75db\u70b9",children:"\u75db\u70b9"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\u67e5\u7ebf\u4e0a\u65e5\u5fd7\u65f6\uff0c\u540c\u4e00\u4e2a Pod \u5185\u591a\u7ebf\u7a0b\u65e5\u5fd7\u4ea4\u9519\uff0c\u5f88\u96be\u8ffd\u8e2a\u6bcf\u4e2a\u8bf7\u6c42\u5bf9\u5e94\u7684\u65e5\u5fd7\u4fe1\u606f\u3002"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\u65e5\u5fd7\u6536\u96c6\u5de5\u5177\u5c06\u591a\u4e2a Pod \u7684\u65e5\u5fd7\u6536\u96c6\u5230\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\u540e\uff0c\u60c5\u51b5\u5c31\u66f4\u52a0\u6df7\u4e71\u4e0d\u582a\u4e86\u3002"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"\u89e3\u51b3",children:"\u89e3\u51b3"}),"\n",(0,t.jsx)(n.h4,{id:"traceid--mdc",children:"TraceId + MDC"}),"\n",(0,t.jsxs)(n.p,{children:["MDC\uff1a ",(0,t.jsx)(n.a,{href:"https://logback.qos.ch/manual/mdc.html",children:"Mapped Diagnostic Context"})]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u524d\u7aef\u6bcf\u6b21\u8bf7\u6c42\u65f6\uff0c\u6dfb\u52a0",(0,t.jsx)(n.code,{children:" X-App-Trace-Id"})," \u8bf7\u6c42\u5934\uff0c",(0,t.jsx)(n.code,{children:"X-App-Trace-Id"})," \u503c\u7684\u751f\u6210\u65b9\u5f0f\u53ef\u4ee5\u9009\u62e9",(0,t.jsx)(n.code,{children:"\u3010\u65f6\u95f4\u6233 + UUID\u3011"}),"\uff0c\u4fdd\u8bc1 ",(0,t.jsx)(n.code,{children:"traceId"})," \u7684\u552f\u4e00\u6027\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u540e\u7aef\u5728 ",(0,t.jsx)(n.code,{children:"TraceIdFilter"})," \u4e2d\u53d6\u51fa ",(0,t.jsx)(n.code,{children:"X-App-Trace-Id"})," \u7684\u503c\uff1a",(0,t.jsx)(n.code,{children:"String traceId = httpServletRequest.getHeader(TRACE_ID_HEADER_KEY)"}),"\u3002\u5982\u679c\u8bf7\u6c42\u6ca1\u6709\u643a\u5e26 ",(0,t.jsx)(n.code,{children:"X-App-Trace-Id"})," \u8bf7\u6c42\u5934\uff0c\u540e\u7aef\u670d\u52a1\u53ef\u4ee5\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"UUID"})," \u6216\u8005 ",(0,t.jsx)(n.code,{children:"Snowflake"})," \u7b97\u6cd5\u751f\u6210\u4e00\u4e2a ",(0,t.jsx)(n.code,{children:"traceId"}),"\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u5c06 ",(0,t.jsx)(n.code,{children:"traceId"})," \u585e\u5230 ",(0,t.jsx)(n.code,{children:"slf4j"})," ",(0,t.jsx)(n.code,{children:"MDC"})," \u4e2d\uff1a",(0,t.jsx)(n.code,{children:"MDC.put(MDC_TRACE_ID_KEY, traceId)"}),"\uff0c\u5728 ",(0,t.jsx)(n.code,{children:"logback pattern"})," \u4e2d\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"%X{traceId}"})," \u5360\u4f4d\u7b26\u6253\u5370 ",(0,t.jsx)(n.code,{children:"traceId"}),"\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)\n        throws IOException, ServletException {\n    HttpServletRequest httpServletRequest = (HttpServletRequest) request;\n    String traceId = httpServletRequest.getHeader(TRACE_ID_HEADER_KEY);\n    if (StrUtil.isBlank(traceId)) {\n        traceId = UUID.randomUUID().toString();\n    }\n    MDC.put(MDC_TRACE_ID_KEY, traceId);\n    try {\n        chain.doFilter(request, response);\n    } finally {\n        MDC.remove(MDC_TRACE_ID_KEY);\n    }\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<configuration debug="false">\n    <property name="pattern" value="[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level [%thread] %logger %line [%X{traceId}] [%tid] - %msg%n"/>\n'})}),"\n",(0,t.jsx)(n.h4,{id:"\u6574\u5408-feign",children:"\u6574\u5408 Feign"}),"\n",(0,t.jsxs)(n.p,{children:["\u53d1\u8d77\u670d\u52a1\u95f4\u8c03\u7528\u65f6\uff0c\u9700\u8981\u5c06 ",(0,t.jsx)(n.code,{children:"MDC"})," \u4e2d\u7684 ",(0,t.jsx)(n.code,{children:"traceId"})," \u4f20\u9012\u5230\u88ab\u8c03\u7528\u670d\u52a1\u3002\u6211\u4eec\u9879\u76ee\u4e2d\u7edf\u4e00\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"Feign Client"}),"\uff0c\u5b9e\u73b0\u670d\u52a1\u95f4\u7684 HTTP \u8fdc\u7a0b\u8c03\u7528\uff0c\u5728 ",(0,t.jsx)(n.code,{children:"Feign RequestInterceptor"})," \u4e2d\uff0c\u53d6\u51fa ",(0,t.jsx)(n.code,{children:"MDC"})," \u4e2d\u7684 ",(0,t.jsx)(n.code,{children:"traceId"}),"\uff0c\u585e\u5230\u8bf7\u6c42\u5934\u4e2d\uff1a",(0,t.jsx)(n.code,{children:"requestTemplate.header(TRACE_ID_HEADER_KEY, MDC.get(MDC_TRACE_ID_KEY));"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Override\npublic void apply(RequestTemplate template) {\n    template.header(TRACE_ID_HEADER_KEY, MDC.get(MDC_TRACE_ID_KEY));\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"\u591a\u7ebf\u7a0b\u9002\u914d",children:"\u591a\u7ebf\u7a0b\u9002\u914d"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Please note that MDC as implemented by logback-classic assumes that values are placed into the MDC with moderate frequency. Also note that a child thread does not automatically inherit a copy of the mapped diagnostic context of its parent."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["\u5728\u5b50\u7ebf\u7a0b\u6267\u884c\u4efb\u52a1\u524d\uff0c\u5c06\u7236\u7ebf\u7a0b\u7684 ",(0,t.jsx)(n.code,{children:"MDC"})," \u5185\u5bb9\u8bbe\u7f6e\u5230\u5b50\u7ebf\u7a0b\u7684 ",(0,t.jsx)(n.code,{children:"MDC"})," \u4e2d\uff1b\u5728\u5b50\u7ebf\u7a0b\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u540e\uff0c\u6e05\u9664\u5b50\u7ebf\u7a0b ",(0,t.jsx)(n.code,{children:"MDC"})," \u4e2d\u7684\u5185\u5bb9\u3002"]}),"\n",(0,t.jsxs)(n.p,{children:["\u9002\u914d JDK ",(0,t.jsx)(n.code,{children:"ThreadPoolExecutor"}),"\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public class MdcAwareThreadPoolExecutor extends ThreadPoolExecutor {\n\n    @Override\n    public void execute(Runnable command) {\n        Map<String, String> parentThreadContextMap = MDC.getCopyOfContextMap();\n        super.execute(MdcTaskUtils.adaptMdcRunnable(command, parentThreadContextMap));\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u9002\u914d Spring ",(0,t.jsx)(n.code,{children:"TaskDecorator"}),"\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Component\npublic class MdcAwareTaskDecorator implements TaskDecorator {\n\n    @Override\n    public Runnable decorate(Runnable runnable) {\n        Map<String, String> parentThreadContextMap = MDC.getCopyOfContextMap();\n        return MdcTaskUtils.adaptMdcRunnable(runnable, parentThreadContextMap);\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MdcTaskUtils#adaptMdcRunnable()"}),"\uff1a\u91c7\u7528\u88c5\u9970\u8005\u6a21\u5f0f\uff0c\u88c5\u9970\u539f\u751f\u7684 ",(0,t.jsx)(n.code,{children:"Runnable runnable"})," \u5bf9\u8c61\uff0c\u5728\u539f\u751f ",(0,t.jsx)(n.code,{children:"Runnable"})," \u5bf9\u8c61\u6267\u884c\u524d\uff0c\u5c06\u7236\u7ebf\u7a0b\u7684 ",(0,t.jsx)(n.code,{children:"MDC"})," \u8bbe\u7f6e\u5230\u5b50\u7ebf\u7a0b\u4e2d\uff0c\u5728\u539f\u751f ",(0,t.jsx)(n.code,{children:"Runnable"})," \u5bf9\u8c61\u6267\u884c\u7ed3\u675f\u540e\uff0c\u6e05\u9664\u5b50\u7ebf\u7a0b ",(0,t.jsx)(n.code,{children:"MDC"})," \u4e2d\u7684\u5185\u5bb9\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Slf4j\npublic abstract class MdcTaskUtils {\n\n    public static Runnable adaptMdcRunnable(Runnable runnable, Map<String, String> parentThreadContextMap) {\n        return () -> {\n            log.debug("parentThreadContextMap: {}, currentThreadContextMap: {}", parentThreadContextMap,\n                    MDC.getCopyOfContextMap());\n            if (MapUtils.isEmpty(parentThreadContextMap) || !parentThreadContextMap.containsKey(MDC_TRACE_ID_KEY)) {\n                log.debug("can not find a parentThreadContextMap, maybe task is fired using async or schedule task.");\n                MDC.put(MDC_TRACE_ID_KEY, UUID.randomUUID().toString());\n            } else {\n                MDC.put(MDC_TRACE_ID_KEY, parentThreadContextMap.get(MDC_TRACE_ID_KEY));\n            }\n            try {\n                runnable.run();\n            } finally {\n                MDC.remove(MDC_TRACE_ID_KEY);\n            }\n        };\n    }\n\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"\u6574\u5408-skywalking",children:"\u6574\u5408 Skywalking"}),"\n",(0,t.jsxs)(n.p,{children:["Skywalking \u5b98\u65b9\u63d0\u4f9b\u4e86\u5bf9 ",(0,t.jsx)(n.code,{children:"logback 1.x"})," \u7248\u672c\u7684\u9002\u914d\uff1a",(0,t.jsx)(n.code,{children:"apm-toolkit-logback-1.x"}),"\uff0c\u53ef\u4ee5\u5728 ",(0,t.jsx)(n.code,{children:"logback"})," \u4e2d\u6253\u5370 ",(0,t.jsx)(n.code,{children:"skywalking traceId"}),"\uff0c\u53ef\u4ee5\u5c06 ",(0,t.jsx)(n.code,{children:"X-App-Trace-Id"})," \u548c ",(0,t.jsx)(n.code,{children:"skywalking traceId"})," \u7ed3\u5408\u8d77\u6765\uff0c\u65b9\u4fbf\u63a5\u53e3\u4e1a\u52a1\u548c\u6027\u80fd\u95ee\u9898\u7684\u6392\u67e5\u3002"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"layout"})," \u5177\u4f53\u5b9e\u73b0\u7c7b\u9009\u62e9 ",(0,t.jsx)(n.code,{children:"TraceIdPatternLogbackLayout"}),"\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u5728 ",(0,t.jsx)(n.code,{children:"logback pattern"})," \u4e2d\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"%tid"})," \u6253\u5370 ",(0,t.jsx)(n.code,{children:"skywalking traceId"}),"\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<configuration debug="false">\n    <property name="pattern" value="[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level [%thread] %logger %line [%X{traceId}] [%tid] - %msg%n"/>\n\n    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">\n        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">\n            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">\n                <pattern>${pattern}</pattern>\n            </layout>\n        </encoder>\n    </appender>\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"TraceIdPatternLogbackLayout"})," \u7c7b\u521d\u59cb\u5316\u65f6\uff0c\u6dfb\u52a0\u4e86\u4e24\u4e2a ",(0,t.jsx)(n.code,{children:"PatternConverter"}),"\uff1a"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"tid"}),"\uff1a\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"LogbackPatternConverter"}),"\uff0c\u5c06 ",(0,t.jsx)(n.code,{children:"%tid"})," \u5360\u4f4d\u7b26\u8f6c\u6362\u4e3a ",(0,t.jsx)(n.code,{children:"skywalking traceId"}),"\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"sw_ctx"}),"\uff1a\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"LogbackSkyWalkingContextPatternConverter"}),"\uff0c\u5c06 ",(0,t.jsx)(n.code,{children:"%sw_ctx"})," \u5360\u4f4d\u7b26\u8f6c\u6362\u4e3a ",(0,t.jsx)(n.code,{children:"skywalking context"}),"\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class TraceIdPatternLogbackLayout extends PatternLayout {\n    public TraceIdPatternLogbackLayout() {\n    }\n\n    static {\n        defaultConverterMap.put("tid", LogbackPatternConverter.class.getName());\n        defaultConverterMap.put("sw_ctx", LogbackSkyWalkingContextPatternConverter.class.getName());\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"LogbackPatternConverter#convert()"})," \u65b9\u6cd5\u5199\u6b7b\u4e86\u8fd4\u56de ",(0,t.jsx)(n.code,{children:'"TID: N/A"'}),"\uff0c\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\u5462\uff1f"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class LogbackPatternConverter extends ClassicConverter {\n    public LogbackPatternConverter() {\n    }\n\n    public String convert(ILoggingEvent iLoggingEvent) {\n        return "TID: N/A";\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\u542f\u52a8 Java \u5e94\u7528\u65f6\uff0c\u6307\u5b9a ",(0,t.jsx)(n.code,{children:"java agent"})," \u542f\u52a8\u53c2\u6570 ",(0,t.jsx)(n.code,{children:"-javaagent:-javaagent:/opt/tools/skywalking-agent.jar"}),"\u3002",(0,t.jsx)(n.code,{children:"skywalking agent"})," \u4f1a\u4ee3\u7406 ",(0,t.jsx)(n.code,{children:"LogbackPatternConverter"})," \u7c7b\uff0c\u91cd\u5199 ",(0,t.jsx)(n.code,{children:"convert()"})," \u65b9\u6cd5\u7684\u903b\u8f91\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package org.apache.skywalking.apm.toolkit.log.logback.v1.x;\n\nimport ch.qos.logback.classic.pattern.ClassicConverter;\nimport ch.qos.logback.classic.spi.ILoggingEvent;\nimport java.lang.reflect.Method;\nimport org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\nimport org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstMethodsInter;\nimport org.apache.skywalking.apm.toolkit.log.logback.v1.x.LogbackPatternConverter$auxiliary$pJ6Zrqzi;\n\npublic class LogbackPatternConverter\nextends ClassicConverter\nimplements EnhancedInstance {\n   private volatile Object _$EnhancedClassField_ws;\n   public static volatile /* synthetic */ InstMethodsInter delegate$mo3but1;\n   private static final /* synthetic */ Method cachedValue$oeLgRjrq$u5j8qu3;\n\n   public String convert(ILoggingEvent iLoggingEvent) {\n       return (String)delegate$mo3but1.intercept(this, new Object[]{iLoggingEvent}, new LogbackPatternConverter$auxiliary$pJ6Zrqzi(this, iLoggingEvent), cachedValue$oeLgRjrq$u5j8qu3);\n   }\n\n   private /* synthetic */ String convert$original$T8InTdln(ILoggingEvent iLoggingEvent) {\n/*34*/         return "TID: N/A";\n   }\n\n   @Override\n   public void setSkyWalkingDynamicField(Object object) {\n       this._$EnhancedClassField_ws = object;\n   }\n\n   @Override\n   public Object getSkyWalkingDynamicField() {\n       return this._$EnhancedClassField_ws;\n   }\n\n   static {\n       ClassLoader.getSystemClassLoader().loadClass("org.apache.skywalking.apm.dependencies.net.bytebuddy.dynamic.Nexus").getMethod("initialize", Class.class, Integer.TYPE).invoke(null, LogbackPatternConverter.class, -1942176692);\n       cachedValue$oeLgRjrq$u5j8qu3 = LogbackPatternConverter.class.getMethod("convert", ILoggingEvent.class);\n   }\n\n   final /* synthetic */ String convert$original$T8InTdln$accessor$oeLgRjrq(ILoggingEvent iLoggingEvent) {\n       return this.convert$original$T8InTdln(iLoggingEvent);\n   }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"mdc-\u539f\u7406",children:"MDC \u539f\u7406"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MDC"})," \u5728 ",(0,t.jsx)(n.code,{children:"slf4j-api jar"})," \u5305\u4e2d\uff0c",(0,t.jsx)(n.code,{children:"MDC"})," \u662f ",(0,t.jsx)(n.code,{children:"slf4j"})," \u7684\u89c4\u8303\uff0c\u5bf9 ",(0,t.jsx)(n.code,{children:"MDC"})," \u7684\u6240\u6709\u64cd\u4f5c\u90fd\u4f1a\u843d\u5230 ",(0,t.jsx)(n.code,{children:"MDCAdapter"})," \u63a5\u53e3\u7684\u65b9\u6cd5\u4e0a\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class MDC {\n\n    static final String NULL_MDCA_URL = "http://www.slf4j.org/codes.html#null_MDCA";\n    static final String NO_STATIC_MDC_BINDER_URL = "http://www.slf4j.org/codes.html#no_static_mdc_binder";\n    static MDCAdapter mdcAdapter;\n    \n    public static void put(String key, String val) throws IllegalArgumentException {\n        if (key == null) {\n            throw new IllegalArgumentException("key parameter cannot be null");\n        }\n        if (mdcAdapter == null) {\n            throw new IllegalStateException("MDCAdapter cannot be null. See also " + NULL_MDCA_URL);\n        }\n        mdcAdapter.put(key, val);\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MDCAdapter"})," \u662f ",(0,t.jsx)(n.code,{children:"slf4j"})," \u63d0\u4f9b\u7684 ",(0,t.jsx)(n.code,{children:"MDC"})," \u9002\u914d\u5668\u63a5\u53e3\uff0c\u4e5f\u5c31\u662f ",(0,t.jsx)(n.code,{children:"MDC"})," \u7684\u89c4\u8303\u3002\u4efb\u4f55\u65e5\u5fd7\u6846\u67b6\u60f3\u8981\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"MDC"})," \u529f\u80fd\uff0c\u9700\u8981\u9075\u5b88 ",(0,t.jsx)(n.code,{children:"MDCAdapter"})," \u63a5\u53e3\u63a5\u53e3\u89c4\u8303\uff0c\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// This interface abstracts the service offered by various MDC implementations.\npublic interface MDCAdapter {\n\n    public void put(String key, String val);\n\n    public String get(String key);\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Logback"})," \u65e5\u5fd7\u6846\u67b6\u63d0\u4f9b\u4e86\u5bf9 ",(0,t.jsx)(n.code,{children:"MDCAdapter"})," \u7684\u9002\u914d\uff1a",(0,t.jsx)(n.code,{children:"LogbackMDCAdapter"}),"\uff0c\u5e95\u5c42\u91c7\u7528 ",(0,t.jsx)(n.code,{children:"ThreadLocal"})," \u5b9e\u73b0\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public class LogbackMDCAdapter implements MDCAdapter {\n\n    // The internal map is copied so as\n\n    // We wish to avoid unnecessarily copying of the map. To ensure\n    // efficient/timely copying, we have a variable keeping track of the last\n    // operation. A copy is necessary on 'put' or 'remove' but only if the last\n    // operation was a 'get'. Get operations never necessitate a copy nor\n    // successive 'put/remove' operations, only a get followed by a 'put/remove'\n    // requires copying the map.\n    // See http://jira.qos.ch/browse/LOGBACK-620 for the original discussion.\n\n    // We no longer use CopyOnInheritThreadLocal in order to solve LBCLASSIC-183\n    // Initially the contents of the thread local in parent and child threads\n    // reference the same map. However, as soon as a thread invokes the put()\n    // method, the maps diverge as they should.\n    final ThreadLocal<Map<String, String>> copyOnThreadLocal = new ThreadLocal<Map<String, String>>();\n\n    private static final int WRITE_OPERATION = 1;\n    private static final int MAP_COPY_OPERATION = 2;\n\n    // keeps track of the last operation performed\n    final ThreadLocal<Integer> lastOperation = new ThreadLocal<Integer>();\n\n\n    public void put(String key, String val) throws IllegalArgumentException {\n        if (key == null) {\n            throw new IllegalArgumentException(\"key cannot be null\");\n        }\n\n        Map<String, String> oldMap = copyOnThreadLocal.get();\n        Integer lastOp = getAndSetLastOperation(WRITE_OPERATION);\n\n        if (wasLastOpReadOrNull(lastOp) || oldMap == null) {\n            Map<String, String> newMap = duplicateAndInsertNewMap(oldMap);\n            newMap.put(key, val);\n        } else {\n            oldMap.put(key, val);\n        }\n    }\n    \n    public String get(String key) {\n        final Map<String, String> map = copyOnThreadLocal.get();\n        if ((map != null) && (key != null)) {\n            return map.get(key);\n        } else {\n            return null;\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"logback-\u5360\u4f4d\u7b26",children:"Logback \u5360\u4f4d\u7b26"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"PatternLayout"})," \u7c7b\u521d\u59cb\u5316\u65f6\uff0c\u8bbe\u7f6e\u4e86 ",(0,t.jsx)(n.code,{children:"logback"})," \u5e38\u7528\u5360\u4f4d\u7b26\u5bf9\u5e94\u7684 ",(0,t.jsx)(n.code,{children:"Converter"}),"\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class PatternLayout extends PatternLayoutBase<ILoggingEvent> {\n\n    public static final Map<String, String> DEFAULT_CONVERTER_MAP = new HashMap<String, String>();\n    public static final Map<String, String> CONVERTER_CLASS_TO_KEY_MAP = new HashMap<String, String>();\n    \n    /**\n     * @deprecated replaced by DEFAULT_CONVERTER_MAP\n     */\n    public static final Map<String, String> defaultConverterMap = DEFAULT_CONVERTER_MAP;\n    \n    public static final String HEADER_PREFIX = "#logback.classic pattern: ";\n\n    static {\n        DEFAULT_CONVERTER_MAP.putAll(Parser.DEFAULT_COMPOSITE_CONVERTER_MAP);\n\n        DEFAULT_CONVERTER_MAP.put("d", DateConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("date", DateConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(DateConverter.class.getName(), "date");\n        \n        DEFAULT_CONVERTER_MAP.put("r", RelativeTimeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("relative", RelativeTimeConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(RelativeTimeConverter.class.getName(), "relative");\n        \n        DEFAULT_CONVERTER_MAP.put("level", LevelConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("le", LevelConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("p", LevelConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(LevelConverter.class.getName(), "level");\n        \n        \n        DEFAULT_CONVERTER_MAP.put("t", ThreadConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("thread", ThreadConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(ThreadConverter.class.getName(), "thread");\n        \n        DEFAULT_CONVERTER_MAP.put("lo", LoggerConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("logger", LoggerConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("c", LoggerConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(LoggerConverter.class.getName(), "logger");\n        \n        DEFAULT_CONVERTER_MAP.put("m", MessageConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("msg", MessageConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("message", MessageConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(MessageConverter.class.getName(), "message");\n        \n        DEFAULT_CONVERTER_MAP.put("C", ClassOfCallerConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("class", ClassOfCallerConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(ClassOfCallerConverter.class.getName(), "class");\n        \n        DEFAULT_CONVERTER_MAP.put("M", MethodOfCallerConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("method", MethodOfCallerConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(MethodOfCallerConverter.class.getName(), "method");\n        \n        DEFAULT_CONVERTER_MAP.put("L", LineOfCallerConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("line", LineOfCallerConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(LineOfCallerConverter.class.getName(), "line");\n        \n        DEFAULT_CONVERTER_MAP.put("F", FileOfCallerConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("file", FileOfCallerConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(FileOfCallerConverter.class.getName(), "file");\n        \n        DEFAULT_CONVERTER_MAP.put("X", MDCConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("mdc", MDCConverter.class.getName());\n\n        DEFAULT_CONVERTER_MAP.put("ex", ThrowableProxyConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("exception", ThrowableProxyConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("rEx", RootCauseFirstThrowableProxyConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("rootException", RootCauseFirstThrowableProxyConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("throwable", ThrowableProxyConverter.class.getName());\n\n        DEFAULT_CONVERTER_MAP.put("xEx", ExtendedThrowableProxyConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("xException", ExtendedThrowableProxyConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("xThrowable", ExtendedThrowableProxyConverter.class.getName());\n\n        DEFAULT_CONVERTER_MAP.put("nopex", NopThrowableInformationConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("nopexception", NopThrowableInformationConverter.class.getName());\n\n        DEFAULT_CONVERTER_MAP.put("cn", ContextNameConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("contextName", ContextNameConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(ContextNameConverter.class.getName(), "contextName");\n        \n        DEFAULT_CONVERTER_MAP.put("caller", CallerDataConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(CallerDataConverter.class.getName(), "caller");\n        \n        DEFAULT_CONVERTER_MAP.put("marker", MarkerConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(MarkerConverter.class.getName(), "marker");\n        \n        DEFAULT_CONVERTER_MAP.put("property", PropertyConverter.class.getName());\n\n        DEFAULT_CONVERTER_MAP.put("n", LineSeparatorConverter.class.getName());\n\n        DEFAULT_CONVERTER_MAP.put("black", BlackCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("red", RedCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("green", GreenCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("yellow", YellowCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("blue", BlueCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("magenta", MagentaCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("cyan", CyanCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("white", WhiteCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("gray", GrayCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("boldRed", BoldRedCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("boldGreen", BoldGreenCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("boldYellow", BoldYellowCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("boldBlue", BoldBlueCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("boldMagenta", BoldMagentaCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("boldCyan", BoldCyanCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("boldWhite", BoldWhiteCompositeConverter.class.getName());\n        DEFAULT_CONVERTER_MAP.put("highlight", HighlightingCompositeConverter.class.getName());\n\n        DEFAULT_CONVERTER_MAP.put("lsn", LocalSequenceNumberConverter.class.getName());\n        CONVERTER_CLASS_TO_KEY_MAP.put(LocalSequenceNumberConverter.class.getName(), "lsn");\n        \n        DEFAULT_CONVERTER_MAP.put("prefix", PrefixCompositeConverter.class.getName());\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ThreadConverter"}),"\uff1a\u5c06 ",(0,t.jsx)(n.code,{children:"%thread"})," \u5360\u4f4d\u7b26\u8f6c\u6362\u4e3a ",(0,t.jsx)(n.code,{children:"logger"})," \u7ebf\u7a0b\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public class ThreadConverter extends ClassicConverter {\n\n    public String convert(ILoggingEvent event) {\n        return event.getThreadName();\n    }\n)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u5728 ",(0,t.jsx)(n.code,{children:"PatternLayout"})," \u4e2d\uff0c\u9ed8\u8ba4\u6dfb\u52a0\u4e86\u5bf9 ",(0,t.jsx)(n.code,{children:"MDC"})," \u7684\u652f\u6301\uff0c\u53ef\u4ee5\u5c06 ",(0,t.jsx)(n.code,{children:"%X{key}"})," \u6216\u8005 ",(0,t.jsx)(n.code,{children:"%mdc{key}"})," \u5360\u4f4d\u7b26\u8f6c\u6362\u4e3a ",(0,t.jsx)(n.code,{children:"MDC.get(key)"}),"\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'DEFAULT_CONVERTER_MAP.put("X", MDCConverter.class.getName());\nDEFAULT_CONVERTER_MAP.put("mdc", MDCConverter.class.getName());\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MDCConverter"})," \u4e3a\u4f55\u53ef\u4ee5\u5c06 ",(0,t.jsx)(n.code,{children:"%X{traceId}"})," \u6216\u8005 ",(0,t.jsx)(n.code,{children:"%mdc{traceId}"})," \u5360\u4f4d\u7b26\u8f6c\u6362\u4e3a ",(0,t.jsx)(n.code,{children:'MDC.get("traceId")'})," \uff1f"]}),"\n",(0,t.jsxs)(n.p,{children:["\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c",(0,t.jsx)(n.code,{children:"ch.qos.logback.core.pattern.parser.Compiler#compile()"})," \u4f1a\u89e3\u6790\u7528\u6237\u914d\u7f6e\u7684 ",(0,t.jsx)(n.code,{children:"pattern"})," \u8868\u8fbe\u5f0f\uff0c\u5f97\u5230 ",(0,t.jsx)(n.code,{children:"pattern"})," \u4e2d\u9700\u8981\u52a8\u6001\u89e3\u6790\u7684\u5360\u4f4d\u7b26\uff0c\u6bd4\u5982 ",(0,t.jsx)(n.code,{children:"%d{yyyy-MM-dd HH:mm:ss.SSS}"}),"\uff0c",(0,t.jsx)(n.code,{children:"%X{traceId}"}),"\u3002\u5c06\u8fd9\u4e9b\u52a8\u6001\u5360\u4f4d\u7b26\u4f20\u9012\u7ed9 ",(0,t.jsx)(n.code,{children:"DynamicConverter#optionList"})," \u5b57\u6bb5\uff08",(0,t.jsx)(n.code,{children:"MDCConverter"})," \u672c\u8d28\u5c31\u662f ",(0,t.jsx)(n.code,{children:"DynamicConverter"}),"\uff09\uff0c",(0,t.jsx)(n.code,{children:"optionList"})," \u5b57\u6bb5\u5305\u542b\u7a0b\u5e8f\u8981\u5904\u7406\u7684\u5360\u4f4d\u7b26\u540d\u79f0\uff0c\u6bd4\u5982 ",(0,t.jsx)(n.code,{children:"traceId"}),"\u3002"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"img",src:r(25631).A+"",width:"1369",height:"937"})}),"\n",(0,t.jsxs)(n.p,{children:["\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0clogback \u8fdb\u884c ",(0,t.jsx)(n.code,{children:"Convert"})," \u521d\u59cb\u5316\uff0c\u4f1a\u8c03\u7528 ",(0,t.jsx)(n.code,{children:"MDCConverter#start()"})," \u65b9\u6cd5\uff0c\u5c06\u6210\u5458\u53d8\u91cf ",(0,t.jsx)(n.code,{children:"private String key"})," \u7684\u503c\u8bbe\u7f6e\u4e3a ",(0,t.jsx)(n.code,{children:"traceId"}),"\uff08",(0,t.jsx)(n.code,{children:"MDCConverter#getFirstOption()"})," \u8fd4\u56de\u7528\u6237\u914d\u7f6e\u7684 ",(0,t.jsx)(n.code,{children:"traceId"}),"\uff09\u3002"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"img",src:r(61960).A+"",width:"989",height:"386"})}),"\n",(0,t.jsxs)(n.p,{children:["\u5728 ",(0,t.jsx)(n.code,{children:"MDCConverter#convert()"})," \u65b9\u6cd5\u4e2d\uff0c\u5c06 ",(0,t.jsx)(n.code,{children:"traceId"})," \u5360\u4f4d\u7b26\u8f6c\u6362\u4e3a ",(0,t.jsx)(n.code,{children:"MDC.get(key)"}),"\uff1a",(0,t.jsx)(n.code,{children:"String value = mdcPropertyMap.get(key)"}),"\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class MDCConverter extends ClassicConverter {\n\n    private String key;\n    private String defaultValue = "";\n\n    @Override\n    public void start() {\n        String[] keyInfo = extractDefaultReplacement(getFirstOption());\n        key = keyInfo[0];\n        if (keyInfo[1] != null) {\n            defaultValue = keyInfo[1];\n        }\n        super.start();\n    }\n\n    @Override\n    public String convert(ILoggingEvent event) {\n        Map<String, String> mdcPropertyMap = event.getMDCPropertyMap();\n\n        if (mdcPropertyMap == null) {\n            return defaultValue;\n        }\n\n        if (key == null) {\n            return outputMDCForAllKeys(mdcPropertyMap);\n        } else {\n\n            String value = mdcPropertyMap.get(key);\n            if (value != null) {\n                return value;\n            } else {\n                return defaultValue;\n            }\n        }\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ILoggingEvent"})," \u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b ",(0,t.jsx)(n.code,{children:"LoggingEvent"})," \u4e2d\uff0c\u5bf9 ",(0,t.jsx)(n.code,{children:"MDCAdapter"})," \u505a\u4e86\u9002\u914d\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public class LoggingEvent implements ILoggingEvent {\n\n    public Map<String, String> getMDCPropertyMap() {\n        // populate mdcPropertyMap if null\n        if (mdcPropertyMap == null) {\n            MDCAdapter mdc = MDC.getMDCAdapter();\n            if (mdc instanceof LogbackMDCAdapter)\n                mdcPropertyMap = ((LogbackMDCAdapter) mdc).getPropertyMap();\n            else\n                mdcPropertyMap = mdc.getCopyOfContextMap();\n        }\n        // mdcPropertyMap still null, use emptyMap()\n        if (mdcPropertyMap == null)\n            mdcPropertyMap = Collections.emptyMap();\n\n        return mdcPropertyMap;\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},25631:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/25-1-dda216c40501edcc6542d7370b6b1f88.awebp"},61960:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/25-2-14101f2b0ef251c3767e2e4ee57f850e.awebp"},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var t=r(96540);const a={},l=t.createContext(a);function o(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);