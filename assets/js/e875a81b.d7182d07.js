"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[2584],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=a.createContext({}),l=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=l(e.components);return a.createElement(i.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(t),g=s,h=p["".concat(i,".").concat(g)]||p[g]||d[g]||r;return t?a.createElement(h,o(o({ref:n},c),{},{components:t})):a.createElement(h,o({ref:n},c))}));function h(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,o=new Array(r);o[0]=g;var u={};for(var i in n)hasOwnProperty.call(n,i)&&(u[i]=n[i]);u.originalType=e,u[p]="string"==typeof e?e:s,o[1]=u;for(var l=2;l<r;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7205:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>u,toc:()=>l});var a=t(7462),s=(t(7294),t(3905));const r={},o=void 0,u={unversionedId:"zh-cn/guide/Docusaurus-Usage",id:"zh-cn/guide/Docusaurus-Usage",title:"Docusaurus-Usage",description:"Docusaurus \u5b98\u7f51",source:"@site/docs/zh-cn/guide/Docusaurus-Usage.md",sourceDirName:"zh-cn/guide",slug:"/zh-cn/guide/Docusaurus-Usage",permalink:"/light-docusaurus/docs/zh-cn/guide/Docusaurus-Usage",draft:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/guide/Docusaurus-Usage.md",tags:[],version:"current",frontMatter:{},sidebar:"troch",previous:{title:"Docsify-Usage",permalink:"/light-docusaurus/docs/zh-cn/guide/Docsify-Usage"},next:{title:"Develop Environment",permalink:"/light-docusaurus/docs/category/develop-environment"}},i={},l=[{value:"1. \u73af\u5883",id:"1-\u73af\u5883",level:2},{value:"2. \u521d\u59cb\u5316",id:"2-\u521d\u59cb\u5316",level:2},{value:"3. \u8fd0\u884c",id:"3-\u8fd0\u884c",level:2},{value:"4. \u6253\u5305",id:"4-\u6253\u5305",level:2},{value:"5. \u63a8\u9001\u4ed3\u5e93",id:"5-\u63a8\u9001\u4ed3\u5e93",level:2},{value:"6. \u90e8\u7f72\u7ad9\u70b9",id:"6-\u90e8\u7f72\u7ad9\u70b9",level:2},{value:"7. \u5347\u7ea7",id:"7-\u5347\u7ea7",level:2}],c={toc:l},p="wrapper";function d(e){let{components:n,...t}=e;return(0,s.kt)(p,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://docusaurus.io/"},"Docusaurus \u5b98\u7f51"),"\n",(0,s.kt)("a",{parentName:"p",href:"https://www.docusaurus.cn/"},"Docusaurus \u4e2d\u6587\u7f51"),"\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/facebook/docusaurus"},"Docusaurus Github")),(0,s.kt)("h2",{id:"1-\u73af\u5883"},"1. \u73af\u5883"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Node.js 16.14+")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"node -v\n\nnpm -v\n")),(0,s.kt)("h2",{id:"2-\u521d\u59cb\u5316"},"2. \u521d\u59cb\u5316"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"npx create-docusaurus@latest light-docusaurus classic --typescript\n\n# \u6216\u8005\nnpm init docusaurus ./light-docusaurus classic --typescript\n")),(0,s.kt)("h2",{id:"3-\u8fd0\u884c"},"3. \u8fd0\u884c"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"npm run start\n")),(0,s.kt)("h2",{id:"4-\u6253\u5305"},"4. \u6253\u5305"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"npm run build\n")),(0,s.kt)("h2",{id:"5-\u63a8\u9001\u4ed3\u5e93"},"5. \u63a8\u9001\u4ed3\u5e93"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'git init\ngit config user.name "Hui Liu"\ngit config user.email "whitetuips@163.com"\n\ngit add .\ngit commit -m "Init commit"\ngit branch -M main\ngit remote add origin git@github.com:lorchr/light-docusaurusy.git\ngit push -u origin main\n')),(0,s.kt)("h2",{id:"6-\u90e8\u7f72\u7ad9\u70b9"},"6. \u90e8\u7f72\u7ad9\u70b9"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"\u4fee\u6539 ",(0,s.kt)("inlineCode",{parentName:"li"},"docusaurus.config.js"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const config = {\n  // ...\n\n  // Set the production url of your site here\n  url: 'https://lorchr.github.io',\n  // Set the /<baseUrl>/ pathname under which your site is served\n  // For GitHub pages deployment, it is often '/<projectName>/'\n  baseUrl: '/light-docusaurus/',\n\n  // GitHub pages deployment config.\n  // If you aren't using GitHub pages, you don't need these.\n  organizationName: 'lorchr', // Usually your GitHub org/user name.\n  projectName: 'light-docusaurus', // Usually your repo name.\n  deploymentBranch: 'gh-pages',\n  trailingSlash: true, // Set value true or false, not undefined\n\n  // ...\n")),(0,s.kt)("ol",{start:2},(0,s.kt)("li",{parentName:"ol"},"\u914d\u7f6e\u79d8\u94a5")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"# \u751f\u6210\u79d8\u94a5 https://docs.github.com/cn/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token\n#   \u5728 `GitHub \u4e3b\u9875` -> `\u4e2a\u4eba\u5934\u50cf` -> `Settings` -> `Developer settings` -> `Personal access tokens` \u8fdb\u884c\u751f\u6210\u6216\u66f4\u65b0\n\n# \u914d\u7f6e\u79d8\u94a5\n#   `\u4ee3\u7801\u4ed3\u5e93`->`Settinigs`->`Secrets`->`Actions`->`New repository secret`\u586b\u4e0a\u5bf9\u5e94\u7684`key-value`\n\nACCESS_TOKEN = Ds1aH2d6sa2219Ssa\n")),(0,s.kt)("ol",{start:3},(0,s.kt)("li",{parentName:"ol"},"\u6dfb\u52a0 github action files")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:".github/workflows/deploy.yml",".github/workflows/deploy.yml":!0},"name: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - main\n    # Review gh actions docs if you want to further define triggers, paths, etc\n    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\n\npermissions:\n  contents: write\n\njobs:\n  deploy:\n    name: Deploy to GitHub Pages\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18\n          cache: yarn\n          cache-dependency-path: './package-lock.json'\n\n      - name: Install dependencies\n        run: yarn install --frozen-lockfile\n      - name: Build website\n        run: yarn build\n\n      # Popular action to deploy to GitHub Pages:\n      # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.ACCESS_TOKEN }}\n          # Build output to publish to the `gh-pages` branch:\n          publish_dir: ./build\n          # The following lines assign commit authorship to the official\n          # GH-Actions bot for deploys to `gh-pages` branch:\n          # https://github.com/actions/checkout/issues/13#issuecomment-724415212\n          # The GH actions bot is used by default if you didn't specify the two fields.\n          # You can swap them out with your own user credentials.\n          user_name: github-actions[bot]\n          user_email: 41898282+github-actions[bot]@users.noreply.github.com\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:".github/workflows/test-deploy.yml",".github/workflows/test-deploy.yml":!0},"name: Test deployment\n\non:\n  pull_request:\n    branches:\n      - main\n    # Review gh actions docs if you want to further define triggers, paths, etc\n    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\n\njobs:\n  test-deploy:\n    name: Test deployment\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18\n          cache: yarn\n          cache-dependency-path: './package-lock.json'\n\n      - name: Install dependencies\n        run: yarn install --frozen-lockfile\n      - name: Test build website\n        run: yarn build\n")),(0,s.kt)("h2",{id:"7-\u5347\u7ea7"},"7. \u5347\u7ea7"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"\u4fee\u6539 ",(0,s.kt)("inlineCode",{parentName:"li"},"package.json"),"\uff0c\u914d\u7f6e",(0,s.kt)("inlineCode",{parentName:"li"},"docusaurus"),"\u7248\u672c")),(0,s.kt)("p",null,"\u6240\u6709docusaurus\u5f00\u5934\u7684\u90fd\u9700\u8981\u5347\u7ea7"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "@docusaurus/core": "current",\n    "@docusaurus/preset-classic": "current",\n    // ...\n  }\n}\n')),(0,s.kt)("ol",{start:2},(0,s.kt)("li",{parentName:"ol"},"\u5b89\u88c5\u5347\u7ea7")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"# \u5b89\u88c5\u5347\u7ea7\nnpm install\n\n# \u68c0\u67e5\u7248\u672c\nnpx docusaurus --version\n\n# \u6216\u8005\u4e00\u952e\u5347\u7ea7\nyarn upgrade @docusaurus/core@latest @docusaurus/preset-classic@latest\n")))}d.isMDXComponent=!0}}]);