"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[3772],{26045:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var r=o(85893),s=o(11151);const c={},d=void 0,a={id:"zh-cn/docker/Docker-Add-Hosts-For-Container",title:"Docker-Add-Hosts-For-Container",description:"Docker",source:"@site/docs/zh-cn/docker/4-Docker-Add-Hosts-For-Container.md",sourceDirName:"zh-cn/docker",slug:"/zh-cn/docker/Docker-Add-Hosts-For-Container",permalink:"/light-docusaurus/docs/zh-cn/docker/Docker-Add-Hosts-For-Container",draft:!1,unlisted:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/docker/4-Docker-Add-Hosts-For-Container.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"troch",previous:{title:"Oracle-Cloud-Free-Tier",permalink:"/light-docusaurus/docs/zh-cn/docker/Oracle-Cloud-Free-Tier"},next:{title:"Docker-Port-Bind-Error-In-Windows",permalink:"/light-docusaurus/docs/zh-cn/docker/Docker-Port-Bind-Error-In-Windows"}},t={},l=[{value:"Docker",id:"docker",level:2},{value:"Docker Compose",id:"docker-compose",level:2},{value:"Kubernates",id:"kubernates",level:2}];function i(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"docker",children:"Docker"}),"\n",(0,r.jsxs)(n.p,{children:["\u8fd0\u884c\u5bb9\u5668\u76f4\u63a5\u6dfb\u52a0\u53c2\u6570 ",(0,r.jsx)(n.code,{children:"--add-host"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'docker run -it \\\n  --add-host="example1.domain.com:192.168.1.100" \\\n  --add-host="example2.domain.com:192.168.1.101" \\\n  --name hello-docker \\\n  hello-docker:1.0\n'})}),"\n",(0,r.jsx)(n.h2,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,r.jsxs)(n.p,{children:["\u914d\u7f6e ",(0,r.jsx)(n.code,{children:"extra_hosts"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"version: '3'\n\nservices:\n  hello-docker:\n    restart: always\n    image: hello-docker:1.0\n    extra_hosts:\n      - 'example1.domain.com:192.168.1.100'\n      - 'example2.domain.com:192.168.1.101'\n    container_name: hello-docker\n    network_mode: bridge\n    ports:\n      - \"80:80\"\n    environment:\n      - ENV=dev\n"})}),"\n",(0,r.jsx)(n.h2,{id:"kubernates",children:"Kubernates"}),"\n",(0,r.jsxs)(n.p,{children:["\u5728\u521b\u5efapod\u7684yaml\u4e2d\u6307\u5b9a",(0,r.jsx)(n.code,{children:"hostAliases"}),"\u6dfb\u52a0IP\u57df\u540d\u6620\u5c04"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: dev\n  name: hello-docker-deployment\n  labels:\n    app: hello-docker\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: hello-docker\n  template:\n    metadata:\n      labels:\n        app: hello-docker\n    spec:\n      hostAliases:\n        - hostnames:\n          - example1.domain.com\n          ip: 192.168.1.100\n        - hostnames:\n          - example2.domain.com\n          ip: 192.168.1.101\n      imagePullSecrets:\n        - name: default-secret\n      containers:\n        - name: hello-docker\n          image: hello-docker:1.0\n          imagePullpolicy: Always\n          ports:\n            - containerPort: 80\n          env:\n            - name: ENV\n              value: dev\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}},11151:(e,n,o)=>{o.d(n,{ah:()=>c});var r=o(67294);const s=r.createContext({});function c(e){const n=r.useContext(s);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);