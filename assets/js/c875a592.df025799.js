"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[40581],{1915:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var o=r(74848),t=r(28453);const l={},a=void 0,i={id:"zh-cn/spring-boot/Customlize-Request-Trace",title:"Customlize-Request-Trace",description:"- \u624b\u52a8\u5b9e\u73b0 Spring Boot \u65e5\u5fd7\u94fe\u8def\u8ffd\u8e2a\uff0c\u65e0\u9700\u5f15\u5165\u7ec4\u4ef6\uff0c\u65e5\u5fd7\u5b9a\u4f4d\u66f4\u65b9\u4fbf\uff01",source:"@site/docs/zh-cn/spring-boot/25-Customlize-Request-Trace.md",sourceDirName:"zh-cn/spring-boot",slug:"/zh-cn/spring-boot/Customlize-Request-Trace",permalink:"/light-docusaurus/docs/zh-cn/spring-boot/Customlize-Request-Trace",draft:!1,unlisted:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/spring-boot/25-Customlize-Request-Trace.md",tags:[],version:"current",sidebarPosition:25,frontMatter:{},sidebar:"troch",previous:{title:"Spring-Boot-Hotswap-Aop",permalink:"/light-docusaurus/docs/zh-cn/spring-boot/Spring-Boot-Hotswap-Aop"},next:{title:"Spring-Boot-Integrate-Alipay",permalink:"/light-docusaurus/docs/zh-cn/spring-boot/Spring-Boot-Integrate-Alipay"}},c={},s=[{value:"\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u5b9e\u73b0\u94fe\u8def\u8ffd\u8e2a",id:"\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u5b9e\u73b0\u94fe\u8def\u8ffd\u8e2a",level:2},{value:"1. pom.xml \u4f9d\u8d56",id:"1-pomxml-\u4f9d\u8d56",level:3},{value:"2. logback-spring.xml \u914d\u7f6e",id:"2-logback-springxml-\u914d\u7f6e",level:3},{value:"3. application.yaml",id:"3-applicationyaml",level:3},{value:"4. TraceLogInterceptor \u81ea\u5b9a\u4e49\u65e5\u5fd7\u62e6\u622a",id:"4-traceloginterceptor-\u81ea\u5b9a\u4e49\u65e5\u5fd7\u62e6\u622a",level:3},{value:"5. LogMvcConfigurer \u6dfb\u52a0\u62e6\u622a\u5668",id:"5-logmvcconfigurer-\u6dfb\u52a0\u62e6\u622a\u5668",level:3},{value:"6. ThreadPoolConfig \u5b9a\u4e49\u7ebf\u7a0b\u6c60\uff0c\u4ea4\u7ed9spring\u7ba1\u7406",id:"6-threadpoolconfig-\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u4ea4\u7ed9spring\u7ba1\u7406",level:3},{value:"7. TraceThreadPoolTaskExecutor \u5305\u88c5",id:"7-tracethreadpooltaskexecutor-\u5305\u88c5",level:3},{value:"8. TraceThreadMdcTool \u5305\u88c5",id:"8-tracethreadmdctool-\u5305\u88c5",level:3}];function g(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/JerVwf0zlcalA28WTof63g",children:"\u624b\u52a8\u5b9e\u73b0 Spring Boot \u65e5\u5fd7\u94fe\u8def\u8ffd\u8e2a\uff0c\u65e0\u9700\u5f15\u5165\u7ec4\u4ef6\uff0c\u65e5\u5fd7\u5b9a\u4f4d\u66f4\u65b9\u4fbf\uff01"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u5b9e\u73b0\u94fe\u8def\u8ffd\u8e2a",children:"\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u5b9e\u73b0\u94fe\u8def\u8ffd\u8e2a"}),"\n",(0,o.jsx)(n.h3,{id:"1-pomxml-\u4f9d\u8d56",children:"1. pom.xml \u4f9d\u8d56"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-test</artifactId>\n        <scope>test</scope>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n    </dependency>\n    \x3c!--lombok\u914d\u7f6e--\x3e\n    <dependency>\n        <groupId>org.projectlombok</groupId>\n        <artifactId>lombok</artifactId>\n        <version>1.16.10</version>\n    </dependency>\n</dependencies>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-logback-springxml-\u914d\u7f6e",children:"2. logback-spring.xml \u914d\u7f6e"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n\x3c!-- \u65e5\u5fd7\u7ea7\u522b\u4ece\u4f4e\u5230\u9ad8\u5206\u4e3aTRACE < DEBUG < INFO < WARN < ERROR < FATAL\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3aWARN\uff0c\u5219\u4f4e\u4e8eWARN\u7684\u4fe1\u606f\u90fd\u4e0d\u4f1a\u8f93\u51fa --\x3e\n\x3c!-- scan:\u5f53\u6b64\u5c5e\u6027\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u914d\u7f6e\u6587\u6863\u5982\u679c\u53d1\u751f\u6539\u53d8\uff0c\u5c06\u4f1a\u88ab\u91cd\u65b0\u52a0\u8f7d\uff0c\u9ed8\u8ba4\u503c\u4e3atrue --\x3e\n\x3c!-- scanPeriod:\u8bbe\u7f6e\u76d1\u6d4b\u914d\u7f6e\u6587\u6863\u662f\u5426\u6709\u4fee\u6539\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u65f6\u95f4\u5355\u4f4d\uff0c\u9ed8\u8ba4\u5355\u4f4d\u662f\u6beb\u79d2\u3002\n                 \u5f53scan\u4e3atrue\u65f6\uff0c\u6b64\u5c5e\u6027\u751f\u6548\u3002\u9ed8\u8ba4\u7684\u65f6\u95f4\u95f4\u9694\u4e3a1\u5206\u949f\u3002 --\x3e\n\x3c!-- debug:\u5f53\u6b64\u5c5e\u6027\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u5c06\u6253\u5370\u51falogback\u5185\u90e8\u65e5\u5fd7\u4fe1\u606f\uff0c\u5b9e\u65f6\u67e5\u770blogback\u8fd0\u884c\u72b6\u6001\u3002\u9ed8\u8ba4\u503c\u4e3afalse\u3002 --\x3e\n<configuration  scan="true" scanPeriod="10 seconds">\n    <contextName>logback</contextName>\n\n    \x3c!-- name\u7684\u503c\u662f\u53d8\u91cf\u7684\u540d\u79f0\uff0cvalue\u7684\u503c\u65f6\u53d8\u91cf\u5b9a\u4e49\u7684\u503c\u3002\u901a\u8fc7\u5b9a\u4e49\u7684\u503c\u4f1a\u88ab\u63d2\u5165\u5230logger\u4e0a\u4e0b\u6587\u4e2d\u3002\u5b9a\u4e49\u540e\uff0c\u53ef\u4ee5\u4f7f ${} \u6765\u4f7f\u7528\u53d8\u91cf\u3002 --\x3e\n    <property name="log.path" value="${project.basedir}/logs" />\n    <property name="app.name" value="${spring.application.name:- cloud-service-demo}" />\n\n    \x3c!--0. \u65e5\u5fd7\u683c\u5f0f\u548c\u989c\u8272\u6e32\u67d3 --\x3e\n    \x3c!-- \u5f69\u8272\u65e5\u5fd7\u4f9d\u8d56\u7684\u6e32\u67d3\u7c7b --\x3e\n    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />\n    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />\n    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />\n    \x3c!-- \u5f69\u8272\u65e5\u5fd7\u683c\u5f0f --\x3e\n    \x3c!--\n        \u9ed1      \u7ea2    \u7eff      \u9ec4       \u84dd     \u6d0b\u7ea2        \u9752     \u767d      \u7070\n        %black\u3001%red\u3001%green\u3001%yellow\u3001%blue\u3001%magenta\u3001%cyan\u3001%white\u3001%gray\u3001\n        \u52a0\u7c97\u7ea2     \u52a0\u7c97\u7eff       \u52a0\u7c97\u9ec4        \u52a0\u7c97\u84dd     \u52a0\u7c97\u6d0b\u7ea2       \u52a0\u7c97\u9752      \u52a0\u7c97\u767d       \u9ad8\u4eae\n        %boldRed\u3001%boldGreen\u3001%boldYellow\u3001%boldBlue\u3001%boldMagenta\u3001%boldCyan\u3001%boldWhite\u3001%highlight\n    --\x3e\n    \x3c!--\u683c\u5f0f\u5316\u8f93\u51fa\uff1a\n        %d %date       \u8868\u793a\u65e5\u671f\uff0c\n        %t %thread     \u8868\u793a\u7ebf\u7a0b\u540d\uff0c\n        %p %-5level    \u7ea7\u522b\u4ece\u5de6\u663e\u793a5\u4e2a\u5b57\u7b26\u5bbd\u5ea6\n        %m %msg        \u65e5\u5fd7\u6d88\u606f\uff0c\n        %n          \u662f\u6362\u884c\u7b26\n    --\x3e\n    <property name="FILE_LOG_PATTERN" value="[%X{traceId}] %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{50}#%method:%line : %msg%n" />\n    <property name="CONSOLE_LOG_PATTERN" value="[%X{traceId}] %d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %green([${app.name}]) %red(${PID:- }) --- %magenta([%thread]) %cyan(%-50.50logger{49}#%method:%line) : %msg%n" />\n    <property name="CONSOLE_LOG_PATTERN" value="[%X{traceId}] ${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint}\n                    %clr(${LOG_LEVEL_PATTERN:-%5level}){highlight} %clr(${app.name}){green} %clr(${PID:- }){red}\n                    %clr(---){faint} %clr([%15.15thread]){magenta} %clr(%-50.50logger{49}){cyan}%clr(#%method){cyan}%clr(:%line){cyan}\n                    %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>\n\n    \x3c!--1. \u8f93\u51fa\u5230\u63a7\u5236\u53f0--\x3e\n    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">\n        <encoder>\n            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>\n            \x3c!-- \u8bbe\u7f6e\u5b57\u7b26\u96c6 --\x3e\n            <charset>UTF-8</charset>\n        </encoder>\n        \x3c!--\u6b64\u65e5\u5fd7appender\u662f\u4e3a\u5f00\u53d1\u4f7f\u7528\uff0c\u53ea\u914d\u7f6e\u6700\u5e95\u7ea7\u522b\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u7684\u65e5\u5fd7\u7ea7\u522b\u662f\u5927\u4e8e\u6216\u7b49\u4e8e\u6b64\u7ea7\u522b\u7684\u65e5\u5fd7\u4fe1\u606f--\x3e\n        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">\n            <level>DEBUG</level>\n        </filter>\n    </appender>\n\n    \x3c!--2. \u8f93\u51fa\u5230\u6587\u6863--\x3e\n    \x3c!-- 2.1 level\u4e3a DEBUG \u65e5\u5fd7\uff0c\u65f6\u95f4\u6eda\u52a8\u8f93\u51fa  --\x3e\n    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        \x3c!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u6863\u7684\u8def\u5f84\u53ca\u6587\u6863\u540d --\x3e\n        <file>${log.path}/debug.log</file>\n        \x3c!--\u65e5\u5fd7\u6587\u6863\u8f93\u51fa\u683c\u5f0f--\x3e\n        <encoder>\n            \x3c!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>--\x3e\n            <pattern>${FILE_LOG_PATTERN}</pattern>\n            <charset>UTF-8</charset> \x3c!-- \u8bbe\u7f6e\u5b57\u7b26\u96c6 --\x3e\n        </encoder>\n        \x3c!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --\x3e\n        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n            \x3c!-- \u65e5\u5fd7\u5f52\u6863 --\x3e\n            <fileNamePattern>${log.path}/web-debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>\n            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">\n                <maxFileSize>100MB</maxFileSize>\n            </timeBasedFileNamingAndTriggeringPolicy>\n            \x3c!--\u65e5\u5fd7\u6587\u6863\u4fdd\u7559\u5929\u6570--\x3e\n            <maxHistory>15</maxHistory>\n        </rollingPolicy>\n        \x3c!-- \u6b64\u65e5\u5fd7\u6587\u6863\u53ea\u8bb0\u5f55debug\u7ea7\u522b\u7684 --\x3e\n        <filter class="ch.qos.logback.classic.filter.LevelFilter">\n            <level>DEBUG</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n    </appender>\n\n    \x3c!-- 2.2 level\u4e3a INFO \u65e5\u5fd7\uff0c\u65f6\u95f4\u6eda\u52a8\u8f93\u51fa  --\x3e\n    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        \x3c!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u6863\u7684\u8def\u5f84\u53ca\u6587\u6863\u540d --\x3e\n        <file>${log.path}/info.log</file>\n        \x3c!--\u65e5\u5fd7\u6587\u6863\u8f93\u51fa\u683c\u5f0f--\x3e\n        <encoder>\n            <pattern>${FILE_LOG_PATTERN}</pattern>\n            <charset>UTF-8</charset>\n        </encoder>\n        \x3c!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --\x3e\n        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n            \x3c!-- \u6bcf\u5929\u65e5\u5fd7\u5f52\u6863\u8def\u5f84\u4ee5\u53ca\u683c\u5f0f --\x3e\n            <fileNamePattern>${log.path}/web-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>\n            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">\n                <maxFileSize>100MB</maxFileSize>\n            </timeBasedFileNamingAndTriggeringPolicy>\n            \x3c!--\u65e5\u5fd7\u6587\u6863\u4fdd\u7559\u5929\u6570--\x3e\n            <maxHistory>15</maxHistory>\n        </rollingPolicy>\n        \x3c!-- \u6b64\u65e5\u5fd7\u6587\u6863\u53ea\u8bb0\u5f55info\u7ea7\u522b\u7684 --\x3e\n        <filter class="ch.qos.logback.classic.filter.LevelFilter">\n            <level>INFO</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n    </appender>\n\n    \x3c!-- 2.3 level\u4e3a WARN \u65e5\u5fd7\uff0c\u65f6\u95f4\u6eda\u52a8\u8f93\u51fa  --\x3e\n    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        \x3c!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u6863\u7684\u8def\u5f84\u53ca\u6587\u6863\u540d --\x3e\n        <file>${log.path}/warn.log</file>\n        \x3c!--\u65e5\u5fd7\u6587\u6863\u8f93\u51fa\u683c\u5f0f--\x3e\n        <encoder>\n            <pattern>${FILE_LOG_PATTERN}</pattern>\n            <charset>UTF-8</charset> \x3c!-- \u6b64\u5904\u8bbe\u7f6e\u5b57\u7b26\u96c6 --\x3e\n        </encoder>\n        \x3c!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --\x3e\n        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n            <fileNamePattern>${log.path}/web-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>\n            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">\n                <maxFileSize>100MB</maxFileSize>\n            </timeBasedFileNamingAndTriggeringPolicy>\n            \x3c!--\u65e5\u5fd7\u6587\u6863\u4fdd\u7559\u5929\u6570--\x3e\n            <maxHistory>15</maxHistory>\n        </rollingPolicy>\n        \x3c!-- \u6b64\u65e5\u5fd7\u6587\u6863\u53ea\u8bb0\u5f55warn\u7ea7\u522b\u7684 --\x3e\n        <filter class="ch.qos.logback.classic.filter.LevelFilter">\n            <level>WARN</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n    </appender>\n\n    \x3c!-- 2.4 level\u4e3a ERROR \u65e5\u5fd7\uff0c\u65f6\u95f4\u6eda\u52a8\u8f93\u51fa  --\x3e\n    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        \x3c!-- \u6b63\u5728\u8bb0\u5f55\u7684\u65e5\u5fd7\u6587\u6863\u7684\u8def\u5f84\u53ca\u6587\u6863\u540d --\x3e\n        <file>${log.path}/error.log</file>\n        \x3c!--\u65e5\u5fd7\u6587\u6863\u8f93\u51fa\u683c\u5f0f--\x3e\n        <encoder>\n            <pattern>${FILE_LOG_PATTERN}</pattern>\n            <charset>UTF-8</charset> \x3c!-- \u6b64\u5904\u8bbe\u7f6e\u5b57\u7b26\u96c6 --\x3e\n        </encoder>\n        \x3c!-- \u65e5\u5fd7\u8bb0\u5f55\u5668\u7684\u6eda\u52a8\u7b56\u7565\uff0c\u6309\u65e5\u671f\uff0c\u6309\u5927\u5c0f\u8bb0\u5f55 --\x3e\n        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n            <fileNamePattern>${log.path}/web-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>\n            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">\n                <maxFileSize>100MB</maxFileSize>\n            </timeBasedFileNamingAndTriggeringPolicy>\n            \x3c!--\u65e5\u5fd7\u6587\u6863\u4fdd\u7559\u5929\u6570--\x3e\n            <maxHistory>15</maxHistory>\n        </rollingPolicy>\n        \x3c!-- \u6b64\u65e5\u5fd7\u6587\u6863\u53ea\u8bb0\u5f55ERROR\u7ea7\u522b\u7684 --\x3e\n        <filter class="ch.qos.logback.classic.filter.LevelFilter">\n            <level>ERROR</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n    </appender>\n\n    \x3c!--\n        <logger>\u7528\u6765\u8bbe\u7f6e\u67d0\u4e00\u4e2a\u5305\u6216\u8005\u5177\u4f53\u7684\u67d0\u4e00\u4e2a\u7c7b\u7684\u65e5\u5fd7\u6253\u5370\u7ea7\u522b\u3001\n        \u4ee5\u53ca\u6307\u5b9a<appender>\u3002<logger>\u4ec5\u6709\u4e00\u4e2aname\u5c5e\u6027\uff0c\n        \u4e00\u4e2a\u53ef\u9009\u7684level\u548c\u4e00\u4e2a\u53ef\u9009\u7684addtivity\u5c5e\u6027\u3002\n        name:\u7528\u6765\u6307\u5b9a\u53d7\u6b64logger\u7ea6\u675f\u7684\u67d0\u4e00\u4e2a\u5305\u6216\u8005\u5177\u4f53\u7684\u67d0\u4e00\u4e2a\u7c7b\u3002\n        level:\u7528\u6765\u8bbe\u7f6e\u6253\u5370\u7ea7\u522b\uff0c\u5927\u5c0f\u5199\u65e0\u5173\uff1aTRACE, DEBUG, INFO, WARN, ERROR, ALL \u548c OFF\uff0c\n              \u8fd8\u6709\u4e00\u4e2a\u7279\u4fd7\u503cINHERITED\u6216\u8005\u540c\u4e49\u8bcdNULL\uff0c\u4ee3\u8868\u5f3a\u5236\u6267\u884c\u4e0a\u7ea7\u7684\u7ea7\u522b\u3002\n              \u5982\u679c\u672a\u8bbe\u7f6e\u6b64\u5c5e\u6027\uff0c\u90a3\u4e48\u5f53\u524dlogger\u5c06\u4f1a\u7ee7\u627f\u4e0a\u7ea7\u7684\u7ea7\u522b\u3002\n        addtivity:\u662f\u5426\u5411\u4e0a\u7ea7logger\u4f20\u9012\u6253\u5370\u4fe1\u606f\u3002\u9ed8\u8ba4\u662ftrue\u3002\n        <logger name="org.springframework.web" level="info"/>\n        <logger name="org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor" level="INFO"/>\n    --\x3e\n\n    \x3c!--\n        \u4f7f\u7528mybatis\u7684\u65f6\u5019\uff0csql\u8bed\u53e5\u662fdebug\u4e0b\u624d\u4f1a\u6253\u5370\uff0c\u800c\u8fd9\u91cc\u6211\u4eec\u53ea\u914d\u7f6e\u4e86info\uff0c\u6240\u4ee5\u60f3\u8981\u67e5\u770bsql\u8bed\u53e5\u7684\u8bdd\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n        \u7b2c\u4e00\u79cd\u628a<root level="info">\u6539\u6210<root level="DEBUG">\u8fd9\u6837\u5c31\u4f1a\u6253\u5370sql\uff0c\u4e0d\u8fc7\u8fd9\u6837\u65e5\u5fd7\u90a3\u8fb9\u4f1a\u51fa\u73b0\u5f88\u591a\u5176\u4ed6\u6d88\u606f\n        \u7b2c\u4e8c\u79cd\u5c31\u662f\u5355\u72ec\u7ed9dao\u4e0b\u76ee\u5f55\u914d\u7f6edebug\u6a21\u5f0f\uff0c\u4ee3\u7801\u5982\u4e0b\uff0c\u8fd9\u6837\u914d\u7f6esql\u8bed\u53e5\u4f1a\u6253\u5370\uff0c\u5176\u4ed6\u8fd8\u662f\u6b63\u5e38info\u7ea7\u522b\uff1a\n        \u3010logging.level.org.mybatis=debug logging.level.dao=debug\u3011\n     --\x3e\n\n    \x3c!--\n        root\u8282\u70b9\u662f\u5fc5\u9009\u8282\u70b9\uff0c\u7528\u6765\u6307\u5b9a\u6700\u57fa\u7840\u7684\u65e5\u5fd7\u8f93\u51fa\u7ea7\u522b\uff0c\u53ea\u6709\u4e00\u4e2alevel\u5c5e\u6027\n        level:\u7528\u6765\u8bbe\u7f6e\u6253\u5370\u7ea7\u522b\uff0c\u5927\u5c0f\u5199\u65e0\u5173\uff1aTRACE, DEBUG, INFO, WARN, ERROR, ALL \u548c OFF\uff0c\n        \u4e0d\u80fd\u8bbe\u7f6e\u4e3aINHERITED\u6216\u8005\u540c\u4e49\u8bcdNULL\u3002\u9ed8\u8ba4\u662fDEBUG\n        \u53ef\u4ee5\u5305\u542b\u96f6\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\uff0c\u6807\u8bc6\u8fd9\u4e2aappender\u5c06\u4f1a\u6dfb\u52a0\u5230\u8fd9\u4e2alogger\u3002\n    --\x3e\n\n    \x3c!-- 4. \u6700\u7ec8\u7684\u7b56\u7565 --\x3e\n    \x3c!-- 4.1 \u5f00\u53d1\u73af\u5883:\u6253\u5370\u63a7\u5236\u53f0--\x3e\n    <springProfile name="dev">\n        <logger name="com.light" level="info"/>\n        <root level="info">\n            <appender-ref ref="CONSOLE" />\n            <appender-ref ref="DEBUG_FILE" />\n            <appender-ref ref="INFO_FILE" />\n            <appender-ref ref="WARN_FILE" />\n            <appender-ref ref="ERROR_FILE" />\n        </root>\n    </springProfile>\n\n\n    \x3c!-- 4.2 \u751f\u4ea7\u73af\u5883:\u8f93\u51fa\u5230\u6587\u6863--\x3e\n    <springProfile name="prod">\n        <logger name="com.light" level="warn"/>\n        <root level="info">\n            <appender-ref ref="ERROR_FILE" />\n            <appender-ref ref="WARN_FILE" />\n        </root>\n    </springProfile>\n\n</configuration>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"3-applicationyaml",children:"3. application.yaml"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"server:\n  port: 8080\n\nlogging:\n  config: classpath:logback-spring.xml\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"4-traceloginterceptor-\u81ea\u5b9a\u4e49\u65e5\u5fd7\u62e6\u622a",children:"4. TraceLogInterceptor \u81ea\u5b9a\u4e49\u65e5\u5fd7\u62e6\u622a"}),"\n",(0,o.jsx)(n.p,{children:"\u7528\u9014\uff1a\u6bcf\u4e00\u6b21\u94fe\u8def\uff0c\u7ebf\u7a0b\u7ef4\u5ea6\uff0c\u6dfb\u52a0\u6700\u7ec8\u7684\u94fe\u8defID TRACE_ID"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.common.web.log;\n\nimport jakarta.annotation.Nullable;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport org.apache.commons.lang3.StringUtils;\nimport org.slf4j.MDC;\nimport org.springframework.web.servlet.HandlerInterceptor;\n\nimport java.util.UUID;\n\npublic class TraceLogInterceptor implements HandlerInterceptor {\n\n    private static final String TRACE_ID = "traceId";\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n        String traceId = UUID.randomUUID().toString();\n        // \u53ef\u4ee5\u8003\u8651\u8ba9\u5ba2\u6237\u7aef\u4f20\u5165\u94fe\u8defID\uff0c\u4f46\u9700\u4fdd\u8bc1\u4e00\u5b9a\u7684\u590d\u6742\u5ea6\u552f\u4e00\u6027\uff1b\u5982\u679c\u6ca1\u4f7f\u7528\u9ed8\u8ba4UUID\u81ea\u52a8\u751f\u6210\n        if (StringUtils.isNotBlank(request.getHeader(TRACE_ID))) {\n            traceId = request.getHeader(TRACE_ID);\n        }\n        MDC.put(TRACE_ID, traceId);\n        return true;\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler,\n                                @Nullable Exception ex) {\n        MDC.remove(TRACE_ID);\n    }\n\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"MDC(Mapped Diagnostic Context)\u8bca\u65ad\u4e0a\u4e0b\u6587\u6620\u5c04\uff0c\u662f@Slf4j\u63d0\u4f9b\u7684\u4e00\u4e2a\u652f\u6301\u52a8\u6001\u6253\u5370\u65e5\u5fd7\u4fe1\u606f\u7684\u5de5\u5177\u3002"}),"\n",(0,o.jsx)(n.h3,{id:"5-logmvcconfigurer-\u6dfb\u52a0\u62e6\u622a\u5668",children:"5. LogMvcConfigurer \u6dfb\u52a0\u62e6\u622a\u5668"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.common.web.config;\n\nimport com.light.cloud.common.web.log.TraceLogInterceptor;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class LogMvcConfigurer implements WebMvcConfigurer {\n\n    @Bean\n    public TraceLogInterceptor traceLogInterceptor() {\n        return new TraceLogInterceptor();\n    }\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(traceLogInterceptor())\n                // \u53ef\u4ee5\u5177\u4f53\u5236\u5b9a\u54ea\u4e9b\u9700\u8981\u62e6\u622a\uff0c\u54ea\u4e9b\u4e0d\u62e6\u622a\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u6ce8\u89e3\u66f4\u7075\u6d3b\u5b8c\u6210\n                .addPathPatterns("/**")\n                .excludePathPatterns("/*.html");\n    }\n\n}\n\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u5176\u5b9e\u8fd9\u4e2a\u62e6\u622a\u7684\u90e8\u5206\u53ef\u4ee5\u6539\u4e3a\u4f7f\u7528\u81ea\u5b9a\u4e49\u6ce8\u89e3 + AOP\u5b9e\u73b0\u3002"}),"\n",(0,o.jsx)(n.h3,{id:"6-threadpoolconfig-\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u4ea4\u7ed9spring\u7ba1\u7406",children:"6. ThreadPoolConfig \u5b9a\u4e49\u7ebf\u7a0b\u6c60\uff0c\u4ea4\u7ed9spring\u7ba1\u7406"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.scheduling.annotation.EnableAsync;\nimport java.util.concurrent.Executor;\n \n@Configuration\n@EnableAsync\npublic class ThreadPoolConfig {\n    /**\n     * \u58f0\u660e\u4e00\u4e2a\u7ebf\u7a0b\u6c60\n     *\n     * @return \u6267\u884c\u5668\n     */\n    @Bean("MyExecutor")\n    public Executor asyncExecutor() {\n        TraceThreadPoolTaskExecutor executor = new TraceThreadPoolTaskExecutor();\n        //\u6838\u5fc3\u7ebf\u7a0b\u65705\uff1a\u7ebf\u7a0b\u6c60\u521b\u5efa\u65f6\u5019\u521d\u59cb\u5316\u7684\u7ebf\u7a0b\u6570\n        executor.setCorePoolSize(5);\n        //\u6700\u5927\u7ebf\u7a0b\u65705\uff1a\u7ebf\u7a0b\u6c60\u6700\u5927\u7684\u7ebf\u7a0b\u6570\uff0c\u53ea\u6709\u5728\u7f13\u51b2\u961f\u5217\u6ee1\u4e86\u4e4b\u540e\u624d\u4f1a\u7533\u8bf7\u8d85\u8fc7\u6838\u5fc3\u7ebf\u7a0b\u6570\u7684\u7ebf\u7a0b\n        executor.setMaxPoolSize(5);\n        //\u7f13\u51b2\u961f\u5217500\uff1a\u7528\u6765\u7f13\u51b2\u6267\u884c\u4efb\u52a1\u7684\u961f\u5217\n        executor.setQueueCapacity(500);\n        //\u5141\u8bb8\u7ebf\u7a0b\u7684\u7a7a\u95f2\u65f6\u95f460\u79d2\uff1a\u5f53\u8d85\u8fc7\u4e86\u6838\u5fc3\u7ebf\u7a0b\u51fa\u4e4b\u5916\u7684\u7ebf\u7a0b\u5728\u7a7a\u95f2\u65f6\u95f4\u5230\u8fbe\u4e4b\u540e\u4f1a\u88ab\u9500\u6bc1\n        executor.setKeepAliveSeconds(60);\n        //\u7ebf\u7a0b\u6c60\u540d\u7684\u524d\u7f00\uff1a\u8bbe\u7f6e\u597d\u4e86\u4e4b\u540e\u53ef\u4ee5\u65b9\u4fbf\u6211\u4eec\u5b9a\u4f4d\u5904\u7406\u4efb\u52a1\u6240\u5728\u7684\u7ebf\u7a0b\u6c60\n        executor.setThreadNamePrefix("asyncJCccc");\n        executor.initialize();\n        return executor;\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"7-tracethreadpooltaskexecutor-\u5305\u88c5",children:"7. TraceThreadPoolTaskExecutor \u5305\u88c5"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"package com.light.cloud.common.web.log;\n\nimport org.slf4j.MDC;\nimport org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\nimport org.springframework.util.concurrent.ListenableFuture;\n\nimport java.util.concurrent.Callable;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.concurrent.Future;\n\npublic class TracedThreadPoolTaskExecutor extends ThreadPoolTaskExecutor {\n\n    public TracedThreadPoolTaskExecutor() {\n        super();\n    }\n\n    @Override\n    public void execute(Runnable task) {\n        super.execute(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public <T> Future<T> submit(Callable<T> task) {\n        return super.submit(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public Future<?> submit(Runnable task) {\n        return super.submit(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public <T> CompletableFuture<T> submitCompletable(Callable<T> task) {\n        return super.submitCompletable(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public CompletableFuture<Void> submitCompletable(Runnable task) {\n        return super.submitCompletable(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public ListenableFuture<?> submitListenable(Runnable task) {\n        return super.submitListenable(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n    @Override\n    public <T> ListenableFuture<T> submitListenable(Callable<T> task) {\n        return super.submitListenable(TraceThreadMdcTool.wrap(task, MDC.getCopyOfContextMap()));\n    }\n\n}\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"8-tracethreadmdctool-\u5305\u88c5",children:"8. TraceThreadMdcTool \u5305\u88c5"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'package com.light.cloud.common.web.log;\n\nimport org.slf4j.MDC;\n\nimport java.util.Map;\nimport java.util.UUID;\nimport java.util.concurrent.Callable;\n\npublic class TraceThreadMdcTool {\n    private static final String TRACE_ID = "traceId";\n\n    // \u83b7\u53d6\u552f\u4e00\u6027\u6807\u8bc6\n    public static String generateTraceId() {\n        return UUID.randomUUID().toString();\n    }\n\n    public static void setTraceIdIfAbsent() {\n        if (MDC.get(TRACE_ID) == null) {\n            MDC.put(TRACE_ID, generateTraceId());\n        }\n    }\n\n    /**\n     * \u7528\u4e8e\u7236\u7ebf\u7a0b\u5411\u7ebf\u7a0b\u6c60\u4e2d\u63d0\u4ea4\u4efb\u52a1\u65f6\uff0c\u5c06\u81ea\u8eabMDC\u4e2d\u7684\u6570\u636e\u590d\u5236\u7ed9\u5b50\u7ebf\u7a0b\n     *\n     * @param callable\n     * @param context\n     * @param <T>\n     * @return\n     */\n    public static <T> Callable<T> wrap(final Callable<T> callable, final Map<String, String> context) {\n        return () -> {\n            if (context == null) {\n                MDC.clear();\n            } else {\n                MDC.setContextMap(context);\n            }\n            setTraceIdIfAbsent();\n            try {\n                return callable.call();\n            } finally {\n                MDC.clear();\n            }\n        };\n    }\n\n    /**\n     * \u7528\u4e8e\u7236\u7ebf\u7a0b\u5411\u7ebf\u7a0b\u6c60\u4e2d\u63d0\u4ea4\u4efb\u52a1\u65f6\uff0c\u5c06\u81ea\u8eabMDC\u4e2d\u7684\u6570\u636e\u590d\u5236\u7ed9\u5b50\u7ebf\u7a0b\n     *\n     * @param runnable\n     * @param context\n     * @return\n     */\n    public static Runnable wrap(final Runnable runnable, final Map<String, String> context) {\n        return () -> {\n            if (context == null) {\n                MDC.clear();\n            } else {\n                MDC.setContextMap(context);\n            }\n            setTraceIdIfAbsent();\n            try {\n                runnable.run();\n            } finally {\n                MDC.clear();\n            }\n        };\n    }\n\n}\n\n'})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var o=r(96540);const t={},l=o.createContext(t);function a(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);