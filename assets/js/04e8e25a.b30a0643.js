"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[3318],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},89749:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,p={unversionedId:"zh-cn/java/jvm_dump",id:"zh-cn/java/jvm_dump",title:"jvm_dump",description:"jstack",source:"@site/docs/zh-cn/java/jvm_dump.md",sourceDirName:"zh-cn/java",slug:"/zh-cn/java/jvm_dump",permalink:"/light-docusaurus/docs/zh-cn/java/jvm_dump",draft:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/java/jvm_dump.md",tags:[],version:"current",frontMatter:{},sidebar:"troch",previous:{title:"Java-Instrumentation-JavaAgent",permalink:"/light-docusaurus/docs/zh-cn/java/Java-Instrumentation-JavaAgent"},next:{title:"https",permalink:"/light-docusaurus/docs/zh-cn/java/https"}},l={},s=[{value:"jstack",id:"jstack",level:2},{value:"jstack\u7528\u6cd5",id:"jstack\u7528\u6cd5",level:3},{value:"dump\u6808\u4fe1\u606f",id:"dump\u6808\u4fe1\u606f",level:3},{value:"jmap",id:"jmap",level:2},{value:"jmap\u7528\u6cd5",id:"jmap\u7528\u6cd5",level:3},{value:"dump\u5806\u4fe1\u606f",id:"dump\u5806\u4fe1\u606f",level:3},{value:"jhat",id:"jhat",level:2},{value:"jhat\u7528\u6cd5",id:"jhat\u7528\u6cd5",level:3},{value:"jhat\u5206\u6790dump\u7684\u5806\u4fe1\u606f",id:"jhat\u5206\u6790dump\u7684\u5806\u4fe1\u606f",level:3}],c={toc:s},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"jstack"},"jstack"),(0,r.kt)("h3",{id:"jstack\u7528\u6cd5"},"jstack\u7528\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ /home/mobaxterm > jstack --help\nUsage:\n    jstack [-l] <pid>\n        (to connect to running process)\n    jstack -F [-m] [-l] <pid>\n        (to connect to a hung process)\n    jstack [-m] [-l] <executable> <core>\n        (to connect to a core file)\n    jstack [-m] [-l] [server_id@]<remote server IP or hostname>\n        (to connect to a remote debug server)\n\nOptions:\n    -F  to force a thread dump. Use when jstack <pid> does not respond (process is hung)\n    -m  to print both java and native frames (mixed mode)\n    -l  long listing. Prints additional information about locks\n    -h or -help to print this help message\n\n")),(0,r.kt)("h3",{id:"dump\u6808\u4fe1\u606f"},"dump\u6808\u4fe1\u606f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# dump\u6808\u4fe1\u606f\njstack -l <pid> > pid_stack.txt\n")),(0,r.kt)("h2",{id:"jmap"},"jmap"),(0,r.kt)("h3",{id:"jmap\u7528\u6cd5"},"jmap\u7528\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'$ /home/mobaxterm > jmap --help\nUsage:\n    jmap [option] <pid>\n        (to connect to running process)\n    jmap [option] <executable <core>\n        (to connect to a core file)\n    jmap [option] [server_id@]<remote server IP or hostname>\n        (to connect to remote debug server)\n\nwhere <option> is one of:\n    <none>               to print same info as Solaris pmap\n    -heap                to print java heap summary\n    -histo[:live]        to print histogram of java object heap; if the "live"\n                         suboption is specified, only count live objects\n    -clstats             to print class loader statistics\n    -finalizerinfo       to print information on objects awaiting finalization\n    -dump:<dump-options> to dump java heap in hprof binary format\n                         dump-options:\n                           live         dump only live objects; if not specified,\n                                        all objects in the heap are dumped.\n                           format=b     binary format\n                           file=<file>  dump heap to <file>\n                         Example: jmap -dump:live,format=b,file=heap.bin <pid>\n    -F                   force. Use with -dump:<dump-options> <pid> or -histo\n                         to force a heap dump or histogram when <pid> does not\n                         respond. The "live" suboption is not supported\n                         in this mode.\n    -h | -help           to print this help message\n    -J<flag>             to pass <flag> directly to the runtime system\n')),(0,r.kt)("h3",{id:"dump\u5806\u4fe1\u606f"},"dump\u5806\u4fe1\u606f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# dump\u5806\u4fe1\u606f  .log .bin .hprof\njmap -dump:live,format=b,file=pid_heap.hprof\n")),(0,r.kt)("h2",{id:"jhat"},"jhat"),(0,r.kt)("h3",{id:"jhat\u7528\u6cd5"},"jhat\u7528\u6cd5"),(0,r.kt)("h3",{id:"jhat\u5206\u6790dump\u7684\u5806\u4fe1\u606f"},"jhat\u5206\u6790dump\u7684\u5806\u4fe1\u606f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"jhat -J-d64 -J-ms2g -J-mx4g -port 8999 heap.hprof\n")))}u.isMDXComponent=!0}}]);