"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[45830],{17434:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(74848),i=n(28453);const o={},a=void 0,s={id:"zh-cn/spring-authorization-server/SAS-Token-Enhancer-And-Parser",title:"SAS-Token-Enhancer-And-Parser",description:"- Spring Authorization Server\u5165\u95e8 (\u516d) \u81ea\u5b9a\u4e49JWT\u4e2d\u643a\u5e26\u7684Claims\u4e0e\u8d44\u6e90\u670d\u52a1JWT\u89e3\u6790\u5668",source:"@site/docs/zh-cn/spring-authorization-server/6-SAS-Token-Enhancer-And-Parser.md",sourceDirName:"zh-cn/spring-authorization-server",slug:"/zh-cn/spring-authorization-server/SAS-Token-Enhancer-And-Parser",permalink:"/docs/zh-cn/spring-authorization-server/SAS-Token-Enhancer-And-Parser",draft:!1,unlisted:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/spring-authorization-server/6-SAS-Token-Enhancer-And-Parser.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"troch",previous:{title:"SAS-Customize-Exception-Configurer",permalink:"/docs/zh-cn/spring-authorization-server/SAS-Customize-Exception-Configurer"},next:{title:"SAS-Image-Captcha",permalink:"/docs/zh-cn/spring-authorization-server/SAS-Image-Captcha"}},c={},u=[{value:"\u4e00\u3001\u524d\u8a00",id:"\u4e00\u524d\u8a00",level:2},{value:"\u4e8c\u3001<code>OAuth2TokenCustomizer</code>",id:"\u4e8coauth2tokencustomizer",level:2},{value:"\u4e09\u3001<code>JwtAuthenticationConverter</code>",id:"\u4e09jwtauthenticationconverter",level:2},{value:"\u56db\u3001\u6d41\u7a0b\u56fe",id:"\u56db\u6d41\u7a0b\u56fe",level:2},{value:"\u4e94\u3001\u6d4b\u8bd5",id:"\u4e94\u6d4b\u8bd5",level:2},{value:"1. \u67e5\u770btoken\u4e2d\u7684\u4fe1\u606f",id:"1-\u67e5\u770btoken\u4e2d\u7684\u4fe1\u606f",level:3},{value:"2. \u6d4b\u8bd5\u63a5\u53e3",id:"2-\u6d4b\u8bd5\u63a5\u53e3",level:3},{value:"3. \u65ad\u70b9\u67e5\u770b\u62e5\u6709\u7684\u6743\u9650",id:"3-\u65ad\u70b9\u67e5\u770b\u62e5\u6709\u7684\u6743\u9650",level:3},{value:"\u516d\u3001\u603b\u7ed3",id:"\u516d\u603b\u7ed3",level:2},{value:"1. <code>AuthorizationConfig.java</code>",id:"1-authorizationconfigjava",level:3}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://juejin.cn/post/7241762957570097213",children:"Spring Authorization Server\u5165\u95e8 (\u516d) \u81ea\u5b9a\u4e49JWT\u4e2d\u643a\u5e26\u7684Claims\u4e0e\u8d44\u6e90\u670d\u52a1JWT\u89e3\u6790\u5668"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"\u4e00\u524d\u8a00",children:"\u4e00\u3001\u524d\u8a00"}),"\n",(0,r.jsxs)(t.p,{children:["\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u6709\u63d0\u5230\u8fc7\u8d44\u6e90\u670d\u52a1\u5668\u89e3\u6790access token\u65f6\u4f1a\u5c06\u7528\u6237\u901a\u8fc7\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684scope\u5f53\u505a\u6743\u9650\u653e\u5165authorities\u5c5e\u6027\u4e2d\uff0c\u5f53\u4f7f\u7528\u6ce8\u89e3",(0,r.jsx)(t.code,{children:"@PreAuthorize"}),"\u7684",(0,r.jsx)(t.code,{children:"hasAuthority"}),"\u6821\u9a8c\u7528\u6237\u6743\u9650\u65f6\uff0c\u5b9e\u9645\u4e0a\u6821\u9a8c\u7684\u662faccess token\u4e2d\u62e5\u6709\u7684\u6743\u9650\uff1b\u6846\u67b6\u4e5f\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u5b9a\u5236\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u5f00\u53d1\u8005\u81ea\u5b9ajwt(access token)\u4e2d\u7684claims\uff0c\u540c\u65f6\u5bf9\u5e94\u7684resource server\u4e5f\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u81ea\u5b9a\u4e49\u89e3\u6790\u914d\u7f6e\u3002"]}),"\n",(0,r.jsxs)(t.h2,{id:"\u4e8coauth2tokencustomizer",children:["\u4e8c\u3001",(0,r.jsx)(t.code,{children:"OAuth2TokenCustomizer"})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/core-model-components.html#oauth2-token-customizer",children:"\u6587\u6863\u5730\u5740"})}),"\n",(0,r.jsxs)(t.p,{children:["\u6587\u6863\u4e2d\u5bf9\u4e8e",(0,r.jsx)(t.code,{children:"OAuth2TokenCustomizer"}),"\u6709\u8fd9\u6837\u4e00\u6bb5\u63cf\u8ff0:"]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:["An ",(0,r.jsx)(t.code,{children:"OAuth2TokenCustomizer<JwtEncodingContext>"})," declared with a generic type of JwtEncodingContext (implements OAuth2TokenContext) provides the ability to customize the headers and claims of a Jwt. JwtEncodingContext.getHeaders() provides access to the JwsHeader.Builder, allowing the ability to add, replace, and remove headers. JwtEncodingContext.getClaims() provides access to the JwtClaimsSet.Builder, allowing the ability to add, replace, and remove claims."]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["\u5927\u6982\u610f\u601d\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7",(0,r.jsx)(t.code,{children:"OAuth2TokenContext"}),"\u7684\u5b9e\u73b0\u7c7b\u5bf9jwt\u7684header\u548cclaims\u90e8\u5206\u8fdb\u884c\u4fee\u6539\u3002\n\u6240\u4ee5\u5728\u8ba4\u8bc1\u670d\u52a1\u5668\u4e2d\u5b9e\u73b0",(0,r.jsx)(t.code,{children:"OAuth2TokenCustomizer"}),"\u5e76\u5c06\u7528\u6237\u7684\u6743\u9650\u4fe1\u606f\u653e\u5165jwt\u7684claims\u4e2d\uff0c\u5e76\u5c06\u5b9e\u4f8b\u6ce8\u5165IOC\u4e2d\u3002\u4ee3\u7801\u5982\u4e0b"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'/**\n * \u81ea\u5b9a\u4e49jwt\uff0c\u5c06\u6743\u9650\u4fe1\u606f\u653e\u81f3jwt\u4e2d\n *\n * @return OAuth2TokenCustomizer\u7684\u5b9e\u4f8b\n */\n@Bean\npublic OAuth2TokenCustomizer<JwtEncodingContext> oAuth2TokenCustomizer() {\n    return context -> {\n        // \u68c0\u67e5\u767b\u5f55\u7528\u6237\u4fe1\u606f\u662f\u4e0d\u662fUserDetails\uff0c\u6392\u9664\u6389\u6ca1\u6709\u7528\u6237\u53c2\u4e0e\u7684\u6d41\u7a0b\n        if (context.getPrincipal().getPrincipal() instanceof UserDetails user) {\n            // \u83b7\u53d6\u7533\u8bf7\u7684scopes\n            Set<String> scopes = context.getAuthorizedScopes();\n            // \u83b7\u53d6\u7528\u6237\u7684\u6743\u9650\n            Collection<? extends GrantedAuthority> authorities = user.getAuthorities();\n            // \u63d0\u53d6\u6743\u9650\u5e76\u8f6c\u4e3a\u5b57\u7b26\u4e32\n            Set<String> authoritySet = Optional.ofNullable(authorities).orElse(Collections.emptyList()).stream()\n                    // \u83b7\u53d6\u6743\u9650\u5b57\u7b26\u4e32\n                    .map(GrantedAuthority::getAuthority)\n                    // \u53bb\u91cd\n                    .collect(Collectors.toSet());\n\n            // \u5408\u5e76scope\u4e0e\u7528\u6237\u4fe1\u606f\n            authoritySet.addAll(scopes);\n\n            JwtClaimsSet.Builder claims = context.getClaims();\n            // \u5c06\u6743\u9650\u4fe1\u606f\u653e\u5165jwt\u7684claims\u4e2d\uff08\u4e5f\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u4ee5\u6307\u5b9a\u5b57\u7b26\u5206\u5272\u7684\u5b57\u7b26\u4e32\u653e\u5165\uff09\n            claims.claim("authorities", authoritySet);\n            // \u653e\u5165\u5176\u5b83\u81ea\u5b9a\u5185\u5bb9\n            // \u89d2\u8272\u3001\u5934\u50cf...\n        }\n    };\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:"\u8fd9\u6bb5\u4ee3\u7801\u5c06\u7533\u8bf7\u7684scope\u4e0e\u7528\u6237\u672c\u8eab\u81ea\u5e26\u7684\u6743\u9650\u5408\u5e76\u540e\u653e\u5165jwt\u4e2d\u3002"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(52918).A+"",width:"894",height:"844"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(18841).A+"",width:"1603",height:"1696"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(99728).A+"",width:"1294",height:"976"})}),"\n",(0,r.jsxs)(t.h2,{id:"\u4e09jwtauthenticationconverter",children:["\u4e09\u3001",(0,r.jsx)(t.code,{children:"JwtAuthenticationConverter"})]}),"\n",(0,r.jsxs)(t.p,{children:["\u81ea\u5b9a\u4e49token\u90e8\u5206\u5c31\u5b8c\u6210\u4e86\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u5230resource server\u90e8\u5206\uff0c\u65e9\u5728\u6700\u5f00\u59cb\u5c31\u6dfb\u52a0\u4e86resource server\u7684\u914d\u7f6e\uff0c\u5c06\u8ba4\u8bc1\u670d\u52a1\u5668\u4e5f\u5f53\u505a\u4e00\u4e2a\u8d44\u6e90\u670d\u52a1\u5668\uff0c\u6240\u4ee5\u63a5\u4e0b\u5c31\u5728\u8d44\u6e90\u670d\u52a1\u5668\u6587\u6863\u4e2d\u627e\u5230\u5173\u4e8e",(0,r.jsx)(t.code,{children:"JwtAuthenticationConverter"}),"\u7684",(0,r.jsx)(t.a,{href:"https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/jwt.html#oauth2resourceserver-jwt-authorization-extraction",children:"\u8bf4\u660e\u6587\u6863"}),"\u3002\u6587\u6863\u4e2d\u6709\u5982\u4e0b\u4e00\u6bb5\u8bf4\u660e\uff1a"]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"However, there are a number of circumstances where this default is insufficient. For example, some authorization servers don\u2019t use the scope attribute, but instead have their own custom attribute. Or, at other times, the resource server may need to adapt the attribute or a composition of attributes into internalized authorities."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"\u6b63\u597d\u5bf9\u5e94\u4e86\u4e0a\u6587\u8bf4\u7684\u81ea\u5b9a\u4e49token\uff0c\u6240\u4ee5\u6309\u7167\u793a\u4f8b\u6dfb\u52a0\u81ea\u5df1\u7684jwt\u89e3\u6790\u5668"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'/**\n * \u81ea\u5b9a\u4e49jwt\u89e3\u6790\u5668\uff0c\u8bbe\u7f6e\u89e3\u6790\u51fa\u6765\u7684\u6743\u9650\u4fe1\u606f\u7684\u524d\u7f00\u4e0e\u5728jwt\u4e2d\u7684key\n *\n * @return jwt\u89e3\u6790\u5668 JwtAuthenticationConverter\n */\n@Bean\npublic JwtAuthenticationConverter jwtAuthenticationConverter() {\n    JwtGrantedAuthoritiesConverter grantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();\n    // \u8bbe\u7f6e\u89e3\u6790\u6743\u9650\u4fe1\u606f\u7684\u524d\u7f00\uff0c\u8bbe\u7f6e\u4e3a\u7a7a\u662f\u53bb\u6389\u524d\u7f00\n    grantedAuthoritiesConverter.setAuthorityPrefix("");\n    // \u8bbe\u7f6e\u6743\u9650\u4fe1\u606f\u5728jwt claims\u4e2d\u7684key\n    grantedAuthoritiesConverter.setAuthoritiesClaimName("authorities");\n\n    JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();\n    jwtAuthenticationConverter.setJwtGrantedAuthoritiesConverter(grantedAuthoritiesConverter);\n    return jwtAuthenticationConverter;\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["\u8fd9\u91cc\u8bbe\u7f6e\u89e3\u6790jwt\u65f6\u5c06\u6743\u9650key\u8bbe\u7f6e\u4e3a\u4e0a\u6587\u4e2d\u5b58\u5165\u65f6\u7684key\uff0c\u53bb\u9664",(0,r.jsx)(t.code,{children:"SCOPE_"}),"\u524d\u7f00\u3002"]}),"\n",(0,r.jsx)(t.h2,{id:"\u56db\u6d41\u7a0b\u56fe",children:"\u56db\u3001\u6d41\u7a0b\u56fe"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(96219).A+"",width:"894",height:"844"})}),"\n",(0,r.jsx)(t.h2,{id:"\u4e94\u6d4b\u8bd5",children:"\u4e94\u3001\u6d4b\u8bd5"}),"\n",(0,r.jsx)(t.h3,{id:"1-\u67e5\u770btoken\u4e2d\u7684\u4fe1\u606f",children:"1. \u67e5\u770btoken\u4e2d\u7684\u4fe1\u606f"}),"\n",(0,r.jsxs)(t.p,{children:["\u751f\u6210\u4e00\u4e2aaccess token\uff0c\u5728",(0,r.jsx)(t.a,{href:"https://www.box3.cn/tools/jwt.html",children:"JSON Web Tokens (JWT) "}),"\u5728\u7ebf\u89e3\u5bc6\u4e2d\u89e3\u6790token\uff0c\u67e5\u770btoken\u5185\u5bb9"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(77386).A+"",width:"1178",height:"647"})}),"\n",(0,r.jsxs)(t.p,{children:["\u73b0\u5728token\u4e2d\u5df2\u7ecf\u6709\u6743\u9650\u4fe1\u606f\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u63a5\u53e3\u5e76\u8bbe\u7f6e\u9700\u8981app\u7684\u6743\u9650\uff0c\u6765\u6d4b\u8bd5\u4e0b\u89e3\u6790token\u65f6\u662f\u5426\u4f1a\u6309\u7167\u914d\u7f6e\u901a\u8fc7",(0,r.jsx)(t.code,{children:"authorities"}),"\u6765\u63d0\u53d6\u6743\u9650\u4fe1\u606f\u3002"]}),"\n",(0,r.jsx)(t.h3,{id:"2-\u6d4b\u8bd5\u63a5\u53e3",children:"2. \u6d4b\u8bd5\u63a5\u53e3"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'@GetMapping("/app")\n@PreAuthorize("hasAuthority(\'app\')")\npublic String app() {\n    return "app";\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:"\u6dfb\u52a0\u5b8c\u6210\u540e\u4f7f\u7528postman\u53d1\u8d77\u4e00\u4e2a\u8bf7\u6c42\u6d4b\u8bd5"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(37482).A+"",width:"1500",height:"487"})}),"\n",(0,r.jsx)(t.h3,{id:"3-\u65ad\u70b9\u67e5\u770b\u62e5\u6709\u7684\u6743\u9650",children:"3. \u65ad\u70b9\u67e5\u770b\u62e5\u6709\u7684\u6743\u9650"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(54788).A+"",width:"1155",height:"672"})}),"\n",(0,r.jsxs)(t.p,{children:["\u901a\u8fc7\u65ad\u70b9\u53ef\u4ee5\u770b\u5230\u4e4b\u524d\u7684\u81ea\u5b9atoken\u5185\u5bb9\u4e0e\u81ea\u5b9ajwt\u89e3\u6790\u90fd\u5df2\u7ecf\u751f\u6548\u4e86\uff0c\u5df2\u7ecf\u5c06\u6743\u9650\u4fe1\u606f\u89e3\u6790\u5230\u5f53\u524d\u7528\u6237\u4fe1\u606f\u7684",(0,r.jsx)(t.code,{children:"authorities"}),"\u4e2d\u4e86\u3002\n\u8865\u4e00\u5f20\u7528\u6237\u4fe1\u606f\u7684\u56fe\u7247"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(98399).A+"",width:"640",height:"449"})}),"\n",(0,r.jsx)(t.p,{children:"\u901a\u8fc7\u5bf9\u6bd4\u53ef\u4ee5\u66f4\u6e05\u695a\u7684\u89c2\u5bdf\u5230\u524d\u6587\u4f5c\u51fa\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\u5df2\u7ecf\u751f\u6548\u3002"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"img",src:n(98094).A+"",width:"937",height:"540"})}),"\n",(0,r.jsxs)(t.p,{children:["\u81f3\u4e8e\u8bbe\u7f6e\u7684\u89d2\u8272\u5728\u6743\u9650\u4e2d\u6709\u4e00\u4e2a ",(0,r.jsx)(t.code,{children:"ROLE_"})," \u7684\u524d\u7f00\u662f\u56e0\u4e3a",(0,r.jsx)(t.code,{children:"roles"}),"\u7684\u65b9\u6cd5\u5b9e\u9645\u4e0a\u662f\u8c03\u7528",(0,r.jsx)(t.code,{children:"authorities"}),"\u65b9\u6cd5\uff0c\u5e76\u4e14\u81ea\u52a8\u52a0\u4e0a\u8be5\u524d\u7f00\uff0c\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728\u81ea\u5df1\u5b9e\u73b0",(0,r.jsx)(t.code,{children:"loadUserByUsername"}),"\u65f6\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002"]}),"\n",(0,r.jsx)(t.h2,{id:"\u516d\u603b\u7ed3",children:"\u516d\u3001\u603b\u7ed3"}),"\n",(0,r.jsx)(t.p,{children:"\u6700\u540e\u7ecf\u8fc7\u4e24\u4e2a\u7b80\u5355\u7684\u914d\u7f6e\u5b9e\u73b0\u4e86\u81ea\u5b9a\u4e49\u7684token\u5185\u5bb9\u4e0e\u89e3\u6790\u5668\uff0c\u8fd9\u4e5f\u6b63\u662f\u6846\u67b6\u7075\u6d3b\u4e0e\u652f\u6301\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u7684\u4f53\u73b0\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e9b\u64cd\u4f5c\u7684\u4ee3\u7801\u90e8\u5206\u90fd\u6bd4\u8f83\u5c11\uff0c\u591a\u7684\u662f\u7406\u8bba\u90e8\u5206\uff0c\u7ed3\u5408\u6587\u6863\u4e0e\u6e90\u7801\u80fd\u591f\u66f4\u597d\u7684\u7406\u89e3\u6846\u67b6\uff0c\u6587\u6863\u4e2d\u5bf9\u4e8e\u67d0\u4e9b\u7c7b\u7684\u5e94\u7528\u4e00\u822c\u4f1a\u6709\u8be6\u7ec6\u7684\u8bf4\u660e\u4e0e\u793a\u4f8b\u5b58\u5728\u3002"}),"\n",(0,r.jsx)(t.p,{children:"\u5982\u679c\u6709\u95ee\u9898\u8bf7\u5728\u8bc4\u8bba\u533a\u6307\u51fa\uff0c\u8c22\u8c22"}),"\n",(0,r.jsxs)(t.h3,{id:"1-authorizationconfigjava",children:["1. ",(0,r.jsx)(t.code,{children:"AuthorizationConfig.java"})]}),"\n",(0,r.jsxs)(t.p,{children:["\u6700\u540e\u5728\u9644\u4e00\u4e0b",(0,r.jsx)(t.code,{children:"AuthorizationConfig.java"}),"\u7684\u4ee3\u7801"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'package com.example.config;\n\nimport com.example.authorization.DeviceClientAuthenticationConverter;\nimport com.example.authorization.DeviceClientAuthenticationProvider;\nimport com.example.util.SecurityUtils;\nimport com.nimbusds.jose.jwk.JWKSet;\nimport com.nimbusds.jose.jwk.RSAKey;\nimport com.nimbusds.jose.jwk.source.ImmutableJWKSet;\nimport com.nimbusds.jose.jwk.source.JWKSource;\nimport com.nimbusds.jose.proc.SecurityContext;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.http.MediaType;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.security.access.annotation.Secured;\nimport org.springframework.security.config.Customizer;\nimport org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.oauth2.core.AuthorizationGrantType;\nimport org.springframework.security.oauth2.core.ClientAuthenticationMethod;\nimport org.springframework.security.oauth2.core.oidc.OidcScopes;\nimport org.springframework.security.oauth2.jwt.JwtClaimsSet;\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\nimport org.springframework.security.oauth2.server.authorization.JdbcOAuth2AuthorizationConsentService;\nimport org.springframework.security.oauth2.server.authorization.JdbcOAuth2AuthorizationService;\nimport org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationConsentService;\nimport org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService;\nimport org.springframework.security.oauth2.server.authorization.client.JdbcRegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClient;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.config.annotation.web.configuration.OAuth2AuthorizationServerConfiguration;\nimport org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer;\nimport org.springframework.security.oauth2.server.authorization.settings.AuthorizationServerSettings;\nimport org.springframework.security.oauth2.server.authorization.settings.ClientSettings;\nimport org.springframework.security.oauth2.server.authorization.token.JwtEncodingContext;\nimport org.springframework.security.oauth2.server.authorization.token.OAuth2TokenCustomizer;\nimport org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;\nimport org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\nimport org.springframework.security.web.SecurityFilterChain;\nimport org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint;\nimport org.springframework.security.web.util.matcher.MediaTypeRequestMatcher;\n\nimport java.security.KeyPair;\nimport java.security.KeyPairGenerator;\nimport java.security.interfaces.RSAPrivateKey;\nimport java.security.interfaces.RSAPublicKey;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Optional;\nimport java.util.Set;\nimport java.util.UUID;\nimport java.util.stream.Collectors;\n\n/**\n * \u8ba4\u8bc1\u914d\u7f6e\n * {@link EnableMethodSecurity} \u5f00\u542f\u5168\u5c40\u65b9\u6cd5\u8ba4\u8bc1\uff0c\u542f\u7528JSR250\u6ce8\u89e3\u652f\u6301\uff0c\u542f\u7528\u6ce8\u89e3 {@link Secured} \u652f\u6301\uff0c\n * \u5728Spring Security 6.0\u7248\u672c\u4e2d\u5c06@Configuration\u6ce8\u89e3\u4ece@EnableWebSecurity, @EnableMethodSecurity, @EnableGlobalMethodSecurity\n * \u548c @EnableGlobalAuthentication \u4e2d\u79fb\u9664\uff0c\u4f7f\u7528\u8fd9\u4e9b\u6ce8\u89e3\u9700\u624b\u52a8\u6dfb\u52a0 @Configuration \u6ce8\u89e3\n * {@link EnableWebSecurity} \u6ce8\u89e3\u6709\u4e24\u4e2a\u4f5c\u7528:\n * 1. \u52a0\u8f7d\u4e86WebSecurityConfiguration\u914d\u7f6e\u7c7b, \u914d\u7f6e\u5b89\u5168\u8ba4\u8bc1\u7b56\u7565\u3002\n * 2. \u52a0\u8f7d\u4e86AuthenticationConfiguration, \u914d\u7f6e\u4e86\u8ba4\u8bc1\u4fe1\u606f\u3002\n *\n * @author vains\n */\n@Configuration\n@EnableWebSecurity\n@EnableMethodSecurity(jsr250Enabled = true, securedEnabled = true)\npublic class AuthorizationConfig {\n\n    private static final String CUSTOM_CONSENT_PAGE_URI = "/oauth2/consent";\n\n    /**\n     * \u914d\u7f6e\u7aef\u70b9\u7684\u8fc7\u6ee4\u5668\u94fe\n     *\n     * @param http spring security\u6838\u5fc3\u914d\u7f6e\u7c7b\n     * @return \u8fc7\u6ee4\u5668\u94fe\n     * @throws Exception \u629b\u51fa\n     */\n    @Bean\n    public SecurityFilterChain authorizationServerSecurityFilterChain(HttpSecurity http,\n                                                                      RegisteredClientRepository registeredClientRepository,\n                                                                      AuthorizationServerSettings authorizationServerSettings) throws Exception {\n        // \u914d\u7f6e\u9ed8\u8ba4\u7684\u8bbe\u7f6e\uff0c\u5ffd\u7565\u8ba4\u8bc1\u7aef\u70b9\u7684csrf\u6821\u9a8c\n        OAuth2AuthorizationServerConfiguration.applyDefaultSecurity(http);\n\n        // \u65b0\u5efa\u8bbe\u5907\u7801converter\u548cprovider\n        DeviceClientAuthenticationConverter deviceClientAuthenticationConverter =\n                new DeviceClientAuthenticationConverter(\n                        authorizationServerSettings.getDeviceAuthorizationEndpoint());\n        DeviceClientAuthenticationProvider deviceClientAuthenticationProvider =\n                new DeviceClientAuthenticationProvider(registeredClientRepository);\n\n\n        http.getConfigurer(OAuth2AuthorizationServerConfigurer.class)\n                // \u5f00\u542fOpenID Connect 1.0\u534f\u8bae\u76f8\u5173\u7aef\u70b9\n                .oidc(Customizer.withDefaults())\n                // \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7528\u6237\u786e\u8ba4\u6388\u6743\u9875\n                .authorizationEndpoint(authorizationEndpoint -> authorizationEndpoint.consentPage(CUSTOM_CONSENT_PAGE_URI))\n                // \u8bbe\u7f6e\u8bbe\u5907\u7801\u7528\u6237\u9a8c\u8bc1url(\u81ea\u5b9a\u4e49\u7528\u6237\u9a8c\u8bc1\u9875)\n                .deviceAuthorizationEndpoint(deviceAuthorizationEndpoint ->\n                        deviceAuthorizationEndpoint.verificationUri("/activate")\n                )\n                // \u8bbe\u7f6e\u9a8c\u8bc1\u8bbe\u5907\u7801\u7528\u6237\u786e\u8ba4\u9875\u9762\n                .deviceVerificationEndpoint(deviceVerificationEndpoint ->\n                        deviceVerificationEndpoint.consentPage(CUSTOM_CONSENT_PAGE_URI)\n                )\n                .clientAuthentication(clientAuthentication ->\n                        // \u5ba2\u6237\u7aef\u8ba4\u8bc1\u6dfb\u52a0\u8bbe\u5907\u7801\u7684converter\u548cprovider\n                        clientAuthentication\n                                .authenticationConverter(deviceClientAuthenticationConverter)\n                                .authenticationProvider(deviceClientAuthenticationProvider)\n                );\n        http\n                // \u5f53\u672a\u767b\u5f55\u65f6\u8bbf\u95ee\u8ba4\u8bc1\u7aef\u70b9\u65f6\u91cd\u5b9a\u5411\u81f3login\u9875\u9762\n                .exceptionHandling((exceptions) -> exceptions\n                        .defaultAuthenticationEntryPointFor(\n                                new LoginUrlAuthenticationEntryPoint("/login"),\n                                new MediaTypeRequestMatcher(MediaType.TEXT_HTML)\n                        )\n                )\n                // \u5904\u7406\u4f7f\u7528access token\u8bbf\u95ee\u7528\u6237\u4fe1\u606f\u7aef\u70b9\u548c\u5ba2\u6237\u7aef\u6ce8\u518c\u7aef\u70b9\n                .oauth2ResourceServer((resourceServer) -> resourceServer\n                        .jwt(Customizer.withDefaults()));\n\n        return http.build();\n    }\n\n    /**\n     * \u914d\u7f6e\u8ba4\u8bc1\u76f8\u5173\u7684\u8fc7\u6ee4\u5668\u94fe\n     *\n     * @param http spring security\u6838\u5fc3\u914d\u7f6e\u7c7b\n     * @return \u8fc7\u6ee4\u5668\u94fe\n     * @throws Exception \u629b\u51fa\n     */\n    @Bean\n    public SecurityFilterChain defaultSecurityFilterChain(HttpSecurity http) throws Exception {\n        http.authorizeHttpRequests((authorize) -> authorize\n                        // \u653e\u884c\u9759\u6001\u8d44\u6e90\n                        .requestMatchers("/assets/**", "/webjars/**", "/login").permitAll()\n                        .anyRequest().authenticated()\n                )\n                // \u6307\u5b9a\u767b\u5f55\u9875\u9762\n                .formLogin(formLogin ->\n                        formLogin.loginPage("/login")\n                );\n        // \u6dfb\u52a0BearerTokenAuthenticationFilter\uff0c\u5c06\u8ba4\u8bc1\u670d\u52a1\u5f53\u505a\u4e00\u4e2a\u8d44\u6e90\u670d\u52a1\uff0c\u89e3\u6790\u8bf7\u6c42\u5934\u4e2d\u7684token\n        http.oauth2ResourceServer((resourceServer) -> resourceServer\n                .jwt(Customizer.withDefaults())\n                .accessDeniedHandler(SecurityUtils::exceptionHandler)\n                .authenticationEntryPoint(SecurityUtils::exceptionHandler)\n        );\n\n        return http.build();\n    }\n\n    /**\n     * \u81ea\u5b9a\u4e49jwt\uff0c\u5c06\u6743\u9650\u4fe1\u606f\u653e\u81f3jwt\u4e2d\n     *\n     * @return OAuth2TokenCustomizer\u7684\u5b9e\u4f8b\n     */\n    @Bean\n    public OAuth2TokenCustomizer<JwtEncodingContext> oAuth2TokenCustomizer() {\n        return context -> {\n            // \u68c0\u67e5\u767b\u5f55\u7528\u6237\u4fe1\u606f\u662f\u4e0d\u662fUserDetails\uff0c\u6392\u9664\u6389\u6ca1\u6709\u7528\u6237\u53c2\u4e0e\u7684\u6d41\u7a0b\n            if (context.getPrincipal().getPrincipal() instanceof UserDetails user) {\n                // \u83b7\u53d6\u7533\u8bf7\u7684scopes\n                Set<String> scopes = context.getAuthorizedScopes();\n                // \u83b7\u53d6\u7528\u6237\u7684\u6743\u9650\n                Collection<? extends GrantedAuthority> authorities = user.getAuthorities();\n                // \u63d0\u53d6\u6743\u9650\u5e76\u8f6c\u4e3a\u5b57\u7b26\u4e32\n                Set<String> authoritySet = Optional.ofNullable(authorities).orElse(Collections.emptyList()).stream()\n                        // \u83b7\u53d6\u6743\u9650\u5b57\u7b26\u4e32\n                        .map(GrantedAuthority::getAuthority)\n                        // \u53bb\u91cd\n                        .collect(Collectors.toSet());\n\n                // \u5408\u5e76scope\u4e0e\u7528\u6237\u4fe1\u606f\n                authoritySet.addAll(scopes);\n\n                JwtClaimsSet.Builder claims = context.getClaims();\n                // \u5c06\u6743\u9650\u4fe1\u606f\u653e\u5165jwt\u7684claims\u4e2d\uff08\u4e5f\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u4ee5\u6307\u5b9a\u5b57\u7b26\u5206\u5272\u7684\u5b57\u7b26\u4e32\u653e\u5165\uff09\n                claims.claim("authorities", authoritySet);\n                // \u653e\u5165\u5176\u5b83\u81ea\u5b9a\u5185\u5bb9\n                // \u89d2\u8272\u3001\u5934\u50cf...\n            }\n        };\n    }\n\n    /**\n     * \u81ea\u5b9a\u4e49jwt\u89e3\u6790\u5668\uff0c\u8bbe\u7f6e\u89e3\u6790\u51fa\u6765\u7684\u6743\u9650\u4fe1\u606f\u7684\u524d\u7f00\u4e0e\u5728jwt\u4e2d\u7684key\n     *\n     * @return jwt\u89e3\u6790\u5668 JwtAuthenticationConverter\n     */\n    @Bean\n    public JwtAuthenticationConverter jwtAuthenticationConverter() {\n        JwtGrantedAuthoritiesConverter grantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();\n        // \u8bbe\u7f6e\u89e3\u6790\u6743\u9650\u4fe1\u606f\u7684\u524d\u7f00\uff0c\u8bbe\u7f6e\u4e3a\u7a7a\u662f\u53bb\u6389\u524d\u7f00\n        grantedAuthoritiesConverter.setAuthorityPrefix("");\n        // \u8bbe\u7f6e\u6743\u9650\u4fe1\u606f\u5728jwt claims\u4e2d\u7684key\n        grantedAuthoritiesConverter.setAuthoritiesClaimName("authorities");\n\n        JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();\n        jwtAuthenticationConverter.setJwtGrantedAuthoritiesConverter(grantedAuthoritiesConverter);\n        return jwtAuthenticationConverter;\n    }\n\n    /**\n     * \u914d\u7f6e\u5bc6\u7801\u89e3\u6790\u5668\uff0c\u4f7f\u7528BCrypt\u7684\u65b9\u5f0f\u5bf9\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u548c\u9a8c\u8bc1\n     *\n     * @return BCryptPasswordEncoder\n     */\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n    /**\n     * \u914d\u7f6e\u5ba2\u6237\u7aefRepository\n     *\n     * @param jdbcTemplate    db \u6570\u636e\u6e90\u4fe1\u606f\n     * @param passwordEncoder \u5bc6\u7801\u89e3\u6790\u5668\n     * @return \u57fa\u4e8e\u6570\u636e\u5e93\u7684repository\n     */\n    @Bean\n    public RegisteredClientRepository registeredClientRepository(JdbcTemplate jdbcTemplate, PasswordEncoder passwordEncoder) {\n        RegisteredClient registeredClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                // \u5ba2\u6237\u7aefid\n                .clientId("messaging-client")\n                // \u5ba2\u6237\u7aef\u79d8\u94a5\uff0c\u4f7f\u7528\u5bc6\u7801\u89e3\u6790\u5668\u52a0\u5bc6\n                .clientSecret(passwordEncoder.encode("123456"))\n                // \u5ba2\u6237\u7aef\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u57fa\u4e8e\u8bf7\u6c42\u5934\u7684\u8ba4\u8bc1\n                .clientAuthenticationMethod(ClientAuthenticationMethod.CLIENT_SECRET_BASIC)\n                // \u914d\u7f6e\u8d44\u6e90\u670d\u52a1\u5668\u4f7f\u7528\u8be5\u5ba2\u6237\u7aef\u83b7\u53d6\u6388\u6743\u65f6\u652f\u6301\u7684\u65b9\u5f0f\n                .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                .authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS)\n                // \u6388\u6743\u7801\u6a21\u5f0f\u56de\u8c03\u5730\u5740\uff0coauth2.1\u5df2\u6539\u4e3a\u7cbe\u51c6\u5339\u914d\uff0c\u4e0d\u80fd\u53ea\u8bbe\u7f6e\u57df\u540d\uff0c\u5e76\u4e14\u5c4f\u853d\u4e86localhost\uff0c\u672c\u673a\u4f7f\u7528127.0.0.1\u8bbf\u95ee\n                .redirectUri("http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc")\n                .redirectUri("https://www.baidu.com")\n                // \u8be5\u5ba2\u6237\u7aef\u7684\u6388\u6743\u8303\u56f4\uff0cOPENID\u4e0ePROFILE\u662fIdToken\u7684scope\uff0c\u83b7\u53d6\u6388\u6743\u65f6\u8bf7\u6c42OPENID\u7684scope\u65f6\u8ba4\u8bc1\u670d\u52a1\u4f1a\u8fd4\u56deIdToken\n                .scope(OidcScopes.OPENID)\n                .scope(OidcScopes.PROFILE)\n                // \u81ea\u5b9ascope\n                .scope("message.read")\n                .scope("message.write")\n                // \u5ba2\u6237\u7aef\u8bbe\u7f6e\uff0c\u8bbe\u7f6e\u7528\u6237\u9700\u8981\u786e\u8ba4\u6388\u6743\n                .clientSettings(ClientSettings.builder().requireAuthorizationConsent(true).build())\n                .build();\n\n        // \u57fa\u4e8edb\u5b58\u50a8\u5ba2\u6237\u7aef\uff0c\u8fd8\u6709\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u5b9e\u73b0 InMemoryRegisteredClientRepository\n        JdbcRegisteredClientRepository registeredClientRepository = new JdbcRegisteredClientRepository(jdbcTemplate);\n\n        // \u521d\u59cb\u5316\u5ba2\u6237\u7aef\n        RegisteredClient repositoryByClientId = registeredClientRepository.findByClientId(registeredClient.getClientId());\n        if (repositoryByClientId == null) {\n            registeredClientRepository.save(registeredClient);\n        }\n        // \u8bbe\u5907\u7801\u6388\u6743\u5ba2\u6237\u7aef\n        RegisteredClient deviceClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                .clientId("device-message-client")\n                // \u516c\u5171\u5ba2\u6237\u7aef\n                .clientAuthenticationMethod(ClientAuthenticationMethod.NONE)\n                // \u8bbe\u5907\u7801\u6388\u6743\n                .authorizationGrantType(AuthorizationGrantType.DEVICE_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                // \u81ea\u5b9ascope\n                .scope("message.read")\n                .scope("message.write")\n                .build();\n        RegisteredClient byClientId = registeredClientRepository.findByClientId(deviceClient.getClientId());\n        if (byClientId == null) {\n            registeredClientRepository.save(deviceClient);\n        }\n\n        // PKCE\u5ba2\u6237\u7aef\n        RegisteredClient pkceClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                .clientId("pkce-message-client")\n                // \u516c\u5171\u5ba2\u6237\u7aef\n                .clientAuthenticationMethod(ClientAuthenticationMethod.NONE)\n                // \u6388\u6743\u7801\u6a21\u5f0f\uff0c\u56e0\u4e3a\u662f\u6269\u5c55\u6388\u6743\u7801\u6d41\u7a0b\uff0c\u6240\u4ee5\u6d41\u7a0b\u8fd8\u662f\u6388\u6743\u7801\u7684\u6d41\u7a0b\uff0c\u6539\u53d8\u7684\u53ea\u662f\u53c2\u6570\n                .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                // \u6388\u6743\u7801\u6a21\u5f0f\u56de\u8c03\u5730\u5740\uff0coauth2.1\u5df2\u6539\u4e3a\u7cbe\u51c6\u5339\u914d\uff0c\u4e0d\u80fd\u53ea\u8bbe\u7f6e\u57df\u540d\uff0c\u5e76\u4e14\u5c4f\u853d\u4e86localhost\uff0c\u672c\u673a\u4f7f\u7528127.0.0.1\u8bbf\u95ee\n                .redirectUri("http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc")\n                .clientSettings(ClientSettings.builder().requireProofKey(Boolean.TRUE).build())\n                // \u81ea\u5b9ascope\n                .scope("message.read")\n                .scope("message.write")\n                .build();\n        RegisteredClient findPkceClient = registeredClientRepository.findByClientId(pkceClient.getClientId());\n        if (findPkceClient == null) {\n            registeredClientRepository.save(pkceClient);\n        }\n        return registeredClientRepository;\n    }\n\n    /**\n     * \u914d\u7f6e\u57fa\u4e8edb\u7684oauth2\u7684\u6388\u6743\u7ba1\u7406\u670d\u52a1\n     *\n     * @param jdbcTemplate               db\u6570\u636e\u6e90\u4fe1\u606f\n     * @param registeredClientRepository \u4e0a\u8fb9\u6ce8\u5165\u7684\u5ba2\u6237\u7aefrepository\n     * @return JdbcOAuth2AuthorizationService\n     */\n    @Bean\n    public OAuth2AuthorizationService authorizationService(JdbcTemplate jdbcTemplate, RegisteredClientRepository registeredClientRepository) {\n        // \u57fa\u4e8edb\u7684oauth2\u8ba4\u8bc1\u670d\u52a1\uff0c\u8fd8\u6709\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u670d\u52a1\u5b9e\u73b0InMemoryOAuth2AuthorizationService\n        return new JdbcOAuth2AuthorizationService(jdbcTemplate, registeredClientRepository);\n    }\n\n    /**\n     * \u914d\u7f6e\u57fa\u4e8edb\u7684\u6388\u6743\u786e\u8ba4\u7ba1\u7406\u670d\u52a1\n     *\n     * @param jdbcTemplate               db\u6570\u636e\u6e90\u4fe1\u606f\n     * @param registeredClientRepository \u5ba2\u6237\u7aefrepository\n     * @return JdbcOAuth2AuthorizationConsentService\n     */\n    @Bean\n    public OAuth2AuthorizationConsentService authorizationConsentService(JdbcTemplate jdbcTemplate, RegisteredClientRepository registeredClientRepository) {\n        // \u57fa\u4e8edb\u7684\u6388\u6743\u786e\u8ba4\u7ba1\u7406\u670d\u52a1\uff0c\u8fd8\u6709\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u670d\u52a1\u5b9e\u73b0InMemoryOAuth2AuthorizationConsentService\n        return new JdbcOAuth2AuthorizationConsentService(jdbcTemplate, registeredClientRepository);\n    }\n\n    /**\n     * \u914d\u7f6ejwk\u6e90\uff0c\u4f7f\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\uff0c\u516c\u5f00\u7528\u4e8e\u68c0\u7d22\u5339\u914d\u6307\u5b9a\u9009\u62e9\u5668\u7684JWK\u7684\u65b9\u6cd5\n     *\n     * @return JWKSource\n     */\n    @Bean\n    public JWKSource<SecurityContext> jwkSource() {\n        KeyPair keyPair = generateRsaKey();\n        RSAPublicKey publicKey = (RSAPublicKey) keyPair.getPublic();\n        RSAPrivateKey privateKey = (RSAPrivateKey) keyPair.getPrivate();\n        RSAKey rsaKey = new RSAKey.Builder(publicKey)\n                .privateKey(privateKey)\n                .keyID(UUID.randomUUID().toString())\n                .build();\n        JWKSet jwkSet = new JWKSet(rsaKey);\n        return new ImmutableJWKSet<>(jwkSet);\n    }\n\n    /**\n     * \u751f\u6210rsa\u5bc6\u94a5\u5bf9\uff0c\u63d0\u4f9b\u7ed9jwk\n     *\n     * @return \u5bc6\u94a5\u5bf9\n     */\n    private static KeyPair generateRsaKey() {\n        KeyPair keyPair;\n        try {\n            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");\n            keyPairGenerator.initialize(2048);\n            keyPair = keyPairGenerator.generateKeyPair();\n        } catch (Exception ex) {\n            throw new IllegalStateException(ex);\n        }\n        return keyPair;\n    }\n\n    /**\n     * \u914d\u7f6ejwt\u89e3\u6790\u5668\n     *\n     * @param jwkSource jwk\u6e90\n     * @return JwtDecoder\n     */\n    @Bean\n    public JwtDecoder jwtDecoder(JWKSource<SecurityContext> jwkSource) {\n        return OAuth2AuthorizationServerConfiguration.jwtDecoder(jwkSource);\n    }\n\n    /**\n     * \u6dfb\u52a0\u8ba4\u8bc1\u670d\u52a1\u5668\u914d\u7f6e\uff0c\u8bbe\u7f6ejwt\u7b7e\u53d1\u8005\u3001\u9ed8\u8ba4\u7aef\u70b9\u8bf7\u6c42\u5730\u5740\u7b49\n     *\n     * @return AuthorizationServerSettings\n     */\n    @Bean\n    public AuthorizationServerSettings authorizationServerSettings() {\n        return AuthorizationServerSettings.builder().build();\n    }\n\n    /**\n     * \u5148\u6682\u65f6\u914d\u7f6e\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u7528\u6237\uff0c\u6846\u67b6\u5728\u7528\u6237\u8ba4\u8bc1\u65f6\u4f1a\u9ed8\u8ba4\u8c03\u7528\n     * {@link UserDetailsService#loadUserByUsername(String)} \u65b9\u6cd5\u6839\u636e\n     * \u8d26\u53f7\u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff0c\u4e00\u822c\u662f\u91cd\u5199\u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5df1\u7684\u903b\u8f91\n     *\n     * @param passwordEncoder \u5bc6\u7801\u89e3\u6790\u5668\n     * @return UserDetailsService\n     */\n    @Bean\n    public UserDetailsService users(PasswordEncoder passwordEncoder) {\n        UserDetails user = User.withUsername("admin")\n                .password(passwordEncoder.encode("123456"))\n                .roles("admin", "normal", "unAuthentication")\n                .authorities("app", "web", "/test2", "/test3")\n                .build();\n        return new InMemoryUserDetailsManager(user);\n    }\n\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},52918:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/6-1-0dc3139bd9a4ba16a458414318dbe6f3.awebp"},18841:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/6-2-4bbae4e88bcda7420b68b56c8a460661.awebp"},99728:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/6-3-eb48c20ebd45c90e16bd6778daffa1b6.awebp"},96219:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/6-4-0dc3139bd9a4ba16a458414318dbe6f3.awebp"},77386:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/6-5-78d032fcf2de50e8e88176063487536d.awebp"},37482:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/6-6-67c55371e85bb8b8192ec840b228d0c8.awebp"},54788:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/6-7-d0c299c5e8c4fd2cc9830ef3fb1c2942.awebp"},98399:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/6-8-9cb70126727f74a75829925ed65943a0.awebp"},98094:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/6-9-3aff0902907c588b9435a1ea64b034e4.awebp"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var r=n(96540);const i={},o=r.createContext(i);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);