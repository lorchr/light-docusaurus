"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[598],{3905:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>m});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function l(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?l(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),u=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},c=function(e){var r=u(e.components);return t.createElement(s.Provider,{value:r},e.children)},d="mdxType",v={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(n),p=a,m=d["".concat(s,".").concat(p)]||d[p]||v[p]||l;return n?t.createElement(m,i(i({ref:r},c),{},{components:n})):t.createElement(m,i({ref:r},c))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=p;var o={};for(var s in r)hasOwnProperty.call(r,s)&&(o[s]=r[s]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6553:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>v,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var t=n(7462),a=(n(7294),n(3905));const l={},i=void 0,o={unversionedId:"rocketmq/Rocketmq-timer-task",id:"rocketmq/Rocketmq-timer-task",title:"Rocketmq-timer-task",description:"- 40 \u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u5e26\u4f60\u7406\u89e3 RocketMQ \u8bbe\u8ba1\u7cbe\u9ad3\uff01",source:"@site/middleware/rocketmq/Rocketmq-timer-task.md",sourceDirName:"rocketmq",slug:"/rocketmq/Rocketmq-timer-task",permalink:"/light-docusaurus/middleware/rocketmq/Rocketmq-timer-task",draft:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/middleware/rocketmq/Rocketmq-timer-task.md",tags:[],version:"current",lastUpdatedBy:"liuhui",lastUpdatedAt:1697531923,formattedLastUpdatedAt:"2023\u5e7410\u670817\u65e5",frontMatter:{}},s={},u=[{value:"1 \u67b6\u6784\u56de\u987e",id:"1-\u67b6\u6784\u56de\u987e",level:2},{value:"2 Producer \u548c Consumer",id:"2-producer-\u548c-consumer",level:2},{value:"2.1 \u83b7\u53d6 NameServer \u5730\u5740",id:"21-\u83b7\u53d6-nameserver-\u5730\u5740",level:3},{value:"2.2 \u66f4\u65b0\u8def\u7531\u4fe1\u606f",id:"22-\u66f4\u65b0\u8def\u7531\u4fe1\u606f",level:3},{value:"2.3 \u5411 Broker \u53d1\u9001\u5fc3\u8df3",id:"23-\u5411-broker-\u53d1\u9001\u5fc3\u8df3",level:3},{value:"2.4 \u6301\u4e45\u5316 Offset",id:"24-\u6301\u4e45\u5316-offset",level:3},{value:"2.5 \u8c03\u6574\u6838\u5fc3\u7ebf\u7a0b\u6570",id:"25-\u8c03\u6574\u6838\u5fc3\u7ebf\u7a0b\u6570",level:3},{value:"2.6 \u5931\u6548\u8fc7\u671f\u8bf7\u6c42",id:"26-\u5931\u6548\u8fc7\u671f\u8bf7\u6c42",level:3},{value:"2.7 \u751f\u4ea7\u8005",id:"27-\u751f\u4ea7\u8005",level:3},{value:"2.7.1 \u6027\u80fd\u8bb0\u5f55",id:"271-\u6027\u80fd\u8bb0\u5f55",level:4},{value:"2.8 \u6d88\u8d39\u8005",id:"28-\u6d88\u8d39\u8005",level:3},{value:"2.8.1 MessageQueue \u52a0\u9501",id:"281-messagequeue-\u52a0\u9501",level:4},{value:"2.8.2 \u6027\u80fd\u5feb\u7167",id:"282-\u6027\u80fd\u5feb\u7167",level:4},{value:"2.8.3 \u6e05\u9664\u8fc7\u671f\u6d88\u606f",id:"283-\u6e05\u9664\u8fc7\u671f\u6d88\u606f",level:4},{value:"2.8.4 \u6e05\u9664\u8fc7\u671f\u6d88\u606f",id:"284-\u6e05\u9664\u8fc7\u671f\u6d88\u606f",level:4},{value:"3 Broker",id:"3-broker",level:2},{value:"3.1 \u72b6\u6001\u91c7\u6837",id:"31-\u72b6\u6001\u91c7\u6837",level:3},{value:"3.2 \u8bb0\u5f55\u6d88\u606f\u5ef6\u65f6",id:"32-\u8bb0\u5f55\u6d88\u606f\u5ef6\u65f6",level:3},{value:"3.3 \u6301\u4e45\u5316\u6570\u636e",id:"33-\u6301\u4e45\u5316\u6570\u636e",level:3},{value:"3.4 \u5931\u6548\u8fc7\u671f\u8bf7\u6c42",id:"34-\u5931\u6548\u8fc7\u671f\u8bf7\u6c42",level:3},{value:"3.5 \u8fc7\u6ee4\u670d\u52a1",id:"35-\u8fc7\u6ee4\u670d\u52a1",level:3},{value:"3.6 \u8bb0\u5f55\u6d88\u606f\u603b\u91cf",id:"36-\u8bb0\u5f55\u6d88\u606f\u603b\u91cf",level:3},{value:"3.7 \u6301\u4e45\u5316 Offset",id:"37-\u6301\u4e45\u5316-offset",level:3},{value:"3.8 \u6301\u4e45\u5316\u8fc7\u6ee4\u53c2\u6570",id:"38-\u6301\u4e45\u5316\u8fc7\u6ee4\u53c2\u6570",level:3},{value:"3.9 Broker \u81ea\u6211\u4fdd\u62a4",id:"39-broker-\u81ea\u6211\u4fdd\u62a4",level:3},{value:"3.10 Broker \u6253\u5370\u6c34\u4f4d",id:"310-broker-\u6253\u5370\u6c34\u4f4d",level:3},{value:"3.11 Broker \u6253\u5370 Offset \u5dee",id:"311-broker-\u6253\u5370-offset-\u5dee",level:3},{value:"3.12 \u83b7\u53d6 NameServer \u5730\u5740",id:"312-\u83b7\u53d6-nameserver-\u5730\u5740",level:3},{value:"3.13 \u6253\u5370\u4e3b\u4ece\u504f\u79fb\u91cf\u5dee\u8ddd",id:"313-\u6253\u5370\u4e3b\u4ece\u504f\u79fb\u91cf\u5dee\u8ddd",level:3},{value:"3.14 \u5411 NameServer \u6ce8\u518c",id:"314-\u5411-nameserver-\u6ce8\u518c",level:3},{value:"3.15 \u540c\u6b65 Slave",id:"315-\u540c\u6b65-slave",level:3},{value:"3.16 \u5220\u9664\u8fc7\u671f\u6587\u4ef6",id:"316-\u5220\u9664\u8fc7\u671f\u6587\u4ef6",level:3},{value:"3.17 \u6587\u4ef6\u5927\u5c0f\u68c0\u67e5",id:"317-\u6587\u4ef6\u5927\u5c0f\u68c0\u67e5",level:3},{value:"3.18 \u4fdd\u5b58\u5806\u6808\u6620\u5c04",id:"318-\u4fdd\u5b58\u5806\u6808\u6620\u5c04",level:3},{value:"3.19 \u68c0\u67e5\u7269\u7406\u78c1\u76d8",id:"319-\u68c0\u67e5\u7269\u7406\u78c1\u76d8",level:3},{value:"3.20 \u6301\u4e45\u5316\u5ef6\u65f6\u6d88\u606f\u504f\u79fb\u91cf",id:"320-\u6301\u4e45\u5316\u5ef6\u65f6\u6d88\u606f\u504f\u79fb\u91cf",level:3},{value:"3.21 \u5173\u95ed\u5f02\u5e38\u8fde\u63a5",id:"321-\u5173\u95ed\u5f02\u5e38\u8fde\u63a5",level:3},{value:"3.22 \u6e05\u7406\u8fc7\u671f\u6d88\u606f",id:"322-\u6e05\u7406\u8fc7\u671f\u6d88\u606f",level:3},{value:"4 NameServer",id:"4-nameserver",level:2},{value:"4.1 \u68c0\u67e5\u8fc7\u671f Broker",id:"41-\u68c0\u67e5\u8fc7\u671f-broker",level:3},{value:"4.2 \u6253\u5370\u914d\u7f6e",id:"42-\u6253\u5370\u914d\u7f6e",level:3},{value:"5 \u603b\u7ed3",id:"5-\u603b\u7ed3",level:2}],c={toc:u},d="wrapper";function v(e){let{components:r,...n}=e;return(0,a.kt)(d,(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://mp.weixin.qq.com/s/tgVUcBMpRMTBr5rCzmUNWA"},"40 \u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u5e26\u4f60\u7406\u89e3 RocketMQ \u8bbe\u8ba1\u7cbe\u9ad3\uff01"))),(0,a.kt)("p",null,"\u4eca\u5929\u6765\u5206\u4eab RocketMQ \u7684\u5b9a\u65f6\u4efb\u52a1\u3002\u901a\u8fc7\u8fd9\u4e9b\u5b9a\u65f6\u4efb\u52a1\uff0c\u80fd\u8ba9\u6211\u4eec\u66f4\u52a0\u7406\u89e3 RocketMQ \u7684\u6d88\u606f\u5904\u7406\u673a\u5236\u548c\u8bbe\u8ba1\u7406\u5ff5\u3002"),(0,a.kt)("p",null,"\u4ece RocketMQ 4.9.4 \u7684\u6e90\u4ee3\u7801\u4e0a\u770b\uff0cRocketMQ \u7684\u5b9a\u65f6\u4efb\u52a1\u6709\u5f88\u591a\uff0c\u4eca\u5929\u4e3b\u8981\u8bb2\u89e3\u4e00\u4e9b\u6838\u5fc3\u7684\u5b9a\u65f6\u4efb\u52a1\u3002"),(0,a.kt)("h2",{id:"1-\u67b6\u6784\u56de\u987e"},"1 \u67b6\u6784\u56de\u987e"),(0,a.kt)("p",null,"\u9996\u5148\u518d\u6765\u56de\u987e\u4e00\u4e0b RocketMQ \u7684\u67b6\u6784\u56fe\uff1a"),(0,a.kt)("p",null,"\u56fe\u7247\nName Server \u96c6\u7fa4\u90e8\u7f72\uff0c\u4f46\u662f\u8282\u70b9\u4e4b\u95f4\u5e76\u4e0d\u4f1a\u540c\u6b65\u6570\u636e\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u4fdd\u5b58\u5b8c\u6574\u7684\u6570\u636e\u3002\u56e0\u6b64\u5355\u4e2a\u8282\u70b9\u6302\u6389\uff0c\u5e76\u4e0d\u4f1a\u5bf9\u96c6\u7fa4\u4ea7\u751f\u5f71\u54cd\u3002"),(0,a.kt)("p",null,"Broker \u53ef\u4ee5\u91c7\u7528\u4e3b\u4ece\u96c6\u7fa4\u90e8\u7f72\uff0c\u5b9e\u73b0\u591a\u526f\u672c\u5b58\u50a8\u548c\u9ad8\u53ef\u7528\u3002\u6bcf\u4e2a Broker \u8282\u70b9\u90fd\u8981\u8ddf\u6240\u6709\u7684 Name Server \u8282\u70b9\u5efa\u7acb\u957f\u8fde\u63a5\uff0c\u5b9a\u4e49\u6ce8\u518c Topic \u8def\u7531\u4fe1\u606f\u548c\u53d1\u9001\u5fc3\u8df3\u3002"),(0,a.kt)("p",null,"Producer \u548c Consumer \u8ddf Name Server \u7684\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u5efa\u7acb\u957f\u8fde\u63a5\uff0c\u5b9a\u671f\u4ece Name Server \u62c9\u53d6 Topic \u8def\u7531\u4fe1\u606f\u3002"),(0,a.kt)("h2",{id:"2-producer-\u548c-consumer"},"2 Producer \u548c Consumer"),(0,a.kt)("h3",{id:"21-\u83b7\u53d6-nameserver-\u5730\u5740"},"2.1 \u83b7\u53d6 NameServer \u5730\u5740"),(0,a.kt)("p",null,"Producer \u548c Consumer \u8981\u8ddf Name Server \u5efa\u7acb\u8fde\u63a5\uff0c\u5c31\u5fc5\u987b\u9996\u5148\u83b7\u53d6 Name Server \u5730\u5740\u3002Producer \u548c Consumer \u91c7\u7528\u5b9a\u65f6\u4efb\u52a1\u6bcf\u4e24\u5206\u949f\u83b7\u53d6 Name Server \u5730\u5740\u5e76\u66f4\u65b0\u672c\u5730\u7f13\u5b58\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//MQClientInstance\u7c7b\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   MQClientInstance.this.mQClientAPIImpl.fetchNameServerAddr();\n  } catch (Exception e) {\n   log.error("ScheduledTask fetchNameServerAddr exception", e);\n  }\n }\n}, 1000 * 10, 1000 * 60 * 2, TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"22-\u66f4\u65b0\u8def\u7531\u4fe1\u606f"},"2.2 \u66f4\u65b0\u8def\u7531\u4fe1\u606f"),(0,a.kt)("p",null,"Producer \u548c Consumer \u4f1a\u5b9a\u65f6\u4ece Name Server \u83b7\u53d6\u5b9a\u65f6\u8ba2\u9605\u4fe1\u606f\uff0c\u66f4\u65b0\u672c\u5730\u7f13\u5b58\uff0c\u9ed8\u8ba4\u95f4\u9694\u662f 30s\uff08\u53ef\u4ee5\u914d\u7f6e\uff09\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//MQClientInstance\u7c7b\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n\n @Override\n public void run() {\n  try {\n   MQClientInstance.this.updateTopicRouteInfoFromNameServer();\n  } catch (Exception e) {\n   log.error("ScheduledTask updateTopicRouteInfoFromNameServer exception", e);\n  }\n }\n}, 10, this.clientConfig.getPollNameServerInterval(), TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"23-\u5411-broker-\u53d1\u9001\u5fc3\u8df3"},"2.3 \u5411 Broker \u53d1\u9001\u5fc3\u8df3"),(0,a.kt)("p",null,"Producer \u548c Consumer \u4f1a\u4ece\u672c\u5730\u7f13\u5b58\u7684 Broker \u5217\u8868\u4e2d\u5b9a\u65f6\u6e05\u9664\u79bb\u7ebf\u7684 Broker\uff0c\u5e76\u4e14\u5411 Broker \u53d1\u9001\u5fc3\u8df3\uff0c\u9ed8\u8ba4\u95f4\u9694\u662f 30s\uff08\u53ef\u4ee5\u914d\u7f6e\uff09\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//MQClientInstance\u7c7b\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n\n @Override\n public void run() {\n  try {\n   MQClientInstance.this.cleanOfflineBroker();\n   MQClientInstance.this.sendHeartbeatToAllBrokerWithLock();\n  } catch (Exception e) {\n   log.error("ScheduledTask sendHeartbeatToAllBroker exception", e);\n  }\n }\n}, 1000, this.clientConfig.getHeartbeatBrokerInterval(), TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"24-\u6301\u4e45\u5316-offset"},"2.4 \u6301\u4e45\u5316 Offset"),(0,a.kt)("p",null,"\u6d88\u8d39\u8005\u9700\u8981\u5b9a\u65f6\u6301\u4e45\u5316 MessageQueue \u7684\u504f\u79fb\u91cf\uff0c\u9ed8\u8ba4\u6bcf 5s \u66f4\u65b0\u4e00\u6b21\uff08\u53ef\u4ee5\u914d\u7f6e\uff09\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a")," \u96c6\u7fa4\u6a21\u5f0f\u9700\u8981\u5411 Broker \u53d1\u9001\u6301\u4e45\u5316\u6d88\u606f\uff0c\u56e0\u4e3a\u96c6\u7fa4\u6a21\u5f0f\u504f\u79fb\u91cf\u4fdd\u5b58\u5728 Broker \u7aef\uff0c\u800c\u5e7f\u64ad\u6a21\u5f0f\u53ea\u9700\u8981\u628a\u504f\u79fb\u91cf\u4fdd\u5b58\u5728\u6d88\u8d39\u8005\u672c\u5730\u6587\u4ef6\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//MQClientInstance\u7c7b\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n\n @Override\n public void run() {\n  try {\n   MQClientInstance.this.persistAllConsumerOffset();\n  } catch (Exception e) {\n   log.error("ScheduledTask persistAllConsumerOffset exception", e);\n  }\n }\n}, 1000 * 10, this.clientConfig.getPersistConsumerOffsetInterval(), TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"25-\u8c03\u6574\u6838\u5fc3\u7ebf\u7a0b\u6570"},"2.5 \u8c03\u6574\u6838\u5fc3\u7ebf\u7a0b\u6570"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u6d88\u8d39\u8005\u91c7\u7528\u63a8\u6a21\u5f0f\u7684\u60c5\u51b5\uff0c\u6d88\u8d39\u8005\u4f1a\u6839\u636e\u672a\u6d88\u8d39\u7684\u6d88\u606f\u6570\u91cf\uff0c\u5b9a\u671f\u66f4\u65b0\u6838\u5fc3\u7ebf\u7a0b\u6570\uff0c\u9ed8\u8ba4\u6bcf 1m \u4e00\u6b21\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a")," \u5728 4.9.4 \u8fd9\u4e2a\u7248\u672c\uff0c\u66f4\u65b0\u6838\u5fc3\u7ebf\u7a0b\u6570\u7684\u4ee3\u7801\u5e76\u6ca1\u6709\u5b9e\u73b0\uff0c\u53ea\u662f\u9884\u7559\u4e86\u63a5\u53e3\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//MQClientInstance\u7c7b\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n\n @Override\n public void run() {\n  try {\n   MQClientInstance.this.adjustThreadPool();\n  } catch (Exception e) {\n   log.error("ScheduledTask adjustThreadPool exception", e);\n  }\n }\n}, 1, 1, TimeUnit.MINUTES);\n')),(0,a.kt)("h3",{id:"26-\u5931\u6548\u8fc7\u671f\u8bf7\u6c42"},"2.6 \u5931\u6548\u8fc7\u671f\u8bf7\u6c42"),(0,a.kt)("p",null,"Producer \u548c Consumer \u4f1a\u5b9a\u65f6\u626b\u63cf\u7f13\u5b58\u5728\u672c\u5730\u7684\u8bf7\u6c42\uff0c\u5982\u679c\u8bf7\u6c42\u5f00\u59cb\u65f6\u95f4\u52a0\u8d85\u65f6\u65f6\u95f4\uff08\u518d\u52a0 1s\uff09\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u8fd9\u4e2a\u8bf7\u6c42\u8fc7\u671f\u3002\u901a\u8fc7\u5b9a\u65f6\u4efb\u52a1\uff083s \u4e00\u6b21\uff09\u8ba9\u8fc7\u671f\u8bf7\u6c42\u5931\u6548\uff0c\u5e76\u4e14\u89e6\u53d1\u56de\u8c03\u51fd\u6570\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//NettyRemotingClient.java\nthis.timer.scheduleAtFixedRate(new TimerTask() {\n @Override\n public void run() {\n  try {\n   NettyRemotingClient.this.scanResponseTable();\n  } catch (Throwable e) {\n   log.error("scanResponseTable exception", e);\n  }\n }\n}, 1000 * 3, 1000);\n')),(0,a.kt)("h3",{id:"27-\u751f\u4ea7\u8005"},"2.7 \u751f\u4ea7\u8005"),(0,a.kt)("h4",{id:"271-\u6027\u80fd\u8bb0\u5f55"},"2.7.1 \u6027\u80fd\u8bb0\u5f55"),(0,a.kt)("p",null,"\u751f\u4ea7\u8005\u53d1\u9001\u6d88\u606f\u540e\uff0c\u4f1a\u5bf9\u6210\u529f\u5931\u8d25\u7684\u72b6\u6001\u3001\u82b1\u8d39\u65f6\u95f4\u8fdb\u884c\u8bb0\u5f55\uff0c\u4ee5\u6b64\u6765\u8ba1\u7b97\u541e\u5410\u91cf TPS\uff0c\u54cd\u5e94\u65f6\u95f4 RT\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//Producer.java\nexecutorService.scheduleAtFixedRate(new TimerTask() {\n @Override\n public void run() {\n  snapshotList.addLast(statsBenchmark.createSnapshot());\n  if (snapshotList.size() > 10) {\n   snapshotList.removeFirst();\n  }\n }\n}, 1000, 1000, TimeUnit.MILLISECONDS);\n\nexecutorService.scheduleAtFixedRate(new TimerTask() {\n private void printStats() {\n  if (snapshotList.size() >= 10) {\n   doPrintStats(snapshotList,  statsBenchmark, false);\n  }\n }\n\n @Override\n public void run() {\n  try {\n   this.printStats();\n  } catch (Exception e) {\n   e.printStackTrace();\n  }\n }\n}, 10000, 10000, TimeUnit.MILLISECONDS);\n")),(0,a.kt)("h3",{id:"28-\u6d88\u8d39\u8005"},"2.8 \u6d88\u8d39\u8005"),(0,a.kt)("h4",{id:"281-messagequeue-\u52a0\u9501"},"2.8.1 MessageQueue \u52a0\u9501"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u987a\u5e8f\u6d88\u606f\uff0c\u8981\u4fdd\u8bc1\u540c\u4e00\u4e2a MessageQueue \u53ea\u80fd\u88ab\u540c\u4e00\u4e2a Consumer \u6d88\u8d39\u3002\u6d88\u8d39\u8005\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u4f1a\u542f\u52a8\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u5b9a\u65f6\uff08\u9ed8\u8ba4 20s\uff0c\u53ef\u4ee5\u914d\u7f6e\uff09\u5730\u5411 Broker \u53d1\u9001\u9501\u5b9a\u6d88\u606f\uff0cBroker \u6536\u5230\u8bf7\u6c42\u540e\uff0c\u5c31\u4f1a\u628a MessageQueue\u3001group \u548c clientId \u8fdb\u884c\u7ed1\u5b9a\uff0c\u8fd9\u6837\u5176\u4ed6\u5ba2\u6237\u7aef\u5c31\u4e0d\u80fd\u4ece\u8fd9\u4e2a MessageQueue \u62c9\u53d6\u6d88\u606f\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//ConsumeMessageOrderlyService.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   ConsumeMessageOrderlyService.this.lockMQPeriodically();\n  } catch (Throwable e) {\n   log.error("scheduleAtFixedRate lockMQPeriodically exception", e);\n  }\n }\n}, 1000 * 1, ProcessQueue.REBALANCE_LOCK_INTERVAL, TimeUnit.MILLISECONDS);\n')),(0,a.kt)("p",null,"\u6ce8\u610f\uff1aBroker \u7684\u52a0\u9501\u662f\u6709\u65f6\u6548\u7684\uff08\u9ed8\u8ba4 60s\uff0c\u53ef\u4ee5\u914d\u7f6e\uff09\uff0c\u8fc7\u671f\u540e\uff0c\u6709\u53ef\u80fd\u88ab\u5176\u4ed6 Consumer \u8fdb\u884c\u6d88\u8d39\u3002"),(0,a.kt)("h4",{id:"282-\u6027\u80fd\u5feb\u7167"},"2.8.2 \u6027\u80fd\u5feb\u7167"),(0,a.kt)("p",null,"Consumer \u6bcf\u79d2\u4f1a\u8bb0\u5f55\u4e00\u6b21\u6027\u80fd\u5feb\u7167\uff0c\u6bd4\u5982\u6d88\u606f\u4ece\u521b\u5efa\u5230\u6d88\u8d39\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u6d88\u606f\u4ece\u4fdd\u5b58\u5230\u6d88\u8d39\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u63a5\u6536\u5230\u6d88\u606f\u7684\u603b\u6570\u91cf\uff0c\u5931\u8d25\u603b\u6570\u91cf\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//Consumer.java\nexecutorService.scheduleAtFixedRate(new TimerTask() {\n @Override\n public void run() {\n  snapshotList.addLast(statsBenchmarkConsumer.createSnapshot());\n  if (snapshotList.size() > 10) {\n   snapshotList.removeFirst();\n  }\n }\n}, 1000, 1000, TimeUnit.MILLISECONDS);\n")),(0,a.kt)("p",null,"\u4e0a\u9762\u8bb0\u5f55\u4e86\u6027\u80fd\u5feb\u7167\u540e\uff0cConsumer \u4f1a\u6bcf\u9694 10s \u8fdb\u884c\u6027\u80fd\u53c2\u6570\u8ba1\u7b97\u548c\u6253\u5370\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//Consumer.java\nexecutorService.scheduleAtFixedRate(new TimerTask() {\nprivate void printStats() {\n if (snapshotList.size() >= 10) {\n  Long[] begin = snapshotList.getFirst();\n  Long[] end = snapshotList.getLast();\n\n  final long consumeTps =\n   (long) (((end[1] - begin[1]) / (double) (end[0] - begin[0])) * 1000L);\n  final double averageB2CRT = (end[2] - begin[2]) / (double) (end[1] - begin[1]);\n  final double averageS2CRT = (end[3] - begin[3]) / (double) (end[1] - begin[1]);\n  final long failCount = end[4] - begin[4];\n  final long b2cMax = statsBenchmarkConsumer.getBorn2ConsumerMaxRT().get();\n  final long s2cMax = statsBenchmarkConsumer.getStore2ConsumerMaxRT().get();\n\n  statsBenchmarkConsumer.getBorn2ConsumerMaxRT().set(0);\n  statsBenchmarkConsumer.getStore2ConsumerMaxRT().set(0);\n\n  System.out.printf("Current Time: %s TPS: %d FAIL: %d AVG(B2C) RT(ms): %7.3f AVG(S2C) RT(ms): %7.3f MAX(B2C) RT(ms): %d MAX(S2C) RT(ms): %d%n",\n    System.currentTimeMillis(), consumeTps, failCount, averageB2CRT, averageS2CRT, b2cMax, s2cMax\n  );\n }\n}\n')),(0,a.kt)("p",null,"\u901a\u8fc7\u6027\u80fd\u53c2\u6570\u7684\u65e5\u5fd7\u8f93\u51fa\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5bf9 RocketMQ \u7684\u6d88\u8d39\u8005\u8fdb\u884c\u76d1\u63a7\u3002"),(0,a.kt)("h4",{id:"283-\u6e05\u9664\u8fc7\u671f\u6d88\u606f"},"2.8.3 \u6e05\u9664\u8fc7\u671f\u6d88\u606f"),(0,a.kt)("p",null,"\u6d88\u8d39\u8005\u4f1a\u5b9a\u671f\u68c0\u67e5\u672c\u5730\u62c9\u53d6\u7684\u6d88\u606f\u5217\u8868\uff0c\u5982\u679c\u5217\u8868\u4e2d\u7684\u6d88\u606f\u5df2\u7ecf\u8fc7\u671f\uff08\u9ed8\u8ba4 15 \u5206\u949f\u8fc7\u671f\uff0c\u53ef\u4ee5\u914d\u7f6e\uff09\uff0c\u5219\u628a\u8fc7\u671f\u6d88\u606f\u518d\u6b21\u53d1\u9001\u7ed9 Broker\uff0c\u7136\u540e\u4ece\u672c\u5730\u6d88\u606f\u5217\u8868\u5220\u9664\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//ConsumeMessageConcurrentlyService.java\nthis.cleanExpireMsgExecutors.scheduleAtFixedRate(new Runnable() {\n\n @Override\n public void run() {\n  try {\n   cleanExpireMsg();\n  } catch (Throwable e) {\n   log.error("scheduleAtFixedRate cleanExpireMsg exception", e);\n  }\n }\n\n}, this.defaultMQPushConsumer.getConsumeTimeout(), this.defaultMQPushConsumer.getConsumeTimeout(), TimeUnit.MINUTES);\n')),(0,a.kt)("h4",{id:"284-\u6e05\u9664\u8fc7\u671f\u6d88\u606f"},"2.8.4 \u6e05\u9664\u8fc7\u671f\u6d88\u606f"),(0,a.kt)("p",null,"\u6d88\u8d39\u8005\u4f1a\u6bcf\u9694 30s \u5411 NameServer \u62c9\u53d6 MessageQueue \u4fe1\u606f\uff0c\u7136\u540e\u8ddf\u672c\u5730\u4fdd\u5b58\u7684\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u4e0d\u4e00\u81f4\uff0c\u5219\u66f4\u65b0\u672c\u5730\u7f13\u5b58\u4fe1\u606f\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//DefaultLitePullConsumerImpl.java\nscheduledExecutorService.scheduleAtFixedRate(\nnew Runnable() {\n @Override\n public void run() {\n  try {\n   fetchTopicMessageQueuesAndCompare();\n  } catch (Exception e) {\n   log.error("ScheduledTask fetchMessageQueuesAndCompare exception", e);\n  }\n }\n}, 1000 * 10, this.getDefaultLitePullConsumer().getTopicMetadataCheckIntervalMillis(), TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h2",{id:"3-broker"},"3 Broker"),(0,a.kt)("h3",{id:"31-\u72b6\u6001\u91c7\u6837"},"3.1 \u72b6\u6001\u91c7\u6837"),(0,a.kt)("p",null,"Broker \u7aef\u4f1a\u5bf9\u72b6\u6001\u8fdb\u884c\u91c7\u7528\uff0c\u6bd4\u5982\u4e00\u4e2a Topic\u3001MessageQueue\u3001Group \u603b\u5171\u53d1\u9001\u4e86\u591a\u5c11\u6761\u6d88\u606f\uff0cTopic \u603b\u5171\u53d1\u9001\u7684\u6d88\u606f\u5927\u5c0f\u3002Broker \u4f1a\u5bf9\u8fd9\u4e9b\u72b6\u6001\u6309\u7167\u79d2\u3001\u5206\u949f\u3001\u5c0f\u65f6\u4e3a\u5355\u4f4d\u8fdb\u884c\u91c7\u6837\u5e76\u4e14\u5b9a\u65f6\u6253\u5370\uff0c\u8fd9\u91cc\u4e00\u5171\u6709 6 \u4e2a\u5b9a\u65f6\u4efb\u52a1\u3002\u6bd4\u5982\u4e0b\u9762\u662f\u6309\u7167\u79d2\u8fdb\u884c\u91c7\u6837\u7684\u5b9a\u65f6\u4efb\u52a1\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//StatsItemSet.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   samplingInSeconds();\n  } catch (Throwable ignored) {\n  }\n }\n}, 0, 10, TimeUnit.SECONDS);\n")),(0,a.kt)("h3",{id:"32-\u8bb0\u5f55\u6d88\u606f\u5ef6\u65f6"},"3.2 \u8bb0\u5f55\u6d88\u606f\u5ef6\u65f6"),(0,a.kt)("p",null,"Broker \u8bfb\u53d6\u6d88\u606f\u65f6\u4f1a\u8bb0\u5f55\u6d88\u606f\u4ece\u4fdd\u5b58\u78c1\u76d8\u5230\u88ab\u8bfb\u53d6\u7684\u65f6\u95f4\u5dee\u5e76\u5b9a\u65f6\u6253\u5370\u3002\u5b9a\u65f6\u4efb\u52a1\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//MomentStatsItemSet.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   printAtMinutes();\n  } catch (Throwable ignored) {\n  }\n }\n}, Math.abs(UtilAll.computeNextMinutesTimeMillis() - System.currentTimeMillis()), 1000 * 60 * 5, TimeUnit.MILLISECONDS);\n")),(0,a.kt)("h3",{id:"33-\u6301\u4e45\u5316\u6570\u636e"},"3.3 \u6301\u4e45\u5316\u6570\u636e"),(0,a.kt)("p",null,"Broker \u4f1a\u5b9a\u65f6\u6301\u4e45\u5316\u6d88\u8d39\u504f\u79fb\u91cf\u3001Topic \u914d\u7f6e\u3001\u5b9a\u9605\u7ec4\u914d\u7f6e\u7b49\uff0c\u9ed8\u8ba4 10s \u4e00\u6b21\uff08\u53ef\u4ee5\u914d\u7f6e\uff09\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//ScheduleMessageService.java\nthis.deliverExecutorService.scheduleAtFixedRate(new Runnable() {\n\n @Override\n public void run() {\n  try {\n   if (started.get()) {\n    ScheduleMessageService.this.persist();\n   }\n  } catch (Throwable e) {\n   log.error("scheduleAtFixedRate flush exception", e);\n  }\n }\n}, 10000, this.defaultMessageStore.getMessageStoreConfig().getFlushDelayOffsetInterval(), TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"34-\u5931\u6548\u8fc7\u671f\u8bf7\u6c42"},"3.4 \u5931\u6548\u8fc7\u671f\u8bf7\u6c42"),(0,a.kt)("p",null,"Broker \u4f1a\u5b9a\u65f6\u626b\u63cf\u7f13\u5b58\u5728\u672c\u5730\u7684\u8bf7\u6c42\uff0c\u5982\u679c\u8bf7\u6c42\u5f00\u59cb\u65f6\u95f4\u52a0\u8d85\u65f6\u65f6\u95f4\uff08\u518d\u52a0 1s\uff09\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u8fd9\u4e2a\u8bf7\u6c42\u8fc7\u671f\u3002\u901a\u8fc7\u5b9a\u65f6\u4efb\u52a1\uff083s \u4e00\u6b21\uff09\u8ba9\u8fc7\u671f\u8bf7\u6c42\u5931\u6548\uff0c\u5e76\u4e14\u89e6\u53d1\u56de\u8c03\u51fd\u6570\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//NettyRemotingServer.java\nthis.timer.scheduleAtFixedRate(new TimerTask() {\n\n @Override\n public void run() {\n  try {\n   NettyRemotingServer.this.scanResponseTable();\n  } catch (Throwable e) {\n   log.error("scanResponseTable exception", e);\n  }\n }\n}, 1000 * 3, 1000);\n')),(0,a.kt)("h3",{id:"35-\u8fc7\u6ee4\u670d\u52a1"},"3.5 \u8fc7\u6ee4\u670d\u52a1"),(0,a.kt)("p",null,"\u6d88\u8d39\u8005\u53ef\u80fd\u4f1a\u5411 Broker \u6ce8\u518c filterClass \u7528\u6765\u8fc7\u6ee4\u6d88\u606f\u3002Broker \u6536\u5230\u6d88\u8d39\u8005\u6ce8\u518c\u7684 filterClass \u540e\u4f1a\u7528\u5b9a\u65f6\u4efb\u52a1\u6765\u521b\u5efa FilterServer\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//FilterServerManager.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   FilterServerManager.this.createFilterServer();\n  } catch (Exception e) {\n   log.error("", e);\n  }\n }\n}, 1000 * 5, 1000 * 30, TimeUnit.MILLISECONDS);\n')),(0,a.kt)("p",null,"\u8fd9\u6837\u6d88\u8d39\u8005\u62c9\u53d6\u6d88\u606f\u65f6\u9996\u5148\u4ece FilterServer \u62c9\u53d6\u6d88\u606f\uff0cFilterServer \u4ece Broker \u62c9\u53d6\u6d88\u606f\u540e\u8fdb\u884c\u8fc7\u6ee4\uff0c\u53ea\u628a\u6d88\u8d39\u8005\u611f\u5174\u8da3\u7684\u6d88\u606f\u8fd4\u56de\u7ed9\u6d88\u8d39\u8005\u3002\u4e00\u4e2a Broker \u53ef\u4ee5\u6709\u591a\u4e2a FilterServer\u3002\u5982\u4e0b\u56fe\uff1a"),(0,a.kt)("p",null,"\u56fe\u7247"),(0,a.kt)("h3",{id:"36-\u8bb0\u5f55\u6d88\u606f\u603b\u91cf"},"3.6 \u8bb0\u5f55\u6d88\u606f\u603b\u91cf"),(0,a.kt)("p",null,"Broker \u6bcf\u5929\u4f1a\u8bb0\u5f55\u524d\u4e00\u5929\u6536\u53d1\u6d88\u606f\u7684\u603b\u6570\u91cf\uff0c\u5b9a\u65f6\u4efb\u52a1\u5982\u4e0b\uff08period \u662f 1 \u5929\uff09\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//BrokerController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   BrokerController.this.getBrokerStats().record();\n  } catch (Throwable e) {\n   log.error("schedule record error.", e);\n  }\n }\n}, initialDelay, period, TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"37-\u6301\u4e45\u5316-offset"},"3.7 \u6301\u4e45\u5316 Offset"),(0,a.kt)("p",null,"Broker \u9ed8\u8ba4\u6bcf\u9694 5s\uff08\u53ef\u4ee5\u914d\u7f6e\uff09 \u4f1a\u6301\u4e45\u5316\u4e00\u6b21\u6d88\u606f\u7684 Offset\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//BrokerController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   BrokerController.this.consumerOffsetManager.persist();\n  } catch (Throwable e) {\n   log.error("schedule persist consumerOffset error.", e);\n  }\n }\n}, 1000 * 10, this.brokerConfig.getFlushConsumerOffsetInterval(), TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"38-\u6301\u4e45\u5316\u8fc7\u6ee4\u53c2\u6570"},"3.8 \u6301\u4e45\u5316\u8fc7\u6ee4\u53c2\u6570"),(0,a.kt)("p",null,"\u4e0a\u9762\u63d0\u5230\u8fc7\uff0c\u6d88\u8d39\u8005\u53ef\u80fd\u4f1a\u5411 Broker \u6ce8\u518c filterClass\uff0cBroker \u89e3\u6790\u6d88\u8d39\u8005\u6ce8\u518c\u7684 filterClass \u540e\uff0c\u4f1a\u628a\u89e3\u6790\u540e\u7684 FilterData \u6301\u4e45\u5316\u5230\u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//BrokerController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   BrokerController.this.consumerFilterManager.persist();\n  } catch (Throwable e) {\n   log.error("schedule persist consumer filter error.", e);\n  }\n }\n}, 1000 * 10, 1000 * 10, TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"39-broker-\u81ea\u6211\u4fdd\u62a4"},"3.9 Broker \u81ea\u6211\u4fdd\u62a4"),(0,a.kt)("p",null,"\u5f53\u6d88\u8d39\u8005\u8bfb\u53d6\u6d88\u606f\u7f13\u6162\u65f6\uff0cBroker \u4e3a\u4e86\u4fdd\u62a4\u81ea\u5df1\uff0c\u4f1a\u628a\u8fd9\u4e2a\u6d88\u8d39\u8005\u8bbe\u7f6e\u4e3a\u4e0d\u5141\u8bb8\u8bfb\u53d6\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u8fd9\u4e2a\u6d88\u8d39\u7ec4\u5c31\u4e0d\u80fd\u518d\u62c9\u53d6\u6d88\u606f\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//BrokerController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   BrokerController.this.protectBroker();\n  } catch (Throwable e) {\n   log.error("protectBroker error.", e);\n  }\n }\n}, 3, 3, TimeUnit.MINUTES);\n')),(0,a.kt)("h3",{id:"310-broker-\u6253\u5370\u6c34\u4f4d"},"3.10 Broker \u6253\u5370\u6c34\u4f4d"),(0,a.kt)("p",null,"Broker \u4f1a\u6bcf\u9694 1s \u6253\u5370\u4e00\u6b21\u6c34\u4f4d\uff0c\u5305\u62ec\u53d1\u9001\u6d88\u606f\u7684\u5ef6\u8fdf\u3001\u63a5\u6536\u6d88\u606f\u7684\u5ef6\u8fdf\u3001\u4e8b\u52a1\u6d88\u606f\u7684\u5ef6\u8fdf\u3001\u67e5\u8be2\u6d88\u606f\u7684\u5ef6\u8fdf\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//BrokerController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   BrokerController.this.printWaterMark();\n  } catch (Throwable e) {\n   log.error("printWaterMark error.", e);\n  }\n }\n}, 10, 1, TimeUnit.SECONDS);\n')),(0,a.kt)("h3",{id:"311-broker-\u6253\u5370-offset-\u5dee"},"3.11 Broker \u6253\u5370 Offset \u5dee"),(0,a.kt)("p",null,"Broker \u4f1a\u5b9a\u65f6\u6253\u5370\u6700\u65b0\u7684\u6d88\u606f Offset \u548c\u5df2\u7ecf\u5206\u53d1\u7ed9 MessageQueue \u548c Index \u7d22\u5f15\u7684 Offset \u5dee\u8ddd\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//BrokerController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   log.info("dispatch behind commit log {} bytes", BrokerController.this.getMessageStore().dispatchBehindBytes());\n  } catch (Throwable e) {\n   log.error("schedule dispatchBehindBytes error.", e);\n  }\n }\n}, 1000 * 10, 1000 * 60, TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"312-\u83b7\u53d6-nameserver-\u5730\u5740"},"3.12 \u83b7\u53d6 NameServer \u5730\u5740"),(0,a.kt)("p",null,"Broker \u4f1a\u5b9a\u671f\u83b7\u53d6 NameServer \u7684\u5730\u5740\uff0c\u5e76\u66f4\u65b0\u672c\u5730\u7f13\u5b58\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//BrokerController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n\n @Override\n public void run() {\n  try {\n   BrokerController.this.brokerOuterAPI.fetchNameServerAddr();\n  } catch (Throwable e) {\n   log.error("ScheduledTask fetchNameServerAddr exception", e);\n  }\n }\n}, 1000 * 10, 1000 * 60 * 2, TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"313-\u6253\u5370\u4e3b\u4ece\u504f\u79fb\u91cf\u5dee\u8ddd"},"3.13 \u6253\u5370\u4e3b\u4ece\u504f\u79fb\u91cf\u5dee\u8ddd"),(0,a.kt)("p",null,"Broker \u4f1a\u5b9a\u65f6\u6253\u5370 master \u8282\u70b9\u548c slave \u8282\u70b9\u6d88\u606f Offset \u7684\u5dee\u8ddd\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//BrokerController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   BrokerController.this.printMasterAndSlaveDiff();\n  } catch (Throwable e) {\n   log.error("schedule printMasterAndSlaveDiff error.", e);\n  }\n }\n}, 1000 * 10, 1000 * 60, TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"314-\u5411-nameserver-\u6ce8\u518c"},"3.14 \u5411 NameServer \u6ce8\u518c"),(0,a.kt)("p",null,"Broker \u4f1a\u5b9a\u65f6\u5411\uff08\u9ed8\u8ba4 30s\uff0c\u53ef\u914d\u7f6e\uff0c\u6700\u9ad8\u4e0d\u8d85\u8fc7 60s\uff09\u6240\u6709 NameServer \u53d1\u9001\u6ce8\u518c\u6d88\u606f\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//BrokerController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n\n @Override\n public void run() {\n  try {\n   BrokerController.this.registerBrokerAll(true, false, brokerConfig.isForceRegister());\n  } catch (Throwable e) {\n   log.error("registerBrokerAll Exception", e);\n  }\n }\n}, 1000 * 10, Math.max(10000, Math.min(brokerConfig.getRegisterNameServerPeriod(), 60000)), TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"315-\u540c\u6b65-slave"},"3.15 \u540c\u6b65 Slave"),(0,a.kt)("p",null,"Broker \u7684 Master \u8282\u70b9\u4f1a\u6bcf\u95f4\u9694 10s \u5411 Slave \u8282\u70b9\u540c\u6b65\u6570\u636e\uff0c\u5305\u62ec Topic \u914d\u7f6e\u3001\u6d88\u8d39\u504f\u79fb\u91cf\u3001\u5ef6\u8fdf\u504f\u79fb\u91cf\u3001\u6d88\u8d39\u7ec4\u914d\u7f6e\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//BrokerController.java\nslaveSyncFuture = this.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   BrokerController.this.slaveSynchronize.syncAll();\n  }\n  catch (Throwable e) {\n   log.error("ScheduledTask SlaveSynchronize syncAll error.", e);\n  }\n }\n}, 1000 * 3, 1000 * 10, TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"316-\u5220\u9664\u8fc7\u671f\u6587\u4ef6"},"3.16 \u5220\u9664\u8fc7\u671f\u6587\u4ef6"),(0,a.kt)("p",null,"Broker \u4f1a\u5468\u671f\u6027\uff08\u9ed8\u8ba4 10s\uff0c\u53ef\u4ee5\u914d\u7f6e\uff09\u5730\u6267\u884c\u5220\u9664\u4efb\u52a1\uff0c\u5220\u9664\u8fc7\u671f\u7684 CommitLog \u6587\u4ef6\u548c ConsumeQueue \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//DefaultMessageStore.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  DefaultMessageStore.this.cleanFilesPeriodically();\n }\n}, 1000 * 60, this.messageStoreConfig.getCleanResourceInterval(), TimeUnit.MILLISECONDS);\n")),(0,a.kt)("h3",{id:"317-\u6587\u4ef6\u5927\u5c0f\u68c0\u67e5"},"3.17 \u6587\u4ef6\u5927\u5c0f\u68c0\u67e5"),(0,a.kt)("p",null,"Broker \u4f1a\u6bcf\u9694 10 \u5206\u949f\u68c0\u67e5 CommitLog \u6587\u4ef6\u548c ConsumeQueue \u6587\u4ef6\uff0c\u7528\u5f53\u524d\u6587\u4ef6\u7684\u6700\u5c0f\uff08\u8d77\u59cb\uff09 Offset \u51cf\u53bb\u4e0a\u4e00\u4e2a\u6587\u4ef6\u6700\u5c0f\uff08\u8d77\u59cb\uff09 Offset\uff0c\u5982\u679c\u4e0d\u7b49\u4e8e\u4e00\u4e2a\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u5c31\u8bf4\u660e\u6587\u4ef6\u5b58\u5728\u95ee\u9898\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//DefaultMessageStore.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  DefaultMessageStore.this.checkSelf();\n }\n}, 1, 10, TimeUnit.MINUTES);\n")),(0,a.kt)("h3",{id:"318-\u4fdd\u5b58\u5806\u6808\u6620\u5c04"},"3.18 \u4fdd\u5b58\u5806\u6808\u6620\u5c04"),(0,a.kt)("p",null,"Broker \u4f1a\u6bcf\u9694 1s \u8bb0\u5f55\u6240\u6709\u5b58\u6d3b\u7ebf\u7a0b\u7684\u5806\u6808\u6620\u5c04\u4fe1\u606f\uff0c\u524d\u63d0\u662f debugLockEnable \u5f00\u5173\u914d\u7f6e\u662f\u6253\u5f00\u7684\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//DefaultMessageStore.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  if (DefaultMessageStore.this.getMessageStoreConfig().isDebugLockEnable()) {\n   try {\n    if (DefaultMessageStore.this.commitLog.getBeginTimeInLock() != 0) {\n     long lockTime = System.currentTimeMillis() - DefaultMessageStore.this.commitLog.getBeginTimeInLock();\n     if (lockTime > 1000 && lockTime < 10000000) {\n\n      String stack = UtilAll.jstack();\n      final String fileName = System.getProperty("user.home") + File.separator + "debug/lock/stack-"\n       + DefaultMessageStore.this.commitLog.getBeginTimeInLock() + "-" + lockTime;\n      MixAll.string2FileNotSafe(stack, fileName);\n     }\n    }\n   } catch (Exception e) {\n   }\n  }\n }\n}, 1, 1, TimeUnit.SECONDS);\n')),(0,a.kt)("h3",{id:"319-\u68c0\u67e5\u7269\u7406\u78c1\u76d8"},"3.19 \u68c0\u67e5\u7269\u7406\u78c1\u76d8"),(0,a.kt)("p",null,"Broker \u4f1a\u6bcf\u9694 10s \u68c0\u67e5\u4fdd\u5b58 CommitLog \u7684\u78c1\u76d8\u7a7a\u95f4\u662f\u5426\u8fbe\u5230\u9608\u503c\uff0c\u5982\u679c\u8fbe\u5230\uff0c\u4f1a\u6253\u5370 error \u7ea7\u522b\u7684\u65e5\u5fd7\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//DefaultMessageStore.java\nthis.diskCheckScheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n public void run() {\n  DefaultMessageStore.this.cleanCommitLogService.isSpaceFull();\n }\n}, 1000L, 10000L, TimeUnit.MILLISECONDS);\n")),(0,a.kt)("h3",{id:"320-\u6301\u4e45\u5316\u5ef6\u65f6\u6d88\u606f\u504f\u79fb\u91cf"},"3.20 \u6301\u4e45\u5316\u5ef6\u65f6\u6d88\u606f\u504f\u79fb\u91cf"),(0,a.kt)("p",null,"RocketMQ \u7684\u5ef6\u65f6\u6d88\u8d39\u5206\u4e3a 18 \u4e2a\u7ea7\u522b\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//ScheduleMessageService.java\nprivate String messageDelayLevel = "1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h";\n')),(0,a.kt)("p",null,"RocketMQ \u4f1a\u4e3a\u6bcf\u4e2a\u5ef6\u65f6\u7ea7\u522b\u5b9a\u4e49\u8981\u7ed9 ConsumeQueue\uff0c\u6bcf\u9694 ConsumeQueue \u90fd\u4f1a\u6709\u4e00\u4e2a Offset\uff0c\u901a\u8fc7 offsetTable(ConcurrentMap) \u6765\u8bb0\u5f55\u4e0d\u540c\u5ef6\u65f6\u7ea7\u522b\u5bf9\u5e94\u7684 Offset\u3002"),(0,a.kt)("p",null,"RocketMQ \u4f1a\u5468\u671f\u6027\u5730\uff08\u9ed8\u8ba4 10s\uff0c\u53ef\u4ee5\u914d\u7f6e\uff09\u628a offsetTable \u4e2d\u4fdd\u5b58\u7684 Offset \u6301\u4e45\u5316\u5230\u6587\u4ef6\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//DefaultMessageStore.java\nthis.deliverExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   if (started.get()) {\n    ScheduleMessageService.this.persist();\n   }\n  } catch (Throwable e) {\n   log.error("scheduleAtFixedRate flush exception", e);\n  }\n }\n}, 10000, this.defaultMessageStore.getMessageStoreConfig().getFlushDelayOffsetInterval(), TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"321-\u5173\u95ed\u5f02\u5e38\u8fde\u63a5"},"3.21 \u5173\u95ed\u5f02\u5e38\u8fde\u63a5"),(0,a.kt)("p",null,"Broker \u4f1a\u5b9a\u65f6\u626b\u63cf\u6240\u6709\u7684\u957f\u8fde\u63a5\uff0c\u4e3b\u8981\u5305\u62ec\u751f\u4ea7\u8005\u3001\u6d88\u8d39\u8005\u548c FilterServer\uff0c\u5982\u679c\u8fde\u63a5\u4e0d\u6d3b\u8dc3\uff0c\u5219\u5173\u95ed\u8be5\u8fde\u63a5\uff0c\u5e76\u4ece\u672c\u5730\u8fde\u63a5\u5217\u8868\u4e2d\u79fb\u9664\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//ClientHousekeepingService.java\nthis.scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n @Override\n public void run() {\n  try {\n   ClientHousekeepingService.this.scanExceptionChannel();\n  } catch (Throwable e) {\n   log.error("Error occurred when scan not active client channels.", e);\n  }\n }\n}, 1000 * 10, 1000 * 10, TimeUnit.MILLISECONDS);\n')),(0,a.kt)("h3",{id:"322-\u6e05\u7406\u8fc7\u671f\u6d88\u606f"},"3.22 \u6e05\u7406\u8fc7\u671f\u6d88\u606f"),(0,a.kt)("p",null,"\u5982\u679c Broker \u914d\u7f6e\u4e86\u5141\u8bb8\u5feb\u901f\u5931\u8d25\uff08brokerFastFailureEnable\uff09\uff0c\u5219\u4f1a\u6bcf\u9694 10ms \u5b9a\u65f6\u6e05\u7406\u8fc7\u671f\u8bf7\u6c42\uff0c\u5305\u62ec\u8981\u53d1\u9001\u7684\u6d88\u606f\u3001\u63a5\u6536\u7684\u6d88\u606f\u3001\u5fc3\u8df3\u6d88\u606f\u3001\u8981\u7ed3\u675f\u7684\u4e8b\u52a1\u6d88\u606f\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'scheduledExecutorService.scheduleAtFixedRate(\nnew Runnable() {\n @Override\n public void run() {\n  try {\n   fetchTopicMessageQueuesAndCompare();\n  } catch (Exception e) {\n   log.error("ScheduledTask fetchMessageQueuesAndCompare exception", e);\n  }\n }\n}, 1000 * 10, this.getDefaultLitePullConsumer().getTopicMetadataCheckIntervalMillis(), TimeUnit.MILLISECONDS);\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a")," \u6e05\u7406\u6d88\u606f\u524d\u4f1a\u5224\u65ad\u662f\u5426\u7cfb\u7edf\u7e41\u5fd9\uff0c\u5982\u679c\u7cfb\u7edf\u7e41\u5fd9\uff0c\u4f1a\u7ed9\u53d1\u9001\u961f\u5217\u4e2d\u7684\u6d88\u606f\u76f4\u63a5\u8fd4\u56de\u7cfb\u7edf\u7e41\u5fd9\uff0c\u6682\u65f6\u4e0d\u505a\u8fc7\u671f\u6d88\u606f\u6e05\u7406\u3002"),(0,a.kt)("h2",{id:"4-nameserver"},"4 NameServer"),(0,a.kt)("h3",{id:"41-\u68c0\u67e5\u8fc7\u671f-broker"},"4.1 \u68c0\u67e5\u8fc7\u671f Broker"),(0,a.kt)("p",null,"\u5728 3.14 \u8282\u4e2d\u8bb2\u8fc7\uff0cBroker \u4f1a\u8ddf NameServer \u5efa\u7acb\u957f\u8fde\u63a5\uff0c\u5b9a\u65f6\u5411 NameServer \u53d1\u9001\u6ce8\u518c\u6d88\u606f\u3002NameServer \u4f1a\u5728\u672c\u5730\u7ef4\u62a4\u4e00\u4e2a Broker \u5217\u8868\uff0c\u5b9a\u65f6\u4efb\u52a1\u4f1a\u8f6e\u8be2\u672c\u5730\u4fdd\u5b58\u7684 Broker \u5217\u8868\uff0c\u68c0\u67e5\u6ce8\u518c\u6d88\u606f\u662f\u5426\u8fc7\u671f\uff08\u8d85\u8fc7 120s\uff09\uff0c\u5982\u679c\u6ce8\u518c\u6d88\u606f\u8fc7\u671f\uff0c\u5219\u5173\u95ed\u957f\u8fde\u63a5\uff0c\u4ece\u672c\u5730\u7f13\u5b58\u5220\u9664\u8fd9\u4e2a Broker\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//NamesrvController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(NamesrvController.this.routeInfoManager::scanNotActiveBroker, 5, 10, TimeUnit.SECONDS);\n")),(0,a.kt)("h3",{id:"42-\u6253\u5370\u914d\u7f6e"},"4.2 \u6253\u5370\u914d\u7f6e"),(0,a.kt)("p",null,"NameServer \u542f\u52a8\u65f6\uff0c\u4f1a\u52a0\u8f7d KV \u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6\u5230 configTable \u8fd9\u4e2a\u53d8\u91cf\uff0cNameServer \u5ba2\u6237\u7aef\u4e5f\u53ef\u4ee5\u53d1\u9001\u4e00\u4e2a KV \u914d\u7f6e\u8bf7\u6c42\u7ed9 NameServer\uff0cNameServer \u6536\u5230\u8bf7\u6c42\u540e\u4e5f\u4f1a\u4fdd\u5b58\u5230 configTable\u3002"),(0,a.kt)("p",null,"NameServer \u4f1a\u5b9a\u65f6\u6253\u5370 configTable \u4e2d\u7684\u914d\u7f6e\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//NamesrvController.java\nthis.scheduledExecutorService.scheduleAtFixedRate(NamesrvController.this.kvConfigManager::printAllPeriodically, 1, 10, TimeUnit.MINUTES);\n")),(0,a.kt)("h2",{id:"5-\u603b\u7ed3"},"5 \u603b\u7ed3"),(0,a.kt)("p",null,"RocketMQ \u7684\u5b9a\u65f6\u4efb\u52a1\u5f88\u591a\uff0c\u8fd9\u4e9b\u5b9a\u65f6\u4efb\u52a1\u7684\u52a0\u5165\u8ba9 RocketMQ \u7684\u8bbe\u8ba1\u66f4\u52a0\u5b8c\u5907\uff0c\u5305\u62ec\u4e1a\u52a1\u5904\u7406\u3001\u76d1\u63a7\u65e5\u5fd7\u3001\u5fc3\u8df3\u3001\u6e05\u7406\u4efb\u52a1\u3001\u5173\u95ed\u8fde\u63a5\u3001\u6301\u4e45\u5316\u6570\u636e\u7b49\u3002\u901a\u8fc7\u5bf9\u5b9a\u65f6\u4efb\u52a1\u7684\u7406\u89e3\uff0c\u80fd\u591f\u66f4\u6df1\u5165\u5730\u7406\u89e3 RocketMQ \u7684\u8bbe\u8ba1\u7406\u5ff5\u3002"))}v.isMDXComponent=!0}}]);