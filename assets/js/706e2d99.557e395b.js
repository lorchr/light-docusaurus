"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[6303],{74959:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=t(85893),i=t(11151);const o={},a=void 0,s={id:"zh-cn/spring-authorization-server/SAS-Separate-Consent-And-Device-Authorize-Page",title:"SAS-Separate-Consent-And-Device-Authorize-Page",description:"- Spring Authorization Server\u5165\u95e8 (\u5341\u4e94) \u5206\u79bb\u6388\u6743\u786e\u8ba4\u4e0e\u8bbe\u5907\u7801\u6821\u9a8c\u9875\u9762",source:"@site/docs/zh-cn/spring-authorization-server/15-SAS-Separate-Consent-And-Device-Authorize-Page.md",sourceDirName:"zh-cn/spring-authorization-server",slug:"/zh-cn/spring-authorization-server/SAS-Separate-Consent-And-Device-Authorize-Page",permalink:"/light-docusaurus/docs/zh-cn/spring-authorization-server/SAS-Separate-Consent-And-Device-Authorize-Page",draft:!1,unlisted:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/docs/zh-cn/spring-authorization-server/15-SAS-Separate-Consent-And-Device-Authorize-Page.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{},sidebar:"troch",previous:{title:"SAS-Wechat-Login",permalink:"/light-docusaurus/docs/zh-cn/spring-authorization-server/SAS-Wechat-Login"},next:{title:"SAS-Spring-Cloud-Gateway",permalink:"/light-docusaurus/docs/zh-cn/spring-authorization-server/SAS-Spring-Cloud-Gateway"}},c={},u=[{value:"\u4e00\u3001\u524d\u8a00",id:"\u4e00\u524d\u8a00",level:2},{value:"\u4e8c\u3001\u7f16\u7801",id:"\u4e8c\u7f16\u7801",level:2},{value:"1. \u9700\u8981\u4fee\u6539\u7684\u5185\u5bb9",id:"1-\u9700\u8981\u4fee\u6539\u7684\u5185\u5bb9",level:3},{value:"2. \u91cd\u5b9a\u5411\u81f3\u6388\u6743\u786e\u8ba4\u9875\u9762\u65f6\u76f4\u63a5\u643a\u5e26\u76f8\u5173\u53c2\u6570\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9879\u76ee\u4e2d",id:"2-\u91cd\u5b9a\u5411\u81f3\u6388\u6743\u786e\u8ba4\u9875\u9762\u65f6\u76f4\u63a5\u643a\u5e26\u76f8\u5173\u53c2\u6570\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9879\u76ee\u4e2d",level:3},{value:"2. \u63d0\u4f9b\u63a5\u53e3\u67e5\u8be2\u767b\u5f55\u7528\u6237\u5728\u53d1\u8d77\u6388\u6743\u7684\u5ba2\u6237\u7aef\u4e2d\u76f8\u5173scope\u4fe1\u606f",id:"2-\u63d0\u4f9b\u63a5\u53e3\u67e5\u8be2\u767b\u5f55\u7528\u6237\u5728\u53d1\u8d77\u6388\u6743\u7684\u5ba2\u6237\u7aef\u4e2d\u76f8\u5173scope\u4fe1\u606f",level:3},{value:"1. \u5728<code>AuthorizationController</code>\u4e2d\u7f16\u5199<code>/oauth2/consent/parameters</code>\u63a5\u53e3",id:"1-\u5728authorizationcontroller\u4e2d\u7f16\u5199oauth2consentparameters\u63a5\u53e3",level:4},{value:"2. \u4fee\u6539<code>/oauth2/consent</code>\u63a5\u53e3",id:"2-\u4fee\u6539oauth2consent\u63a5\u53e3",level:4},{value:"3. \u7f16\u5199\u516c\u5171\u65b9\u6cd5<code>getConsentParameters</code>",id:"3-\u7f16\u5199\u516c\u5171\u65b9\u6cd5getconsentparameters",level:4},{value:"3. \u91cd\u5b9a\u5411\u81f3\u8bbe\u5907\u7801\u6821\u9a8c\u9875\u9762\u65f6\u643a\u5e26\u5f53\u524d<code>sessionId</code>(<code>nonceId</code>)\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9879\u76ee\u4e2d",id:"3-\u91cd\u5b9a\u5411\u81f3\u8bbe\u5907\u7801\u6821\u9a8c\u9875\u9762\u65f6\u643a\u5e26\u5f53\u524dsessionidnonceid\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9879\u76ee\u4e2d",level:3},{value:"4. \u7f16\u5199\u6388\u6743\u786e\u8ba4\u5931\u8d25\u5904\u7406\u7c7b\uff0c\u5728\u8c03\u7528\u786e\u8ba4\u6388\u6743\u63a5\u53e3\u5931\u8d25\u65f6\u54cd\u5e94json",id:"4-\u7f16\u5199\u6388\u6743\u786e\u8ba4\u5931\u8d25\u5904\u7406\u7c7b\u5728\u8c03\u7528\u786e\u8ba4\u6388\u6743\u63a5\u53e3\u5931\u8d25\u65f6\u54cd\u5e94json",level:3},{value:"5. \u7f16\u5199\u6388\u6743\u6210\u529f\u5904\u7406\u7c7b\uff0c\u5728\u8c03\u7528\u6388\u6743\u786e\u8ba4\u63a5\u53e3\u6210\u529f\u65f6\u54cd\u5e94json",id:"5-\u7f16\u5199\u6388\u6743\u6210\u529f\u5904\u7406\u7c7b\u5728\u8c03\u7528\u6388\u6743\u786e\u8ba4\u63a5\u53e3\u6210\u529f\u65f6\u54cd\u5e94json",level:3},{value:"6. \u7f16\u5199\u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u54cd\u5e94\u7c7b\uff0c\u5728\u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u540e\u54cd\u5e94json",id:"6-\u7f16\u5199\u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u54cd\u5e94\u7c7b\u5728\u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u540e\u54cd\u5e94json",level:3},{value:"7. \u4fee\u6539\u91cd\u5b9a\u5411\u81f3\u767b\u5f55\u9875\u9762\u5904\u7406\uff0c\u517c\u5bb9\u5728\u8bf7\u6c42\u6821\u9a8c\u8bbe\u5907\u7801\u65f6\u767b\u5f55\u4fe1\u606f\u8fc7\u671f\u5904\u7406",id:"7-\u4fee\u6539\u91cd\u5b9a\u5411\u81f3\u767b\u5f55\u9875\u9762\u5904\u7406\u517c\u5bb9\u5728\u8bf7\u6c42\u6821\u9a8c\u8bbe\u5907\u7801\u65f6\u767b\u5f55\u4fe1\u606f\u8fc7\u671f\u5904\u7406",level:3},{value:"8. \u5c06\u4ee5\u4e0a\u5185\u5bb9\u6dfb\u52a0\u81f3\u8ba4\u8bc1\u670d\u52a1\u914d\u7f6e\u4e2d",id:"8-\u5c06\u4ee5\u4e0a\u5185\u5bb9\u6dfb\u52a0\u81f3\u8ba4\u8bc1\u670d\u52a1\u914d\u7f6e\u4e2d",level:3},{value:"9. \u524d\u7aef\u9879\u76ee\u4e2d\u7f16\u5199\u6388\u6743\u786e\u8ba4\u3001\u8bbe\u5907\u7801\u6821\u9a8c\u3001\u8bbe\u5907\u7801\u6821\u9a8c\u6210\u529f\u9875\u9762",id:"9-\u524d\u7aef\u9879\u76ee\u4e2d\u7f16\u5199\u6388\u6743\u786e\u8ba4\u8bbe\u5907\u7801\u6821\u9a8c\u8bbe\u5907\u7801\u6821\u9a8c\u6210\u529f\u9875\u9762",level:3},{value:"1. \u7f16\u5199\u6388\u6743\u786e\u8ba4\u9875\u9762<code>Consent.vue</code>",id:"1-\u7f16\u5199\u6388\u6743\u786e\u8ba4\u9875\u9762consentvue",level:4},{value:"2. \u7f16\u5199\u8bbe\u5907\u7801\u9a8c\u8bc1\u9875\u9762<code>Activate.vue</code>",id:"2-\u7f16\u5199\u8bbe\u5907\u7801\u9a8c\u8bc1\u9875\u9762activatevue",level:4},{value:"3. \u7f16\u5199\u8bbe\u5907\u7801\u9a8c\u8bc1\u6210\u529f\u9875\u9762",id:"3-\u7f16\u5199\u8bbe\u5907\u7801\u9a8c\u8bc1\u6210\u529f\u9875\u9762",level:4},{value:"4. <code>vue-router</code>\u8def\u7531\u914d\u7f6e<code>index.ts</code>",id:"4-vue-router\u8def\u7531\u914d\u7f6eindexts",level:4},{value:"10. \u9644\u4e00\u4e0b\u5e38\u91cf\u7c7b<code>SecurityConstants</code>",id:"10-\u9644\u4e00\u4e0b\u5e38\u91cf\u7c7bsecurityconstants",level:3},{value:"\u4e09\u3001\u6d4b\u8bd5",id:"\u4e09\u6d4b\u8bd5",level:2},{value:"1. \u6388\u6743\u786e\u8ba4",id:"1-\u6388\u6743\u786e\u8ba4",level:3},{value:"1. \u7ec4\u88c5url\u53d1\u8d77\u6388\u6743\u8bf7\u6c42",id:"1-\u7ec4\u88c5url\u53d1\u8d77\u6388\u6743\u8bf7\u6c42",level:4},{value:"2. \u68c0\u6d4b\u5230\u672a\u767b\u5f55\uff0c\u91cd\u5b9a\u5411\u81f3vue\u9879\u76ee\u7684\u767b\u5f55\u9875\u9762",id:"2-\u68c0\u6d4b\u5230\u672a\u767b\u5f55\u91cd\u5b9a\u5411\u81f3vue\u9879\u76ee\u7684\u767b\u5f55\u9875\u9762",level:4},{value:"3. \u8f93\u5165\u8d26\u53f7\u5bc6\u7801\u63d0\u4ea4",id:"3-\u8f93\u5165\u8d26\u53f7\u5bc6\u7801\u63d0\u4ea4",level:4},{value:"4. \u6388\u6743\u786e\u8ba4\u63d0\u4ea4",id:"4-\u6388\u6743\u786e\u8ba4\u63d0\u4ea4",level:4},{value:"2. \u8bbe\u5907\u6388\u6743",id:"2-\u8bbe\u5907\u6388\u6743",level:3},{value:"1. \u8bbe\u5907\u53d1\u8d77\u6388\u6743\u8bf7\u6c42\uff0c\u643a\u5e26\u8981\u6c42\u7684\u53c2\u6570\u8bf7\u6c42<code>/oauth2/device_authorization</code>\u63a5\u53e3",id:"1-\u8bbe\u5907\u53d1\u8d77\u6388\u6743\u8bf7\u6c42\u643a\u5e26\u8981\u6c42\u7684\u53c2\u6570\u8bf7\u6c42oauth2device_authorization\u63a5\u53e3",level:4},{value:"2. \u8bbf\u95eeverification_uri\u6216\u8005verification_uri_complete",id:"2-\u8bbf\u95eeverification_uri\u6216\u8005verification_uri_complete",level:4},{value:"3. \u8f93\u5165user_code\u5e76\u63d0\u4ea4",id:"3-\u8f93\u5165user_code\u5e76\u63d0\u4ea4",level:4},{value:"4. \u91cd\u5b9a\u5411\u81f3\u7528\u6237\u6388\u6743\u786e\u8ba4\u9875\u9762",id:"4-\u91cd\u5b9a\u5411\u81f3\u7528\u6237\u6388\u6743\u786e\u8ba4\u9875\u9762",level:4},{value:"5. \u6388\u6743\u6210\u529f\u540e\u8df3\u8f6c\u81f3\u6210\u529f\u9875\u9762",id:"5-\u6388\u6743\u6210\u529f\u540e\u8df3\u8f6c\u81f3\u6210\u529f\u9875\u9762",level:4},{value:"6. \u8bbe\u5907\u53d1\u8d77\u8bf7\u6c42\u7528\u8bbe\u5907\u7801\u6362\u53d6token\uff0c\u8bf7\u6c42<code>/oauth2/token</code>\u63a5\u53e3",id:"6-\u8bbe\u5907\u53d1\u8d77\u8bf7\u6c42\u7528\u8bbe\u5907\u7801\u6362\u53d6token\u8bf7\u6c42oauth2token\u63a5\u53e3",level:4},{value:"\u56db\u3001\u6700\u540e",id:"\u56db\u6700\u540e",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://juejin.cn/post/7262317630307205176",children:"Spring Authorization Server\u5165\u95e8 (\u5341\u4e94) \u5206\u79bb\u6388\u6743\u786e\u8ba4\u4e0e\u8bbe\u5907\u7801\u6821\u9a8c\u9875\u9762"})}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["2023-12-01\u4fee\u6539\uff1a\u5728",(0,r.jsx)(n.a,{href:"https://gitee.com/vains-Sofia/authorization-example/tree/session-data-redis",children:"session-data-redis(Github)"}),"\u5206\u652f\u4e2d\u6dfb\u52a0\u4e86\u57fa\u4e8e",(0,r.jsx)(n.code,{children:"spring-session-data-redis"}),"\u7684\u5b9e\u73b0\uff0c\u65e0\u9700\u501f\u52a9",(0,r.jsx)(n.code,{children:"nonceId"}),"\u6765\u4fdd\u6301\u8ba4\u8bc1\u72b6\u6001\uff0c\u8be5\u5206\u652f\u5df2\u53bb\u9664\u6240\u6709",(0,r.jsx)(n.code,{children:"nonceId"}),"\u76f8\u5173\u5185\u5bb9\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f",(0,r.jsx)(n.code,{children:"axios"}),"\u5728\u521d\u59cb\u5316\u65f6\u9700\u8981\u6dfb\u52a0\u914d\u7f6e",(0,r.jsx)(n.code,{children:"withCredentials: true"}),"\uff0c\u8ba9\u8bf7\u6c42\u643a\u5e26",(0,r.jsx)(n.code,{children:"cookie"}),"\u3002\u5f53\u7136\u4e00\u4e9b\u54cd\u5e94json\u7684\u5904\u7406\u8fd8\u662f\u4f7f\u7528\u4e0b\u65b9\u7684\u5185\u5bb9\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u4e00\u524d\u8a00",children:"\u4e00\u3001\u524d\u8a00"}),"\n",(0,r.jsxs)(n.p,{children:["\u5728\u4e4b\u524d\u7684\u6587\u7ae0(",(0,r.jsx)(n.a,{href:"https://juejin.cn/post/7254096495184134181",children:"\u5b9e\u73b0\u6388\u6743\u7801\u6a21\u5f0f\u4f7f\u7528\u524d\u540e\u7aef\u5206\u79bb\u7684\u767b\u5f55\u9875\u9762"}),")\u4e2d\u5b9e\u73b0\u4e86\u524d\u540e\u7aef\u5206\u79bb\u7684\u767b\u5f55\u9875\u9762\uff0c\u4f46\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u53ea\u5206\u79bb\u4e86\u767b\u5f55\u9875\u9762\uff0c\u9274\u4e8e\u90e8\u5206\u8bfb\u8005\u597d\u5947\u6388\u6743\u786e\u8ba4\u9875\u9762\u5206\u79bb\u7684\u5b9e\u73b0\uff0c\u5c31\u5b9e\u73b0\u4e00\u4e0b\u6388\u6743\u786e\u8ba4\u9875\u9762\u7684\u5206\u79bb\uff0c\u540c\u65f6\u8bbe\u5907\u7801\u6d41\u7a0b\u7684\u6388\u6743\u786e\u8ba4\u9875\u9762\u4e0e\u6388\u6743\u7801\u6d41\u7a0b\u7684\u6388\u6743\u786e\u8ba4\u9875\u9762\u662f\u540c\u4e00\u4e2a\uff0c\u8fd9\u91cc\u4e5f\u9700\u8981\u517c\u5bb9\u4e00\u4e0b\uff0c\u8fd8\u6709\u5c31\u662f\u8bbe\u5907\u7801\u6d41\u7a0b\u4e2d\u6709\u4e00\u4e2a\u6821\u9a8c\u8bbe\u5907\u7801\u7684\u9875\u9762\uff0c\u8fd9\u91cc\u4e5f\u9700\u8981\u5206\u79bb\u51fa\u6765\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u524d\u6587\u4e2d\u6709\u63d0\u5230\uff0c\u5728\u524d\u540e\u7aef\u5206\u79bb\u7684\u6a21\u5f0f\u4e0b\uff0c\u5728\u9875\u9762\u53d1\u8d77\u7684\u8bf7\u6c42\u9700\u8981\u54cd\u5e94json\u4e0d\u80fd\u91cd\u5b9a\u5411\u4e86\uff0c\u6240\u4ee5\u9700\u8981\u4fee\u6539\u76f8\u5173\u63a5\u53e3\u8c03\u7528\u6210\u529f\u540e\u54cd\u5e94json\u3002\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u3002"}),"\n",(0,r.jsx)(n.h2,{id:"\u4e8c\u7f16\u7801",children:"\u4e8c\u3001\u7f16\u7801"}),"\n",(0,r.jsx)(n.h3,{id:"1-\u9700\u8981\u4fee\u6539\u7684\u5185\u5bb9",children:"1. \u9700\u8981\u4fee\u6539\u7684\u5185\u5bb9"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u91cd\u5b9a\u5411\u81f3\u6388\u6743\u786e\u8ba4\u9875\u9762\u65f6\u76f4\u63a5\u643a\u5e26\u76f8\u5173\u53c2\u6570\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9879\u76ee\u4e2d"}),"\n",(0,r.jsx)(n.li,{children:"\u63d0\u4f9b\u63a5\u53e3\u67e5\u8be2\u767b\u5f55\u7528\u6237\u5728\u53d1\u8d77\u6388\u6743\u7684\u5ba2\u6237\u7aef\u4e2d\u76f8\u5173scope\u4fe1\u606f"}),"\n",(0,r.jsxs)(n.li,{children:["\u91cd\u5b9a\u5411\u81f3\u8bbe\u5907\u7801\u6821\u9a8c\u9875\u9762\u65f6\u643a\u5e26\u5f53\u524d",(0,r.jsx)(n.code,{children:"sessionId"}),"(",(0,r.jsx)(n.code,{children:"nonceId"}),")\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9879\u76ee\u4e2d"]}),"\n",(0,r.jsx)(n.li,{children:"\u7f16\u5199\u6388\u6743\u786e\u8ba4\u5931\u8d25\u5904\u7406\u7c7b\uff0c\u5728\u8c03\u7528\u786e\u8ba4\u6388\u6743\u63a5\u53e3\u5931\u8d25\u65f6\u54cd\u5e94json"}),"\n",(0,r.jsx)(n.li,{children:"\u7f16\u5199\u6388\u6743\u6210\u529f\u5904\u7406\u7c7b\uff0c\u5728\u8c03\u7528\u6388\u6743\u786e\u8ba4\u63a5\u53e3\u6210\u529f\u65f6\u54cd\u5e94json"}),"\n",(0,r.jsx)(n.li,{children:"\u7f16\u5199\u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u54cd\u5e94\u7c7b\uff0c\u5728\u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u540e\u54cd\u5e94json"}),"\n",(0,r.jsx)(n.li,{children:"\u4fee\u6539\u91cd\u5b9a\u5411\u81f3\u767b\u5f55\u9875\u9762\u5904\u7406\uff0c\u517c\u5bb9\u5728\u8bf7\u6c42\u6821\u9a8c\u8bbe\u5907\u7801\u65f6\u767b\u5f55\u4fe1\u606f\u8fc7\u671f\u5904\u7406"}),"\n",(0,r.jsx)(n.li,{children:"\u5c06\u4ee5\u4e0a\u5185\u5bb9\u6dfb\u52a0\u81f3\u8ba4\u8bc1\u670d\u52a1\u914d\u7f6e\u4e2d"}),"\n",(0,r.jsx)(n.li,{children:"\u524d\u7aef\u9879\u76ee\u4e2d\u7f16\u5199\u6388\u6743\u786e\u8ba4\u3001\u8bbe\u5907\u7801\u6821\u9a8c\u3001\u8bbe\u5907\u7801\u6821\u9a8c\u6210\u529f\u9875\u9762"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-\u91cd\u5b9a\u5411\u81f3\u6388\u6743\u786e\u8ba4\u9875\u9762\u65f6\u76f4\u63a5\u643a\u5e26\u76f8\u5173\u53c2\u6570\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9879\u76ee\u4e2d",children:"2. \u91cd\u5b9a\u5411\u81f3\u6388\u6743\u786e\u8ba4\u9875\u9762\u65f6\u76f4\u63a5\u643a\u5e26\u76f8\u5173\u53c2\u6570\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9879\u76ee\u4e2d"}),"\n",(0,r.jsxs)(n.p,{children:["\u5728",(0,r.jsx)(n.code,{children:"AuthorizationController"}),"\u4e2d\u7f16\u5199",(0,r.jsx)(n.code,{children:"/oauth2/consent/redirect"}),"\u63a5\u53e3\uff0c\u501f\u52a9\u8ba4\u8bc1\u670d\u52a1\u8df3\u8f6c\u81f3\u524d\u7aef\u7684\uff0c\u8df3\u8f6c\u65f6\u643a\u5e26sessionId\u4fdd\u6301\u767b\u5f55\u72b6\u6001"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@SneakyThrows\n@ResponseBody\n@GetMapping(value = "/oauth2/consent/redirect")\npublic Result<String> consentRedirect(HttpSession session,\n                                      HttpServletRequest request,\n                                      HttpServletResponse response,\n                                      @RequestParam(OAuth2ParameterNames.SCOPE) String scope,\n                                      @RequestParam(OAuth2ParameterNames.STATE) String state,\n                                      @RequestParam(OAuth2ParameterNames.CLIENT_ID) String clientId,\n                                      @RequestHeader(name = NONCE_HEADER_NAME, required = false) String nonceId,\n                                      @RequestParam(name = OAuth2ParameterNames.USER_CODE, required = false) String userCode) {\n\n    // \u643a\u5e26\u5f53\u524d\u8bf7\u6c42\u53c2\u6570\u4e0enonceId\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9875\u9762\n    UriComponentsBuilder uriBuilder = UriComponentsBuilder\n            .fromUriString(CONSENT_PAGE_URI)\n            .queryParam(OAuth2ParameterNames.SCOPE, UriUtils.encode(scope, StandardCharsets.UTF_8))\n            .queryParam(OAuth2ParameterNames.STATE, UriUtils.encode(state, StandardCharsets.UTF_8))\n            .queryParam(OAuth2ParameterNames.CLIENT_ID, clientId)\n            .queryParam(OAuth2ParameterNames.USER_CODE, userCode)\n            .queryParam(NONCE_HEADER_NAME, ObjectUtils.isEmpty(nonceId) ? session.getId() : nonceId);\n\n    String uriString = uriBuilder.build(Boolean.TRUE).toUriString();\n    if (ObjectUtils.isEmpty(userCode) || !UrlUtils.isAbsoluteUrl(DEVICE_ACTIVATE_URI)) {\n        // \u4e0d\u662f\u8bbe\u5907\u7801\u6a21\u5f0f\u6216\u8005\u8bbe\u5907\u7801\u9a8c\u8bc1\u9875\u9762\u4e0d\u662f\u524d\u540e\u7aef\u5206\u79bb\u7684\uff0c\u65e0\u9700\u8fd4\u56dejson\uff0c\u76f4\u63a5\u91cd\u5b9a\u5411\n        redirectStrategy.sendRedirect(request, response, uriString);\n        return null;\n    }\n    // \u517c\u5bb9\u8bbe\u5907\u7801\uff0c\u9700\u54cd\u5e94JSON\uff0c\u7531\u524d\u7aef\u8fdb\u884c\u8df3\u8f6c\n    return Result.success(uriString);\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-\u63d0\u4f9b\u63a5\u53e3\u67e5\u8be2\u767b\u5f55\u7528\u6237\u5728\u53d1\u8d77\u6388\u6743\u7684\u5ba2\u6237\u7aef\u4e2d\u76f8\u5173scope\u4fe1\u606f",children:"2. \u63d0\u4f9b\u63a5\u53e3\u67e5\u8be2\u767b\u5f55\u7528\u6237\u5728\u53d1\u8d77\u6388\u6743\u7684\u5ba2\u6237\u7aef\u4e2d\u76f8\u5173scope\u4fe1\u606f"}),"\n",(0,r.jsxs)(n.h4,{id:"1-\u5728authorizationcontroller\u4e2d\u7f16\u5199oauth2consentparameters\u63a5\u53e3",children:["1. \u5728",(0,r.jsx)(n.code,{children:"AuthorizationController"}),"\u4e2d\u7f16\u5199",(0,r.jsx)(n.code,{children:"/oauth2/consent/parameters"}),"\u63a5\u53e3"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@ResponseBody\n@GetMapping(value = "/oauth2/consent/parameters")\npublic Result<Map<String, Object>> consentParameters(Principal principal,\n                                                     @RequestParam(OAuth2ParameterNames.CLIENT_ID) String clientId,\n                                                     @RequestParam(OAuth2ParameterNames.SCOPE) String scope,\n                                                     @RequestParam(OAuth2ParameterNames.STATE) String state,\n                                                     @RequestParam(name = OAuth2ParameterNames.USER_CODE, required = false) String userCode) {\n\n    // \u83b7\u53d6consent\u9875\u9762\u6240\u9700\u7684\u53c2\u6570\n    Map<String, Object> consentParameters = getConsentParameters(scope, state, clientId, userCode, principal);\n\n    return Result.success(consentParameters);\n}\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"2-\u4fee\u6539oauth2consent\u63a5\u53e3",children:["2. \u4fee\u6539",(0,r.jsx)(n.code,{children:"/oauth2/consent"}),"\u63a5\u53e3"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@GetMapping(value = "/oauth2/consent")\npublic String consent(Principal principal, Model model,\n                      @RequestParam(OAuth2ParameterNames.CLIENT_ID) String clientId,\n                      @RequestParam(OAuth2ParameterNames.SCOPE) String scope,\n                      @RequestParam(OAuth2ParameterNames.STATE) String state,\n                      @RequestParam(name = OAuth2ParameterNames.USER_CODE, required = false) String userCode) {\n\n    // \u83b7\u53d6consent\u9875\u9762\u6240\u9700\u7684\u53c2\u6570\n    Map<String, Object> consentParameters = getConsentParameters(scope, state, clientId, userCode, principal);\n    // \u8f6c\u81f3model\u4e2d\uff0c\u8ba9\u6846\u67b6\u6e32\u67d3\u9875\u9762\n    consentParameters.forEach(model::addAttribute);\n\n    return "consent";\n}\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"3-\u7f16\u5199\u516c\u5171\u65b9\u6cd5getconsentparameters",children:["3. \u7f16\u5199\u516c\u5171\u65b9\u6cd5",(0,r.jsx)(n.code,{children:"getConsentParameters"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'/**\n * \u6839\u636e\u6388\u6743\u786e\u8ba4\u76f8\u5173\u53c2\u6570\u83b7\u53d6\u6388\u6743\u786e\u8ba4\u4e0e\u672a\u786e\u8ba4\u7684scope\u76f8\u5173\u53c2\u6570\n *\n * @param scope     scope\u6743\u9650\n * @param state     state\n * @param clientId  \u5ba2\u6237\u7aefid\n * @param userCode  \u8bbe\u5907\u7801\u6388\u6743\u6d41\u7a0b\u4e2d\u7684\u7528\u6237\u7801\n * @param principal \u5f53\u524d\u8ba4\u8bc1\u4fe1\u606f\n * @return \u9875\u9762\u6240\u9700\u6570\u636e\n */\nprivate Map<String, Object> getConsentParameters(String scope,\n                                                 String state,\n                                                 String clientId,\n                                                 String userCode,\n                                                 Principal principal) {\n    // Remove scopes that were already approved\n    Set<String> scopesToApprove = new HashSet<>();\n    Set<String> previouslyApprovedScopes = new HashSet<>();\n    RegisteredClient registeredClient = this.registeredClientRepository.findByClientId(clientId);\n    if (registeredClient == null) {\n        throw new RuntimeException("\u5ba2\u6237\u7aef\u4e0d\u5b58\u5728");\n    }\n    OAuth2AuthorizationConsent currentAuthorizationConsent =\n            this.authorizationConsentService.findById(registeredClient.getId(), principal.getName());\n    Set<String> authorizedScopes;\n    if (currentAuthorizationConsent != null) {\n        authorizedScopes = currentAuthorizationConsent.getScopes();\n    } else {\n        authorizedScopes = Collections.emptySet();\n    }\n    for (String requestedScope : StringUtils.delimitedListToStringArray(scope, " ")) {\n        if (OidcScopes.OPENID.equals(requestedScope)) {\n            continue;\n        }\n        if (authorizedScopes.contains(requestedScope)) {\n            previouslyApprovedScopes.add(requestedScope);\n        } else {\n            scopesToApprove.add(requestedScope);\n        }\n    }\n\n    Map<String, Object> parameters = new HashMap<>(7);\n    parameters.put("clientId", registeredClient.getClientId());\n    parameters.put("clientName", registeredClient.getClientName());\n    parameters.put("state", state);\n    parameters.put("scopes", withDescription(scopesToApprove));\n    parameters.put("previouslyApprovedScopes", withDescription(previouslyApprovedScopes));\n    parameters.put("principalName", principal.getName());\n    parameters.put("userCode", userCode);\n    if (StringUtils.hasText(userCode)) {\n        parameters.put("requestURI", "/oauth2/device_verification");\n    } else {\n        parameters.put("requestURI", "/oauth2/authorize");\n    }\n    return parameters;\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"3-\u91cd\u5b9a\u5411\u81f3\u8bbe\u5907\u7801\u6821\u9a8c\u9875\u9762\u65f6\u643a\u5e26\u5f53\u524dsessionidnonceid\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9879\u76ee\u4e2d",children:["3. \u91cd\u5b9a\u5411\u81f3\u8bbe\u5907\u7801\u6821\u9a8c\u9875\u9762\u65f6\u643a\u5e26\u5f53\u524d",(0,r.jsx)(n.code,{children:"sessionId"}),"(",(0,r.jsx)(n.code,{children:"nonceId"}),")\u91cd\u5b9a\u5411\u81f3\u524d\u7aef\u9879\u76ee\u4e2d"]}),"\n",(0,r.jsxs)(n.p,{children:["\u5728",(0,r.jsx)(n.code,{children:"AuthorizationController"}),"\u4e2d\u7f16\u5199",(0,r.jsx)(n.code,{children:"/activate/redirect"}),"\u63a5\u53e3\uff0c\u7531\u8ba4\u8bc1\u670d\u52a1\u91cd\u5b9a\u5411\uff0c\u643a\u5e26",(0,r.jsx)(n.code,{children:"sessionId"}),"\u4ee5\u4fdd\u6301\u767b\u5f55\u72b6\u6001"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@GetMapping("/activate/redirect")\npublic String activateRedirect(HttpSession session,\n                               @RequestParam(value = "user_code", required = false) String userCode) {\n\n    UriComponentsBuilder uriBuilder = UriComponentsBuilder\n            .fromUriString(DEVICE_ACTIVATE_URI)\n            .queryParam("userCode", userCode)\n            .queryParam(NONCE_HEADER_NAME, session.getId());\n    return "redirect:" + uriBuilder.build(Boolean.TRUE).toUriString();\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4-\u7f16\u5199\u6388\u6743\u786e\u8ba4\u5931\u8d25\u5904\u7406\u7c7b\u5728\u8c03\u7528\u786e\u8ba4\u6388\u6743\u63a5\u53e3\u5931\u8d25\u65f6\u54cd\u5e94json",children:"4. \u7f16\u5199\u6388\u6743\u786e\u8ba4\u5931\u8d25\u5904\u7406\u7c7b\uff0c\u5728\u8c03\u7528\u786e\u8ba4\u6388\u6743\u63a5\u53e3\u5931\u8d25\u65f6\u54cd\u5e94json"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.authorization.handler;\n\nimport com.example.model.Result;\nimport com.example.util.JsonUtils;\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport org.springframework.http.HttpMethod;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.MediaType;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.AuthenticationException;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.oauth2.core.OAuth2AuthenticationException;\nimport org.springframework.security.oauth2.core.OAuth2Error;\nimport org.springframework.security.web.authentication.AuthenticationFailureHandler;\nimport org.springframework.security.web.util.UrlUtils;\n\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\n\nimport static com.example.constant.SecurityConstants.CONSENT_PAGE_URI;\n\n/**\n * \u6388\u6743\u786e\u8ba4\u5931\u8d25\u5904\u7406\n *\n * @author vains\n */\npublic class ConsentAuthenticationFailureHandler implements AuthenticationFailureHandler {\n\n    @Override\n    public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) throws IOException, ServletException {\n        // \u83b7\u53d6\u5f53\u524d\u8ba4\u8bc1\u4fe1\u606f\n        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n        // \u83b7\u53d6\u5177\u4f53\u7684\u5f02\u5e38\n        OAuth2AuthenticationException authenticationException = (OAuth2AuthenticationException) exception;\n        OAuth2Error error = authenticationException.getError();\n        // \u5f02\u5e38\u4fe1\u606f\n        String message;\n        if (authentication == null) {\n            message = "\u767b\u5f55\u5df2\u5931\u6548";\n        } else {\n            // \u7b2c\u4e8c\u6b21\u70b9\u51fb\u201c\u62d2\u7edd\u201d\u4f1a\u56e0\u4e3a\u4e4b\u524d\u53d6\u6d88\u65f6\u5220\u9664\u6388\u6743\u7533\u8bf7\u8bb0\u5f55\u800c\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u629b\u51fa [invalid_request] OAuth 2.0 Parameter: state\n            message = error.toString();\n        }\n\n        // \u6388\u6743\u786e\u8ba4\u9875\u9762\u63d0\u4ea4\u7684\u8bf7\u6c42\uff0c\u56e0\u4e3a\u6388\u6743\u7533\u8bf7\u4e0e\u6388\u6743\u786e\u8ba4\u63d0\u4ea4\u516c\u7528\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u8fd9\u91cc\u5224\u65ad\u4e00\u4e0b\n        if (request.getMethod().equals(HttpMethod.POST.name()) && UrlUtils.isAbsoluteUrl(CONSENT_PAGE_URI)) {\n            // \u5199\u56dejson\u5f02\u5e38\n            Result<Object> result = Result.error(HttpStatus.BAD_REQUEST.value(), message);\n            response.setCharacterEncoding(StandardCharsets.UTF_8.name());\n            response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n            response.getWriter().write(JsonUtils.objectCovertToJson(result));\n            response.getWriter().flush();\n        } else {\n            // \u5728\u5730\u5740\u680f\u8f93\u5165\u6388\u6743\u7533\u8bf7\u5730\u5740\u6216\u8bbe\u5907\u7801\u6d41\u7a0b\u7684\u9a8c\u8bc1\u5730\u5740\u9519\u8bef(user_code\u9519\u8bef)\n            response.sendError(HttpStatus.BAD_REQUEST.value(), error.toString());\n        }\n\n    }\n\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"5-\u7f16\u5199\u6388\u6743\u6210\u529f\u5904\u7406\u7c7b\u5728\u8c03\u7528\u6388\u6743\u786e\u8ba4\u63a5\u53e3\u6210\u529f\u65f6\u54cd\u5e94json",children:"5. \u7f16\u5199\u6388\u6743\u6210\u529f\u5904\u7406\u7c7b\uff0c\u5728\u8c03\u7528\u6388\u6743\u786e\u8ba4\u63a5\u53e3\u6210\u529f\u65f6\u54cd\u5e94json"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.authorization.handler;\n\nimport com.example.model.Result;\nimport com.example.util.JsonUtils;\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport org.springframework.http.HttpMethod;\nimport org.springframework.http.MediaType;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.oauth2.core.OAuth2Error;\nimport org.springframework.security.oauth2.core.endpoint.OAuth2ParameterNames;\nimport org.springframework.security.oauth2.server.authorization.authentication.OAuth2AuthorizationCodeRequestAuthenticationException;\nimport org.springframework.security.oauth2.server.authorization.authentication.OAuth2AuthorizationCodeRequestAuthenticationToken;\nimport org.springframework.security.web.DefaultRedirectStrategy;\nimport org.springframework.security.web.RedirectStrategy;\nimport org.springframework.security.web.authentication.AuthenticationSuccessHandler;\nimport org.springframework.security.web.util.UrlUtils;\nimport org.springframework.util.ObjectUtils;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.util.UriComponentsBuilder;\nimport org.springframework.web.util.UriUtils;\n\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\n\nimport static com.example.constant.SecurityConstants.CONSENT_PAGE_URI;\nimport static org.springframework.security.oauth2.core.OAuth2ErrorCodes.INVALID_REQUEST;\n\n/**\n * \u6388\u6743\u786e\u8ba4\u524d\u540e\u7aef\u5206\u79bb\u9002\u914d\u54cd\u5e94\u5904\u7406\n *\n * @author vains\n */\npublic class ConsentAuthorizationResponseHandler implements AuthenticationSuccessHandler {\n\n    private final RedirectStrategy redirectStrategy = new DefaultRedirectStrategy();\n\n    @Override\n    public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {\n        // \u83b7\u53d6\u5c06\u8981\u91cd\u5b9a\u5411\u7684\u56de\u8c03\u5730\u5740\n        String redirectUri = this.getAuthorizationResponseUri(authentication);\n        if (request.getMethod().equals(HttpMethod.POST.name()) && UrlUtils.isAbsoluteUrl(CONSENT_PAGE_URI)) {\n            // \u5982\u679c\u662fpost\u8bf7\u6c42\u5e76\u4e14CONSENT_PAGE_URI\u662f\u5b8c\u6574\u7684\u5730\u5740\uff0c\u5219\u54cd\u5e94json\n            Result<String> success = Result.success(redirectUri);\n            response.setCharacterEncoding(StandardCharsets.UTF_8.name());\n            response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n            response.getWriter().write(JsonUtils.objectCovertToJson(success));\n            response.getWriter().flush();\n            return;\n        }\n        // \u5426\u5219\u91cd\u5b9a\u5411\u81f3\u56de\u8c03\u5730\u5740\n        this.redirectStrategy.sendRedirect(request, response, redirectUri);\n    }\n\n    /**\n     * \u83b7\u53d6\u91cd\u5b9a\u5411\u7684\u56de\u8c03\u5730\u5740\n     *\n     * @param authentication \u8ba4\u8bc1\u4fe1\u606f\n     * @return \u5730\u5740\n     */\n    private String getAuthorizationResponseUri(Authentication authentication) {\n\n        OAuth2AuthorizationCodeRequestAuthenticationToken authorizationCodeRequestAuthentication =\n                (OAuth2AuthorizationCodeRequestAuthenticationToken) authentication;\n        if (ObjectUtils.isEmpty(authorizationCodeRequestAuthentication.getRedirectUri())) {\n            String authorizeUriError = "Redirect uri is not null";\n            throw new OAuth2AuthorizationCodeRequestAuthenticationException(new OAuth2Error(INVALID_REQUEST, authorizeUriError, (null)), authorizationCodeRequestAuthentication);\n        }\n\n        if (authorizationCodeRequestAuthentication.getAuthorizationCode() == null) {\n            String authorizeError = "AuthorizationCode is not null";\n            throw new OAuth2AuthorizationCodeRequestAuthenticationException(new OAuth2Error(INVALID_REQUEST, authorizeError, (null)), authorizationCodeRequestAuthentication);\n        }\n\n        UriComponentsBuilder uriBuilder = UriComponentsBuilder\n                .fromUriString(authorizationCodeRequestAuthentication.getRedirectUri())\n                .queryParam(OAuth2ParameterNames.CODE, authorizationCodeRequestAuthentication.getAuthorizationCode().getTokenValue());\n        if (StringUtils.hasText(authorizationCodeRequestAuthentication.getState())) {\n            uriBuilder.queryParam(\n                    OAuth2ParameterNames.STATE,\n                    UriUtils.encode(authorizationCodeRequestAuthentication.getState(), StandardCharsets.UTF_8));\n        }\n        // build(true) -> Components are explicitly encoded\n        return uriBuilder.build(true).toUriString();\n\n    }\n\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"6-\u7f16\u5199\u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u54cd\u5e94\u7c7b\u5728\u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u540e\u54cd\u5e94json",children:"6. \u7f16\u5199\u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u54cd\u5e94\u7c7b\uff0c\u5728\u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u540e\u54cd\u5e94json"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"package com.example.authorization.handler;\n\nimport com.example.model.Result;\nimport com.example.util.JsonUtils;\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport org.springframework.http.MediaType;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.web.authentication.AuthenticationSuccessHandler;\n\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\n\nimport static com.example.constant.SecurityConstants.DEVICE_ACTIVATED_URI;\n\n/**\n * \u6821\u9a8c\u8bbe\u5907\u7801\u6210\u529f\u54cd\u5e94\u7c7b\n *\n * @author vains\n */\npublic class DeviceAuthorizationResponseHandler implements AuthenticationSuccessHandler {\n\n    @Override\n    public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {\n        // \u5199\u56dejson\u6570\u636e\n        Result<Object> result = Result.success(DEVICE_ACTIVATED_URI);\n        response.setCharacterEncoding(StandardCharsets.UTF_8.name());\n        response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n        response.getWriter().write(JsonUtils.objectCovertToJson(result));\n        response.getWriter().flush();\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"7-\u4fee\u6539\u91cd\u5b9a\u5411\u81f3\u767b\u5f55\u9875\u9762\u5904\u7406\u517c\u5bb9\u5728\u8bf7\u6c42\u6821\u9a8c\u8bbe\u5907\u7801\u65f6\u767b\u5f55\u4fe1\u606f\u8fc7\u671f\u5904\u7406",children:"7. \u4fee\u6539\u91cd\u5b9a\u5411\u81f3\u767b\u5f55\u9875\u9762\u5904\u7406\uff0c\u517c\u5bb9\u5728\u8bf7\u6c42\u6821\u9a8c\u8bbe\u5907\u7801\u65f6\u767b\u5f55\u4fe1\u606f\u8fc7\u671f\u5904\u7406"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.authorization.handler;\n\nimport com.example.constant.SecurityConstants;\nimport com.example.model.Result;\nimport com.example.util.JsonUtils;\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.http.HttpMethod;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.MediaType;\nimport org.springframework.security.core.AuthenticationException;\nimport org.springframework.security.web.DefaultRedirectStrategy;\nimport org.springframework.security.web.RedirectStrategy;\nimport org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint;\nimport org.springframework.security.web.util.UrlUtils;\nimport org.springframework.util.ObjectUtils;\n\nimport java.io.IOException;\nimport java.net.URLEncoder;\nimport java.nio.charset.StandardCharsets;\n\nimport static com.example.constant.SecurityConstants.DEVICE_ACTIVATE_URI;\n\n/**\n * \u91cd\u5b9a\u5411\u81f3\u767b\u5f55\u5904\u7406\n *\n * @author vains\n */\n@Slf4j\npublic class LoginTargetAuthenticationEntryPoint extends LoginUrlAuthenticationEntryPoint {\n\n    private final RedirectStrategy redirectStrategy = new DefaultRedirectStrategy();\n\n    /**\n     * @param loginFormUrl URL where the login page can be found. Should either be\n     *                     relative to the web-app context path (include a leading {@code /}) or an absolute\n     *                     URL.\n     */\n    public LoginTargetAuthenticationEntryPoint(String loginFormUrl) {\n        super(loginFormUrl);\n    }\n\n    @Override\n    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n        String deviceVerificationUri = "/oauth2/device_verification";\n        // \u517c\u5bb9\u8bbe\u5907\u7801\u524d\u540e\u7aef\u5206\u79bb\n        if (request.getRequestURI().equals(deviceVerificationUri)\n                && request.getMethod().equals(HttpMethod.POST.name())\n                && UrlUtils.isAbsoluteUrl(DEVICE_ACTIVATE_URI)) {\n            // \u5982\u679c\u662f\u8bf7\u6c42\u9a8c\u8bc1\u8bbe\u5907\u6fc0\u6d3b\u7801(user_code)\u65f6\u672a\u767b\u5f55\u5e76\u4e14\u8bbe\u5907\u7801\u9a8c\u8bc1\u9875\u9762\u662f\u524d\u540e\u7aef\u5206\u79bb\u7684\u90a3\u79cd\u5219\u5199\u56dejson\n            Result<String> success = Result.error(HttpStatus.UNAUTHORIZED.value(), ("\u767b\u5f55\u5df2\u5931\u6548\uff0c\u8bf7\u91cd\u65b0\u6253\u5f00\u8bbe\u5907\u63d0\u4f9b\u7684\u9a8c\u8bc1\u5730\u5740"));\n            response.setCharacterEncoding(StandardCharsets.UTF_8.name());\n            response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n            response.getWriter().write(JsonUtils.objectCovertToJson(success));\n            response.getWriter().flush();\n            return;\n        }\n\n        // \u83b7\u53d6\u767b\u5f55\u8868\u5355\u7684\u5730\u5740\n        String loginForm = determineUrlToUseForThisRequest(request, response, authException);\n        if (!UrlUtils.isAbsoluteUrl(loginForm)) {\n            // \u4e0d\u662f\u7edd\u5bf9\u8def\u5f84\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\u5904\u7406\n            super.commence(request, response, authException);\n            return;\n        }\n\n        StringBuffer requestUrl = request.getRequestURL();\n        if (!ObjectUtils.isEmpty(request.getQueryString())) {\n            requestUrl.append("?").append(request.getQueryString());\n        }\n\n        // 2023-07-11\u6dfb\u52a0\u903b\u8f91\uff1a\u91cd\u5b9a\u5411\u5730\u5740\u6dfb\u52a0nonce\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u7684\u503c\u4e3asessionId\n        // \u7edd\u5bf9\u8def\u5f84\u5728\u91cd\u5b9a\u5411\u524d\u6dfb\u52a0target\u53c2\u6570\n        String targetParameter = URLEncoder.encode(requestUrl.toString(), StandardCharsets.UTF_8);\n        String targetUrl = loginForm + "?target=" + targetParameter + "&" + SecurityConstants.NONCE_HEADER_NAME + "=" + request.getSession(Boolean.FALSE).getId();\n        log.debug("\u91cd\u5b9a\u5411\u81f3\u524d\u540e\u7aef\u5206\u79bb\u7684\u767b\u5f55\u9875\u9762\uff1a{}", targetUrl);\n        this.redirectStrategy.sendRedirect(request, response, targetUrl);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"8-\u5c06\u4ee5\u4e0a\u5185\u5bb9\u6dfb\u52a0\u81f3\u8ba4\u8bc1\u670d\u52a1\u914d\u7f6e\u4e2d",children:"8. \u5c06\u4ee5\u4e0a\u5185\u5bb9\u6dfb\u52a0\u81f3\u8ba4\u8bc1\u670d\u52a1\u914d\u7f6e\u4e2d"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"AuthorizationConfig"}),"\u5b8c\u6574\u914d\u7f6e\u5982\u4e0b"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.config;\n\nimport com.example.authorization.device.DeviceClientAuthenticationConverter;\nimport com.example.authorization.device.DeviceClientAuthenticationProvider;\nimport com.example.authorization.federation.FederatedIdentityIdTokenCustomizer;\nimport com.example.authorization.handler.*;\nimport com.example.authorization.sms.SmsCaptchaGrantAuthenticationConverter;\nimport com.example.authorization.sms.SmsCaptchaGrantAuthenticationProvider;\nimport com.example.authorization.wechat.WechatAuthorizationRequestConsumer;\nimport com.example.authorization.wechat.WechatCodeGrantRequestEntityConverter;\nimport com.example.authorization.wechat.WechatMapAccessTokenResponseConverter;\nimport com.example.constant.RedisConstants;\nimport com.example.constant.SecurityConstants;\nimport com.example.support.RedisOperator;\nimport com.example.support.RedisSecurityContextRepository;\nimport com.example.util.SecurityUtils;\nimport com.nimbusds.jose.jwk.JWKSet;\nimport com.nimbusds.jose.jwk.RSAKey;\nimport com.nimbusds.jose.jwk.source.ImmutableJWKSet;\nimport com.nimbusds.jose.jwk.source.JWKSource;\nimport com.nimbusds.jose.proc.SecurityContext;\nimport lombok.RequiredArgsConstructor;\nimport lombok.SneakyThrows;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.http.MediaType;\nimport org.springframework.http.converter.FormHttpMessageConverter;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.security.access.annotation.Secured;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.Customizer;\nimport org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;\nimport org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.oauth2.client.endpoint.DefaultAuthorizationCodeTokenResponseClient;\nimport org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient;\nimport org.springframework.security.oauth2.client.endpoint.OAuth2AuthorizationCodeGrantRequest;\nimport org.springframework.security.oauth2.client.http.OAuth2ErrorResponseErrorHandler;\nimport org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\nimport org.springframework.security.oauth2.client.web.DefaultOAuth2AuthorizationRequestResolver;\nimport org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter;\nimport org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestResolver;\nimport org.springframework.security.oauth2.core.AuthorizationGrantType;\nimport org.springframework.security.oauth2.core.ClientAuthenticationMethod;\nimport org.springframework.security.oauth2.core.http.converter.OAuth2AccessTokenResponseHttpMessageConverter;\nimport org.springframework.security.oauth2.core.oidc.OidcScopes;\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\nimport org.springframework.security.oauth2.server.authorization.JdbcOAuth2AuthorizationConsentService;\nimport org.springframework.security.oauth2.server.authorization.JdbcOAuth2AuthorizationService;\nimport org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationConsentService;\nimport org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService;\nimport org.springframework.security.oauth2.server.authorization.client.JdbcRegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClient;\nimport org.springframework.security.oauth2.server.authorization.client.RegisteredClientRepository;\nimport org.springframework.security.oauth2.server.authorization.config.annotation.web.configuration.OAuth2AuthorizationServerConfiguration;\nimport org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer;\nimport org.springframework.security.oauth2.server.authorization.settings.AuthorizationServerSettings;\nimport org.springframework.security.oauth2.server.authorization.settings.ClientSettings;\nimport org.springframework.security.oauth2.server.authorization.token.JwtEncodingContext;\nimport org.springframework.security.oauth2.server.authorization.token.OAuth2TokenCustomizer;\nimport org.springframework.security.oauth2.server.authorization.token.OAuth2TokenGenerator;\nimport org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;\nimport org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;\nimport org.springframework.security.web.DefaultSecurityFilterChain;\nimport org.springframework.security.web.SecurityFilterChain;\nimport org.springframework.security.web.util.UrlUtils;\nimport org.springframework.security.web.util.matcher.MediaTypeRequestMatcher;\nimport org.springframework.util.ObjectUtils;\nimport org.springframework.web.client.RestTemplate;\nimport org.springframework.web.cors.CorsConfiguration;\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\nimport org.springframework.web.filter.CorsFilter;\n\nimport java.security.KeyPair;\nimport java.security.KeyPairGenerator;\nimport java.security.interfaces.RSAPrivateKey;\nimport java.security.interfaces.RSAPublicKey;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.UUID;\n\nimport static com.example.constant.SecurityConstants.CONSENT_PAGE_URI;\nimport static com.example.constant.SecurityConstants.DEVICE_ACTIVATE_URI;\n\n/**\n * \u8ba4\u8bc1\u914d\u7f6e\n * {@link EnableMethodSecurity} \u5f00\u542f\u5168\u5c40\u65b9\u6cd5\u8ba4\u8bc1\uff0c\u542f\u7528JSR250\u6ce8\u89e3\u652f\u6301\uff0c\u542f\u7528\u6ce8\u89e3 {@link Secured} \u652f\u6301\uff0c\n * \u5728Spring Security 6.0\u7248\u672c\u4e2d\u5c06@Configuration\u6ce8\u89e3\u4ece@EnableWebSecurity, @EnableMethodSecurity, @EnableGlobalMethodSecurity\n * \u548c @EnableGlobalAuthentication \u4e2d\u79fb\u9664\uff0c\u4f7f\u7528\u8fd9\u4e9b\u6ce8\u89e3\u9700\u624b\u52a8\u6dfb\u52a0 @Configuration \u6ce8\u89e3\n * {@link EnableWebSecurity} \u6ce8\u89e3\u6709\u4e24\u4e2a\u4f5c\u7528:\n * 1. \u52a0\u8f7d\u4e86WebSecurityConfiguration\u914d\u7f6e\u7c7b, \u914d\u7f6e\u5b89\u5168\u8ba4\u8bc1\u7b56\u7565\u3002\n * 2. \u52a0\u8f7d\u4e86AuthenticationConfiguration, \u914d\u7f6e\u4e86\u8ba4\u8bc1\u4fe1\u606f\u3002\n *\n * @author vains\n */\n@Configuration\n@EnableWebSecurity\n@RequiredArgsConstructor\n@EnableMethodSecurity(jsr250Enabled = true, securedEnabled = true)\npublic class AuthorizationConfig {\n\n    private final RedisOperator<String> redisOperator;\n\n    /**\n     * \u767b\u5f55\u5730\u5740\uff0c\u524d\u540e\u7aef\u5206\u79bb\u5c31\u586b\u5199\u5b8c\u6574\u7684url\u8def\u5f84\uff0c\u4e0d\u5206\u79bb\u586b\u5199\u76f8\u5bf9\u8def\u5f84\n     */\n    private final String LOGIN_URL = "http://127.0.0.1:5173/login";\n\n    private static final String CUSTOM_CONSENT_REDIRECT_URI = "/oauth2/consent/redirect";\n\n    private static final String CUSTOM_DEVICE_REDIRECT_URI = "/activate/redirect";\n\n    private final RedisSecurityContextRepository redisSecurityContextRepository;\n\n    /**\n     * \u914d\u7f6e\u7aef\u70b9\u7684\u8fc7\u6ee4\u5668\u94fe\n     *\n     * @param http spring security\u6838\u5fc3\u914d\u7f6e\u7c7b\n     * @return \u8fc7\u6ee4\u5668\u94fe\n     * @throws Exception \u629b\u51fa\n     */\n    @Bean\n    public SecurityFilterChain authorizationServerSecurityFilterChain(HttpSecurity http,\n                                                                      RegisteredClientRepository registeredClientRepository,\n                                                                      AuthorizationServerSettings authorizationServerSettings) throws Exception {\n        // \u914d\u7f6e\u9ed8\u8ba4\u7684\u8bbe\u7f6e\uff0c\u5ffd\u7565\u8ba4\u8bc1\u7aef\u70b9\u7684csrf\u6821\u9a8c\n        OAuth2AuthorizationServerConfiguration.applyDefaultSecurity(http);\n\n        // \u6dfb\u52a0\u8de8\u57df\u8fc7\u6ee4\u5668\n        http.addFilter(corsFilter());\n        // \u7981\u7528 csrf \u4e0e cors\n        http.csrf(AbstractHttpConfigurer::disable);\n        http.cors(AbstractHttpConfigurer::disable);\n\n        // \u65b0\u5efa\u8bbe\u5907\u7801converter\u548cprovider\n        DeviceClientAuthenticationConverter deviceClientAuthenticationConverter =\n                new DeviceClientAuthenticationConverter(\n                        authorizationServerSettings.getDeviceAuthorizationEndpoint());\n        DeviceClientAuthenticationProvider deviceClientAuthenticationProvider =\n                new DeviceClientAuthenticationProvider(registeredClientRepository);\n\n        // \u4f7f\u7528redis\u5b58\u50a8\u3001\u8bfb\u53d6\u767b\u5f55\u7684\u8ba4\u8bc1\u4fe1\u606f\n        http.securityContext(context -> context.securityContextRepository(redisSecurityContextRepository));\n\n        http.getConfigurer(OAuth2AuthorizationServerConfigurer.class)\n                // \u5f00\u542fOpenID Connect 1.0\u534f\u8bae\u76f8\u5173\u7aef\u70b9\n                .oidc(Customizer.withDefaults())\n                // \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7528\u6237\u786e\u8ba4\u6388\u6743\u9875\n                .authorizationEndpoint(authorizationEndpoint -> {\n                            // \u6821\u9a8c\u6388\u6743\u786e\u8ba4\u9875\u9762\u662f\u5426\u4e3a\u5b8c\u6574\u8def\u5f84\uff1b\u662f\u5426\u662f\u524d\u540e\u7aef\u5206\u79bb\u7684\u9875\u9762\n                            boolean absoluteUrl = UrlUtils.isAbsoluteUrl(CONSENT_PAGE_URI);\n                            // \u5982\u679c\u662f\u5206\u79bb\u9875\u9762\u5219\u91cd\u5b9a\u5411\uff0c\u5426\u5219\u8f6c\u53d1\u8bf7\u6c42\n                            authorizationEndpoint.consentPage(absoluteUrl ? CUSTOM_CONSENT_REDIRECT_URI : CONSENT_PAGE_URI);\n                            if (absoluteUrl) {\n                                // \u9002\u914d\u524d\u540e\u7aef\u5206\u79bb\u7684\u6388\u6743\u786e\u8ba4\u9875\u9762\uff0c\u6210\u529f/\u5931\u8d25\u54cd\u5e94json\n                                authorizationEndpoint.errorResponseHandler(new ConsentAuthenticationFailureHandler());\n                                authorizationEndpoint.authorizationResponseHandler(new ConsentAuthorizationResponseHandler());\n                            }\n                        }\n                )\n                // \u8bbe\u7f6e\u8bbe\u5907\u7801\u7528\u6237\u9a8c\u8bc1url(\u81ea\u5b9a\u4e49\u7528\u6237\u9a8c\u8bc1\u9875)\n                .deviceAuthorizationEndpoint(deviceAuthorizationEndpoint ->\n                        deviceAuthorizationEndpoint.verificationUri(UrlUtils.isAbsoluteUrl(DEVICE_ACTIVATE_URI) ? CUSTOM_DEVICE_REDIRECT_URI : DEVICE_ACTIVATE_URI)\n                )\n                // \u8bbe\u7f6e\u9a8c\u8bc1\u8bbe\u5907\u7801\u7528\u6237\u786e\u8ba4\u9875\u9762\n                .deviceVerificationEndpoint(deviceVerificationEndpoint -> {\n                            // \u6821\u9a8c\u6388\u6743\u786e\u8ba4\u9875\u9762\u662f\u5426\u4e3a\u5b8c\u6574\u8def\u5f84\uff1b\u662f\u5426\u662f\u524d\u540e\u7aef\u5206\u79bb\u7684\u9875\u9762\n                            boolean absoluteUrl = UrlUtils.isAbsoluteUrl(CONSENT_PAGE_URI);\n                            // \u5982\u679c\u662f\u5206\u79bb\u9875\u9762\u5219\u91cd\u5b9a\u5411\uff0c\u5426\u5219\u8f6c\u53d1\u8bf7\u6c42\n                            deviceVerificationEndpoint.consentPage(absoluteUrl ? CUSTOM_CONSENT_REDIRECT_URI : CONSENT_PAGE_URI);\n                            if (absoluteUrl) {\n                                // \u9002\u914d\u524d\u540e\u7aef\u5206\u79bb\u7684\u6388\u6743\u786e\u8ba4\u9875\u9762\uff0c\u5931\u8d25\u54cd\u5e94json\n                                deviceVerificationEndpoint.errorResponseHandler(new ConsentAuthenticationFailureHandler());\n                            }\n                            // \u5982\u679c\u6388\u6743\u7801\u9a8c\u8bc1\u9875\u9762\u6216\u8005\u6388\u6743\u786e\u8ba4\u9875\u9762\u662f\u524d\u540e\u7aef\u5206\u79bb\u7684\n                            if (UrlUtils.isAbsoluteUrl(DEVICE_ACTIVATE_URI) || absoluteUrl) {\n                                // \u6dfb\u52a0\u54cd\u5e94json\u5904\u7406\n                                deviceVerificationEndpoint.deviceVerificationResponseHandler(new DeviceAuthorizationResponseHandler());\n                            }\n                        }\n                )\n                .clientAuthentication(clientAuthentication ->\n                        // \u5ba2\u6237\u7aef\u8ba4\u8bc1\u6dfb\u52a0\u8bbe\u5907\u7801\u7684converter\u548cprovider\n                        clientAuthentication\n                                .authenticationConverter(deviceClientAuthenticationConverter)\n                                .authenticationProvider(deviceClientAuthenticationProvider)\n                );\n        http\n                // \u5f53\u672a\u767b\u5f55\u65f6\u8bbf\u95ee\u8ba4\u8bc1\u7aef\u70b9\u65f6\u91cd\u5b9a\u5411\u81f3login\u9875\u9762\n                .exceptionHandling((exceptions) -> exceptions\n                        .defaultAuthenticationEntryPointFor(\n                                new LoginTargetAuthenticationEntryPoint(LOGIN_URL),\n                                new MediaTypeRequestMatcher(MediaType.TEXT_HTML)\n                        )\n                )\n                // \u5904\u7406\u4f7f\u7528access token\u8bbf\u95ee\u7528\u6237\u4fe1\u606f\u7aef\u70b9\u548c\u5ba2\u6237\u7aef\u6ce8\u518c\u7aef\u70b9\n                .oauth2ResourceServer((resourceServer) -> resourceServer\n                        .jwt(Customizer.withDefaults()));\n\n        // \u81ea\u5b9a\u4e49\u77ed\u4fe1\u8ba4\u8bc1\u767b\u5f55\u8f6c\u6362\u5668\n        SmsCaptchaGrantAuthenticationConverter converter = new SmsCaptchaGrantAuthenticationConverter();\n        // \u81ea\u5b9a\u4e49\u77ed\u4fe1\u8ba4\u8bc1\u767b\u5f55\u8ba4\u8bc1\u63d0\u4f9b\n        SmsCaptchaGrantAuthenticationProvider provider = new SmsCaptchaGrantAuthenticationProvider();\n        http.getConfigurer(OAuth2AuthorizationServerConfigurer.class)\n                // \u8ba9\u8ba4\u8bc1\u670d\u52a1\u5668\u5143\u6570\u636e\u4e2d\u6709\u81ea\u5b9a\u4e49\u7684\u8ba4\u8bc1\u65b9\u5f0f\n                .authorizationServerMetadataEndpoint(metadata -> metadata.authorizationServerMetadataCustomizer(customizer -> customizer.grantType(SecurityConstants.GRANT_TYPE_SMS_CODE)))\n                // \u6dfb\u52a0\u81ea\u5b9a\u4e49grant_type\u2014\u2014\u77ed\u4fe1\u8ba4\u8bc1\u767b\u5f55\n                .tokenEndpoint(tokenEndpoint -> tokenEndpoint\n                        .accessTokenRequestConverter(converter)\n                        .authenticationProvider(provider));\n\n        DefaultSecurityFilterChain build = http.build();\n\n        // \u4ece\u6846\u67b6\u4e2d\u83b7\u53d6provider\u4e2d\u6240\u9700\u7684bean\n        OAuth2TokenGenerator<?> tokenGenerator = http.getSharedObject(OAuth2TokenGenerator.class);\n        AuthenticationManager authenticationManager = http.getSharedObject(AuthenticationManager.class);\n        OAuth2AuthorizationService authorizationService = http.getSharedObject(OAuth2AuthorizationService.class);\n        // \u4ee5\u4e0a\u4e09\u4e2abean\u5728build()\u65b9\u6cd5\u4e4b\u540e\u8c03\u7528\u662f\u56e0\u4e3a\u8c03\u7528build\u65b9\u6cd5\u65f6\u6846\u67b6\u4f1a\u5c1d\u8bd5\u83b7\u53d6\u8fd9\u4e9b\u7c7b\uff0c\n        // \u5982\u679c\u83b7\u53d6\u4e0d\u5230\u5219\u521d\u59cb\u5316\u4e00\u4e2a\u5b9e\u4f8b\u653e\u5165SharedObject\u4e2d\uff0c\u6240\u4ee5\u8981\u5728build\u65b9\u6cd5\u8c03\u7528\u4e4b\u540e\u83b7\u53d6\n        // \u5728\u901a\u8fc7set\u65b9\u6cd5\u8bbe\u7f6e\u8fdbprovider\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u5728build\u65b9\u6cd5\u4e4b\u540e\u8c03\u7528authenticationProvider(provider)\n        // \u6846\u67b6\u4f1a\u63d0\u793aunsupported_grant_type\uff0c\u56e0\u4e3a\u5df2\u7ecf\u521d\u59cb\u5316\u5b8c\u4e86\uff0c\u5728\u6dfb\u52a0\u5c31\u4e0d\u4f1a\u751f\u6548\u4e86\n        provider.setTokenGenerator(tokenGenerator);\n        provider.setAuthorizationService(authorizationService);\n        provider.setAuthenticationManager(authenticationManager);\n\n        return build;\n    }\n\n    /**\n     * \u914d\u7f6e\u8ba4\u8bc1\u76f8\u5173\u7684\u8fc7\u6ee4\u5668\u94fe(\u8d44\u6e90\u670d\u52a1\uff0c\u5ba2\u6237\u7aef\u914d\u7f6e)\n     *\n     * @param http spring security\u6838\u5fc3\u914d\u7f6e\u7c7b\n     * @return \u8fc7\u6ee4\u5668\u94fe\n     * @throws Exception \u629b\u51fa\n     */\n    @Bean\n    public SecurityFilterChain defaultSecurityFilterChain(HttpSecurity http, ClientRegistrationRepository clientRegistrationRepository) throws Exception {\n        // \u6dfb\u52a0\u8de8\u57df\u8fc7\u6ee4\u5668\n        http.addFilter(corsFilter());\n        // \u7981\u7528 csrf \u4e0e cors\n        http.csrf(AbstractHttpConfigurer::disable);\n        http.cors(AbstractHttpConfigurer::disable);\n        http.authorizeHttpRequests((authorize) -> authorize\n                        // \u653e\u884c\u9759\u6001\u8d44\u6e90\n                        .requestMatchers("/assets/**", "/webjars/**", "/login", "/getCaptcha", "/getSmsCaptcha", "/error", "/oauth2/consent/parameters").permitAll()\n                        .anyRequest().authenticated()\n                )\n                // \u6307\u5b9a\u767b\u5f55\u9875\u9762\n                .formLogin(formLogin -> {\n                            formLogin.loginPage("/login");\n                            if (UrlUtils.isAbsoluteUrl(LOGIN_URL)) {\n                                // \u7edd\u5bf9\u8def\u5f84\u4ee3\u8868\u662f\u524d\u540e\u7aef\u5206\u79bb\uff0c\u767b\u5f55\u6210\u529f\u548c\u5931\u8d25\u6539\u4e3a\u5199\u56dejson\uff0c\u4e0d\u91cd\u5b9a\u5411\u4e86\n                                formLogin.successHandler(new LoginSuccessHandler());\n                                formLogin.failureHandler(new LoginFailureHandler());\n                            }\n                        }\n                );\n        // \u6dfb\u52a0BearerTokenAuthenticationFilter\uff0c\u5c06\u8ba4\u8bc1\u670d\u52a1\u5f53\u505a\u4e00\u4e2a\u8d44\u6e90\u670d\u52a1\uff0c\u89e3\u6790\u8bf7\u6c42\u5934\u4e2d\u7684token\n        http.oauth2ResourceServer((resourceServer) -> resourceServer\n                .jwt(Customizer.withDefaults())\n                .accessDeniedHandler(SecurityUtils::exceptionHandler)\n                .authenticationEntryPoint(SecurityUtils::exceptionHandler)\n        );\n        // \u517c\u5bb9\u524d\u540e\u7aef\u5206\u79bb\u4e0e\u4e0d\u5206\u79bb\u914d\u7f6e\n        http\n                // \u5f53\u672a\u767b\u5f55\u65f6\u8bbf\u95ee\u8ba4\u8bc1\u7aef\u70b9\u65f6\u91cd\u5b9a\u5411\u81f3login\u9875\u9762\n                .exceptionHandling((exceptions) -> exceptions\n                        .defaultAuthenticationEntryPointFor(\n                                new LoginTargetAuthenticationEntryPoint(LOGIN_URL),\n                                new MediaTypeRequestMatcher(MediaType.TEXT_HTML)\n                        )\n                );\n        // \u8054\u5408\u8eab\u4efd\u8ba4\u8bc1\n        http.oauth2Login(oauth2Login -> oauth2Login\n                .loginPage(LOGIN_URL)\n                .authorizationEndpoint(authorization -> authorization\n                        .authorizationRequestResolver(this.authorizationRequestResolver(clientRegistrationRepository))\n                )\n                .tokenEndpoint(token -> token\n                        .accessTokenResponseClient(this.accessTokenResponseClient())\n                )\n        );\n\n        // \u4f7f\u7528redis\u5b58\u50a8\u3001\u8bfb\u53d6\u767b\u5f55\u7684\u8ba4\u8bc1\u4fe1\u606f\n        http.securityContext(context -> context.securityContextRepository(redisSecurityContextRepository));\n\n        return http.build();\n    }\n\n    /**\n     * AuthorizationRequest \u81ea\u5b9a\u4e49\u914d\u7f6e\n     *\n     * @param clientRegistrationRepository yml\u914d\u7f6e\u4e2d\u5ba2\u6237\u7aef\u4fe1\u606f\u5b58\u50a8\u7c7b\n     * @return OAuth2AuthorizationRequestResolver\n     */\n    private OAuth2AuthorizationRequestResolver authorizationRequestResolver(ClientRegistrationRepository clientRegistrationRepository) {\n        DefaultOAuth2AuthorizationRequestResolver authorizationRequestResolver =\n                new DefaultOAuth2AuthorizationRequestResolver(\n                        clientRegistrationRepository, OAuth2AuthorizationRequestRedirectFilter.DEFAULT_AUTHORIZATION_REQUEST_BASE_URI);\n\n        // \u517c\u5bb9\u5fae\u4fe1\u767b\u5f55\u6388\u6743\u7533\u8bf7\n        authorizationRequestResolver.setAuthorizationRequestCustomizer(new WechatAuthorizationRequestConsumer());\n\n        return authorizationRequestResolver;\n    }\n\n    /**\n     * \u9002\u914d\u5fae\u4fe1\u767b\u5f55\u9002\u914d\uff0c\u6dfb\u52a0\u81ea\u5b9a\u4e49\u8bf7\u6c42token\u5165\u53c2\u5904\u7406\n     *\n     * @return OAuth2AccessTokenResponseClient accessToken\u54cd\u5e94\u4fe1\u606f\u5904\u7406\n     */\n    private OAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> accessTokenResponseClient() {\n        DefaultAuthorizationCodeTokenResponseClient tokenResponseClient = new DefaultAuthorizationCodeTokenResponseClient();\n        tokenResponseClient.setRequestEntityConverter(new WechatCodeGrantRequestEntityConverter());\n        // \u81ea\u5b9a\u4e49 RestTemplate\uff0c\u9002\u914d\u5fae\u4fe1\u767b\u5f55\u83b7\u53d6token\n        OAuth2AccessTokenResponseHttpMessageConverter messageConverter = new OAuth2AccessTokenResponseHttpMessageConverter();\n        List<MediaType> mediaTypes = new ArrayList<>(messageConverter.getSupportedMediaTypes());\n        // \u5fae\u4fe1\u83b7\u53d6token\u65f6\u54cd\u5e94\u7684\u7c7b\u578b\u4e3a\u201ctext/plain\u201d\uff0c\u8fd9\u91cc\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\n        mediaTypes.add(MediaType.TEXT_PLAIN);\n        messageConverter.setAccessTokenResponseConverter(new WechatMapAccessTokenResponseConverter());\n        messageConverter.setSupportedMediaTypes(mediaTypes);\n\n        // \u521d\u59cb\u5316RestTemplate\n        RestTemplate restTemplate = new RestTemplate(Arrays.asList(\n                new FormHttpMessageConverter(),\n                messageConverter));\n\n        restTemplate.setErrorHandler(new OAuth2ErrorResponseErrorHandler());\n        tokenResponseClient.setRestOperations(restTemplate);\n        return tokenResponseClient;\n    }\n\n    /**\n     * \u8de8\u57df\u8fc7\u6ee4\u5668\u914d\u7f6e\n     *\n     * @return CorsFilter\n     */\n    @Bean\n    public CorsFilter corsFilter() {\n\n        // \u521d\u59cb\u5316cors\u914d\u7f6e\u5bf9\u8c61\n        CorsConfiguration configuration = new CorsConfiguration();\n\n        // \u8bbe\u7f6e\u5141\u8bb8\u8de8\u57df\u7684\u57df\u540d,\u5982\u679c\u5141\u8bb8\u643a\u5e26cookie\u7684\u8bdd,\u8def\u5f84\u5c31\u4e0d\u80fd\u5199*\u53f7, *\u8868\u793a\u6240\u6709\u7684\u57df\u540d\u90fd\u53ef\u4ee5\u8de8\u57df\u8bbf\u95ee\n        configuration.addAllowedOrigin("http://127.0.0.1:5173");\n        configuration.addAllowedOrigin("http://192.168.1.102:5173");\n        // \u8bbe\u7f6e\u8de8\u57df\u8bbf\u95ee\u53ef\u4ee5\u643a\u5e26cookie\n        configuration.setAllowCredentials(true);\n        // \u5141\u8bb8\u6240\u6709\u7684\u8bf7\u6c42\u65b9\u6cd5 ==> GET POST PUT Delete\n        configuration.addAllowedMethod("*");\n        // \u5141\u8bb8\u643a\u5e26\u4efb\u4f55\u5934\u4fe1\u606f\n        configuration.addAllowedHeader("*");\n\n        // \u521d\u59cb\u5316cors\u914d\u7f6e\u6e90\u5bf9\u8c61\n        UrlBasedCorsConfigurationSource configurationSource = new UrlBasedCorsConfigurationSource();\n\n        // \u7ed9\u914d\u7f6e\u6e90\u5bf9\u8c61\u8bbe\u7f6e\u8fc7\u6ee4\u7684\u53c2\u6570\n        // \u53c2\u6570\u4e00: \u8fc7\u6ee4\u7684\u8def\u5f84 == > \u6240\u6709\u7684\u8def\u5f84\u90fd\u8981\u6c42\u6821\u9a8c\u662f\u5426\u8de8\u57df\n        // \u53c2\u6570\u4e8c: \u914d\u7f6e\u7c7b\n        configurationSource.registerCorsConfiguration("/**", configuration);\n\n        // \u8fd4\u56de\u914d\u7f6e\u597d\u7684\u8fc7\u6ee4\u5668\n        return new CorsFilter(configurationSource);\n    }\n\n    /**\n     * \u81ea\u5b9a\u4e49jwt\uff0c\u5c06\u6743\u9650\u4fe1\u606f\u653e\u81f3jwt\u4e2d\n     *\n     * @return OAuth2TokenCustomizer\u7684\u5b9e\u4f8b\n     */\n    @Bean\n    public OAuth2TokenCustomizer<JwtEncodingContext> oAuth2TokenCustomizer() {\n        return new FederatedIdentityIdTokenCustomizer();\n    }\n\n    /**\n     * \u81ea\u5b9a\u4e49jwt\u89e3\u6790\u5668\uff0c\u8bbe\u7f6e\u89e3\u6790\u51fa\u6765\u7684\u6743\u9650\u4fe1\u606f\u7684\u524d\u7f00\u4e0e\u5728jwt\u4e2d\u7684key\n     *\n     * @return jwt\u89e3\u6790\u5668 JwtAuthenticationConverter\n     */\n    @Bean\n    public JwtAuthenticationConverter jwtAuthenticationConverter() {\n        JwtGrantedAuthoritiesConverter grantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();\n        // \u8bbe\u7f6e\u89e3\u6790\u6743\u9650\u4fe1\u606f\u7684\u524d\u7f00\uff0c\u8bbe\u7f6e\u4e3a\u7a7a\u662f\u53bb\u6389\u524d\u7f00\n        grantedAuthoritiesConverter.setAuthorityPrefix("");\n        // \u8bbe\u7f6e\u6743\u9650\u4fe1\u606f\u5728jwt claims\u4e2d\u7684key\n        grantedAuthoritiesConverter.setAuthoritiesClaimName(SecurityConstants.AUTHORITIES_KEY);\n\n        JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();\n        jwtAuthenticationConverter.setJwtGrantedAuthoritiesConverter(grantedAuthoritiesConverter);\n        return jwtAuthenticationConverter;\n    }\n\n\n    /**\n     * \u5c06AuthenticationManager\u6ce8\u5165ioc\u4e2d\uff0c\u5176\u5b83\u9700\u8981\u4f7f\u7528\u5730\u65b9\u53ef\u4ee5\u76f4\u63a5\u4eceioc\u4e2d\u83b7\u53d6\n     *\n     * @param authenticationConfiguration \u5bfc\u51fa\u8ba4\u8bc1\u914d\u7f6e\n     * @return AuthenticationManager \u8ba4\u8bc1\u7ba1\u7406\u5668\n     */\n    @Bean\n    @SneakyThrows\n    public AuthenticationManager authenticationManager(AuthenticationConfiguration authenticationConfiguration) {\n        return authenticationConfiguration.getAuthenticationManager();\n    }\n\n    /**\n     * \u914d\u7f6e\u5bc6\u7801\u89e3\u6790\u5668\uff0c\u4f7f\u7528BCrypt\u7684\u65b9\u5f0f\u5bf9\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u548c\u9a8c\u8bc1\n     *\n     * @return BCryptPasswordEncoder\n     */\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n    /**\n     * \u914d\u7f6e\u5ba2\u6237\u7aefRepository\n     *\n     * @param jdbcTemplate    db \u6570\u636e\u6e90\u4fe1\u606f\n     * @param passwordEncoder \u5bc6\u7801\u89e3\u6790\u5668\n     * @return \u57fa\u4e8e\u6570\u636e\u5e93\u7684repository\n     */\n    @Bean\n    public RegisteredClientRepository registeredClientRepository(JdbcTemplate jdbcTemplate, PasswordEncoder passwordEncoder) {\n        RegisteredClient registeredClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                // \u5ba2\u6237\u7aefid\n                .clientId("messaging-client")\n                // \u5ba2\u6237\u7aef\u79d8\u94a5\uff0c\u4f7f\u7528\u5bc6\u7801\u89e3\u6790\u5668\u52a0\u5bc6\n                .clientSecret(passwordEncoder.encode("123456"))\n                // \u5ba2\u6237\u7aef\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u57fa\u4e8e\u8bf7\u6c42\u5934\u7684\u8ba4\u8bc1\n                .clientAuthenticationMethod(ClientAuthenticationMethod.CLIENT_SECRET_BASIC)\n                // \u914d\u7f6e\u8d44\u6e90\u670d\u52a1\u5668\u4f7f\u7528\u8be5\u5ba2\u6237\u7aef\u83b7\u53d6\u6388\u6743\u65f6\u652f\u6301\u7684\u65b9\u5f0f\n                .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                .authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS)\n                // \u5ba2\u6237\u7aef\u6dfb\u52a0\u81ea\u5b9a\u4e49\u8ba4\u8bc1\n                .authorizationGrantType(new AuthorizationGrantType(SecurityConstants.GRANT_TYPE_SMS_CODE))\n                // \u6388\u6743\u7801\u6a21\u5f0f\u56de\u8c03\u5730\u5740\uff0coauth2.1\u5df2\u6539\u4e3a\u7cbe\u51c6\u5339\u914d\uff0c\u4e0d\u80fd\u53ea\u8bbe\u7f6e\u57df\u540d\uff0c\u5e76\u4e14\u5c4f\u853d\u4e86localhost\uff0c\u672c\u673a\u4f7f\u7528127.0.0.1\u8bbf\u95ee\n                .redirectUri("http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc")\n                .redirectUri("https://www.baidu.com")\n                // \u8be5\u5ba2\u6237\u7aef\u7684\u6388\u6743\u8303\u56f4\uff0cOPENID\u4e0ePROFILE\u662fIdToken\u7684scope\uff0c\u83b7\u53d6\u6388\u6743\u65f6\u8bf7\u6c42OPENID\u7684scope\u65f6\u8ba4\u8bc1\u670d\u52a1\u4f1a\u8fd4\u56deIdToken\n                .scope(OidcScopes.OPENID)\n                .scope(OidcScopes.PROFILE)\n                // \u81ea\u5b9ascope\n                .scope("message.read")\n                .scope("message.write")\n                // \u5ba2\u6237\u7aef\u8bbe\u7f6e\uff0c\u8bbe\u7f6e\u7528\u6237\u9700\u8981\u786e\u8ba4\u6388\u6743\n                .clientSettings(ClientSettings.builder().requireAuthorizationConsent(true).build())\n                .build();\n\n        // \u57fa\u4e8edb\u5b58\u50a8\u5ba2\u6237\u7aef\uff0c\u8fd8\u6709\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u5b9e\u73b0 InMemoryRegisteredClientRepository\n        JdbcRegisteredClientRepository registeredClientRepository = new JdbcRegisteredClientRepository(jdbcTemplate);\n\n        // \u521d\u59cb\u5316\u5ba2\u6237\u7aef\n        RegisteredClient repositoryByClientId = registeredClientRepository.findByClientId(registeredClient.getClientId());\n        if (repositoryByClientId == null) {\n            registeredClientRepository.save(registeredClient);\n        }\n        // \u8bbe\u5907\u7801\u6388\u6743\u5ba2\u6237\u7aef\n        RegisteredClient deviceClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                .clientId("device-message-client")\n                // \u516c\u5171\u5ba2\u6237\u7aef\n                .clientAuthenticationMethod(ClientAuthenticationMethod.NONE)\n                // \u8bbe\u5907\u7801\u6388\u6743\n                .authorizationGrantType(AuthorizationGrantType.DEVICE_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                // \u81ea\u5b9ascope\n                .scope("message.read")\n                .scope("message.write")\n                .build();\n        RegisteredClient byClientId = registeredClientRepository.findByClientId(deviceClient.getClientId());\n        if (byClientId == null) {\n            registeredClientRepository.save(deviceClient);\n        }\n\n        // PKCE\u5ba2\u6237\u7aef\n        RegisteredClient pkceClient = RegisteredClient.withId(UUID.randomUUID().toString())\n                .clientId("pkce-message-client")\n                // \u516c\u5171\u5ba2\u6237\u7aef\n                .clientAuthenticationMethod(ClientAuthenticationMethod.NONE)\n                // \u6388\u6743\u7801\u6a21\u5f0f\uff0c\u56e0\u4e3a\u662f\u6269\u5c55\u6388\u6743\u7801\u6d41\u7a0b\uff0c\u6240\u4ee5\u6d41\u7a0b\u8fd8\u662f\u6388\u6743\u7801\u7684\u6d41\u7a0b\uff0c\u6539\u53d8\u7684\u53ea\u662f\u53c2\u6570\n                .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n                .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\n                // \u6388\u6743\u7801\u6a21\u5f0f\u56de\u8c03\u5730\u5740\uff0coauth2.1\u5df2\u6539\u4e3a\u7cbe\u51c6\u5339\u914d\uff0c\u4e0d\u80fd\u53ea\u8bbe\u7f6e\u57df\u540d\uff0c\u5e76\u4e14\u5c4f\u853d\u4e86localhost\uff0c\u672c\u673a\u4f7f\u7528127.0.0.1\u8bbf\u95ee\n                .redirectUri("http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc")\n                .clientSettings(ClientSettings.builder().requireProofKey(Boolean.TRUE).build())\n                // \u81ea\u5b9ascope\n                .scope("message.read")\n                .scope("message.write")\n                .build();\n        RegisteredClient findPkceClient = registeredClientRepository.findByClientId(pkceClient.getClientId());\n        if (findPkceClient == null) {\n            registeredClientRepository.save(pkceClient);\n        }\n        return registeredClientRepository;\n    }\n\n    /**\n     * \u914d\u7f6e\u57fa\u4e8edb\u7684oauth2\u7684\u6388\u6743\u7ba1\u7406\u670d\u52a1\n     *\n     * @param jdbcTemplate               db\u6570\u636e\u6e90\u4fe1\u606f\n     * @param registeredClientRepository \u4e0a\u8fb9\u6ce8\u5165\u7684\u5ba2\u6237\u7aefrepository\n     * @return JdbcOAuth2AuthorizationService\n     */\n    @Bean\n    public OAuth2AuthorizationService authorizationService(JdbcTemplate jdbcTemplate, RegisteredClientRepository registeredClientRepository) {\n        // \u57fa\u4e8edb\u7684oauth2\u8ba4\u8bc1\u670d\u52a1\uff0c\u8fd8\u6709\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u670d\u52a1\u5b9e\u73b0InMemoryOAuth2AuthorizationService\n        return new JdbcOAuth2AuthorizationService(jdbcTemplate, registeredClientRepository);\n    }\n\n    /**\n     * \u914d\u7f6e\u57fa\u4e8edb\u7684\u6388\u6743\u786e\u8ba4\u7ba1\u7406\u670d\u52a1\n     *\n     * @param jdbcTemplate               db\u6570\u636e\u6e90\u4fe1\u606f\n     * @param registeredClientRepository \u5ba2\u6237\u7aefrepository\n     * @return JdbcOAuth2AuthorizationConsentService\n     */\n    @Bean\n    public OAuth2AuthorizationConsentService authorizationConsentService(JdbcTemplate jdbcTemplate, RegisteredClientRepository registeredClientRepository) {\n        // \u57fa\u4e8edb\u7684\u6388\u6743\u786e\u8ba4\u7ba1\u7406\u670d\u52a1\uff0c\u8fd8\u6709\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u670d\u52a1\u5b9e\u73b0InMemoryOAuth2AuthorizationConsentService\n        return new JdbcOAuth2AuthorizationConsentService(jdbcTemplate, registeredClientRepository);\n    }\n\n    /**\n     * \u914d\u7f6ejwk\u6e90\uff0c\u4f7f\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\uff0c\u516c\u5f00\u7528\u4e8e\u68c0\u7d22\u5339\u914d\u6307\u5b9a\u9009\u62e9\u5668\u7684JWK\u7684\u65b9\u6cd5\n     *\n     * @return JWKSource\n     */\n    @Bean\n    @SneakyThrows\n    public JWKSource<SecurityContext> jwkSource() {\n        // \u5148\u4eceredis\u83b7\u53d6\n        String jwkSetCache = redisOperator.get(RedisConstants.AUTHORIZATION_JWS_PREFIX_KEY);\n        if (ObjectUtils.isEmpty(jwkSetCache)) {\n            KeyPair keyPair = generateRsaKey();\n            RSAPublicKey publicKey = (RSAPublicKey) keyPair.getPublic();\n            RSAPrivateKey privateKey = (RSAPrivateKey) keyPair.getPrivate();\n            RSAKey rsaKey = new RSAKey.Builder(publicKey)\n                    .privateKey(privateKey)\n                    .keyID(UUID.randomUUID().toString())\n                    .build();\n            // \u751f\u6210jws\n            JWKSet jwkSet = new JWKSet(rsaKey);\n            // \u8f6c\u4e3ajson\u5b57\u7b26\u4e32\n            String jwkSetString = jwkSet.toString(Boolean.FALSE);\n            // \u5b58\u5165redis\n            redisOperator.set(RedisConstants.AUTHORIZATION_JWS_PREFIX_KEY, jwkSetString);\n            return new ImmutableJWKSet<>(jwkSet);\n        }\n        // \u89e3\u6790\u5b58\u50a8\u7684jws\n        JWKSet jwkSet = JWKSet.parse(jwkSetCache);\n        return new ImmutableJWKSet<>(jwkSet);\n    }\n\n    /**\n     * \u751f\u6210rsa\u5bc6\u94a5\u5bf9\uff0c\u63d0\u4f9b\u7ed9jwk\n     *\n     * @return \u5bc6\u94a5\u5bf9\n     */\n    private static KeyPair generateRsaKey() {\n        KeyPair keyPair;\n        try {\n            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");\n            keyPairGenerator.initialize(2048);\n            keyPair = keyPairGenerator.generateKeyPair();\n        } catch (Exception ex) {\n            throw new IllegalStateException(ex);\n        }\n        return keyPair;\n    }\n\n    /**\n     * \u914d\u7f6ejwt\u89e3\u6790\u5668\n     *\n     * @param jwkSource jwk\u6e90\n     * @return JwtDecoder\n     */\n    @Bean\n    public JwtDecoder jwtDecoder(JWKSource<SecurityContext> jwkSource) {\n        return OAuth2AuthorizationServerConfiguration.jwtDecoder(jwkSource);\n    }\n\n    /**\n     * \u6dfb\u52a0\u8ba4\u8bc1\u670d\u52a1\u5668\u914d\u7f6e\uff0c\u8bbe\u7f6ejwt\u7b7e\u53d1\u8005\u3001\u9ed8\u8ba4\u7aef\u70b9\u8bf7\u6c42\u5730\u5740\u7b49\n     *\n     * @return AuthorizationServerSettings\n     */\n    @Bean\n    public AuthorizationServerSettings authorizationServerSettings() {\n        return AuthorizationServerSettings.builder()\n                /*\n                    \u8bbe\u7f6etoken\u7b7e\u53d1\u5730\u5740(http(s)://{ip}:{port}/context-path, http(s)://domain.com/context-path)\n                    \u5982\u679c\u9700\u8981\u901a\u8fc7ip\u8bbf\u95ee\u8fd9\u91cc\u5c31\u662fip\uff0c\u5982\u679c\u662f\u6709\u57df\u540d\u6620\u5c04\u5c31\u586b\u57df\u540d\uff0c\u901a\u8fc7\u4ec0\u4e48\u65b9\u5f0f\u8bbf\u95ee\u8be5\u670d\u52a1\u8fd9\u91cc\u5c31\u586b\u4ec0\u4e48\n                 */\n                .issuer("http://192.168.1.102:8080")\n                .build();\n    }\n\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"9-\u524d\u7aef\u9879\u76ee\u4e2d\u7f16\u5199\u6388\u6743\u786e\u8ba4\u8bbe\u5907\u7801\u6821\u9a8c\u8bbe\u5907\u7801\u6821\u9a8c\u6210\u529f\u9875\u9762",children:"9. \u524d\u7aef\u9879\u76ee\u4e2d\u7f16\u5199\u6388\u6743\u786e\u8ba4\u3001\u8bbe\u5907\u7801\u6821\u9a8c\u3001\u8bbe\u5907\u7801\u6821\u9a8c\u6210\u529f\u9875\u9762"}),"\n",(0,r.jsxs)(n.h4,{id:"1-\u7f16\u5199\u6388\u6743\u786e\u8ba4\u9875\u9762consentvue",children:["1. \u7f16\u5199\u6388\u6743\u786e\u8ba4\u9875\u9762",(0,r.jsx)(n.code,{children:"Consent.vue"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-vue",children:'<script setup lang="ts">\nimport { type Ref, ref } from \'vue\'\nimport axios from \'axios\'\nimport { createDiscreteApi } from \'naive-ui\'\n\nconst { message } = createDiscreteApi([\'message\'])\n\n// \u83b7\u53d6\u6388\u6743\u786e\u8ba4\u4fe1\u606f\u54cd\u5e94\nconst consentResult: Ref<any> = ref()\n// \u6240\u6709\u7684scope\nconst scopes = ref()\n// \u5df2\u6388\u6743\u7684scope\nconst approvedScopes = ref()\n\naxios({\n  method: \'GET\',\n  url: `http://192.168.1.102:8080/oauth2/consent/parameters${window.location.search}`\n})\n  .then((r) => {\n    let result = r.data\n    if (result.success) {\n      consentResult.value = result.data\n      scopes.value = [...result.data.previouslyApprovedScopes, ...result.data.scopes]\n      approvedScopes.value = result.data.previouslyApprovedScopes.map((e: any) => e.scope)\n    } else {\n      message.warning(result.message)\n    }\n  })\n  .catch((e) => message.error(e.message))\n\n/**\n * \u63d0\u4ea4\u6388\u6743\u786e\u8ba4\n *\n * @param cancel true\u4e3a\u53d6\u6d88\n */\nconst submitApprove = (cancel: boolean) => {\n  const data = new FormData()\n  if (!cancel) {\n    // \u5982\u679c\u4e0d\u662f\u53d6\u6d88\u6dfb\u52a0scope\n    if (\n      approvedScopes.value !== null &&\n      typeof approvedScopes.value !== \'undefined\' &&\n      approvedScopes.value.length > 0\n    ) {\n      approvedScopes.value.forEach((e: any) => data.append(\'scope\', e))\n    }\n  }\n  data.append(\'state\', consentResult.value.state)\n  data.append(\'client_id\', consentResult.value.clientId)\n  data.append(\'user_code\', consentResult.value.userCode)\n  axios({\n    method: \'POST\',\n    // @ts-ignore\n    data: new URLSearchParams(data),\n    headers: {\n      nonceId: getQueryString(\'nonceId\'),\n      \'Content-Type\': \'application/x-www-form-urlencoded\'\n    },\n    url: `http://192.168.1.102:8080${consentResult.value.requestURI}`\n  })\n    .then((r) => {\n      let result = r.data\n      if (result.success) {\n        window.location.href = result.data\n      } else {\n        if (result.message && result.message.indexOf(\'access_denied\') > -1) {\n          // \u53ef\u4ee5\u8df3\u8f6c\u81f3\u4e00\u4e2a\u5355\u72ec\u7684\u9875\u9762\u63d0\u9192.\n          message.warning(\'\u60a8\u672a\u9009\u62e9scope\u6216\u62d2\u7edd\u4e86\u672c\u6b21\u6388\u6743\u7533\u8bf7.\')\n        } else {\n          message.warning(result.message)\n        }\n      }\n    })\n    .catch((e) => message.error(e.message))\n}\n\n/**\n * \u83b7\u53d6\u5730\u5740\u680f\u53c2\u6570\n * @param name \u5730\u5740\u680f\u53c2\u6570\u7684key\n */\nfunction getQueryString(name: string) {\n  var reg = new RegExp(\'(^|&)\' + name + \'=([^&]*)(&|$)\', \'i\')\n\n  var r = window.location.search.substr(1).match(reg)\n\n  if (r != null) {\n    return unescape(r[2])\n  }\n\n  return null\n}\n<\/script>\n\n<template>\n  <header>\n    <img alt="Vue logo" class="logo" src="../../assets/logo.svg" width="125" height="125" />\n\n    <div class="wrapper">\n      <HelloWorld msg="OAuth \u6388\u6743\u8bf7\u6c42" />\n    </div>\n  </header>\n\n  <main>\n    <n-card v-if="consentResult && consentResult.userCode">\n      \u60a8\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4ee3\u7801\n      <b>{{ consentResult.userCode }}</b>\n      \uff0c\u8bf7\u9a8c\u8bc1\u6b64\u4ee3\u7801\u662f\u5426\u4e0e\u8bbe\u5907\u4e0a\u663e\u793a\u7684\u4ee3\u7801\u5339\u914d\u3002\n    </n-card>\n    <br />\n    <n-card :title="`${consentResult.clientName} \u5ba2\u6237\u7aef`" v-if="consentResult">\n      <template #header-extra>\n        \u8d26\u53f7\uff1a\n        <b>{{ consentResult.principalName }}</b>\n      </template>\n      \u6b64\u7b2c\u4e09\u65b9\u5e94\u7528\u8bf7\u6c42\u83b7\u5f97\u4ee5\u4e0b\u6743\u9650\n    </n-card>\n    <n-scrollbar style="max-height: 230px">\n      <n-checkbox-group v-model:value="approvedScopes">\n        <n-list>\n          <n-list-item v-for="scope in scopes">\n            <template #prefix>\n              <n-checkbox :value="scope.scope"> </n-checkbox>\n            </template>\n            <n-thing :title="scope.scope" :description="scope.description" />\n          </n-list-item>\n        </n-list>\n      </n-checkbox-group>\n    </n-scrollbar>\n    <br />\n    <n-button type="info" @click="submitApprove(false)" strong>\n      &nbsp;&nbsp;&nbsp;&nbsp;\u786e&nbsp;&nbsp;&nbsp;&nbsp;\u5b9a&nbsp;&nbsp;&nbsp;&nbsp;\n    </n-button>\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    <n-button type="warning" @click="submitApprove(true)">\n      &nbsp;&nbsp;&nbsp;&nbsp;\u62d2&nbsp;&nbsp;&nbsp;&nbsp;\u7edd&nbsp;&nbsp;&nbsp;&nbsp;\n    </n-button>\n  </main>\n</template>\n\n<style scoped>\nheader {\n  line-height: 1.5;\n}\n\n.logo {\n  display: block;\n  margin: 0 auto 2rem;\n}\n\n@media (min-width: 1024px) {\n  header {\n    display: flex;\n    place-items: center;\n    padding-right: calc(var(--section-gap) / 2);\n  }\n\n  .logo {\n    margin: 0 2rem 0 0;\n  }\n\n  header .wrapper {\n    display: flex;\n    place-items: flex-start;\n    flex-wrap: wrap;\n  }\n}\n\nb,\nh3,\n::v-deep(.n-card-header__main) {\n  font-weight: bold !important;\n}\n</style>\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"2-\u7f16\u5199\u8bbe\u5907\u7801\u9a8c\u8bc1\u9875\u9762activatevue",children:["2. \u7f16\u5199\u8bbe\u5907\u7801\u9a8c\u8bc1\u9875\u9762",(0,r.jsx)(n.code,{children:"Activate.vue"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-vue",children:'<script setup lang="ts">\nimport { ref } from \'vue\'\nimport axios from \'axios\'\nimport { createDiscreteApi } from \'naive-ui\'\n\nconst { message } = createDiscreteApi([\'message\'])\n\nconst userCode = ref({\n  userCode: getQueryString(\'userCode\')\n})\n\n/**\n * \u63d0\u4ea4\u6388\u6743\u786e\u8ba4\n *\n * @param cancel true\u4e3a\u53d6\u6d88\n */\nconst submit = () => {\n  const data = {\n    user_code: userCode.value.userCode\n  }\n  axios({\n    method: \'POST\',\n    data,\n    headers: {\n      nonceId: getQueryString(\'nonceId\'),\n      \'Content-Type\': \'application/x-www-form-urlencoded\'\n    },\n    url: `http://192.168.1.102:8080/oauth2/device_verification`\n  })\n    .then((r) => {\n      let result = r.data\n      if (result.success) {\n        window.location.href = result.data\n      } else {\n        message.warning(result.message)\n      }\n    })\n    .catch((e) => message.error(e.message))\n}\n\nif (userCode.value.userCode) {\n  submit()\n}\n\n/**\n * \u83b7\u53d6\u5730\u5740\u680f\u53c2\u6570\n * @param name \u5730\u5740\u680f\u53c2\u6570\u7684key\n */\nfunction getQueryString(name: string) {\n  var reg = new RegExp(\'(^|&)\' + name + \'=([^&]*)(&|$)\', \'i\')\n\n  var r = window.location.search.substr(1).match(reg)\n\n  if (r != null) {\n    return unescape(r[2])\n  }\n\n  return null\n}\n<\/script>\n\n<template>\n  <header>\n    <img alt="Vue logo" class="logo" src="../../assets/devices.png" width="125" height="125" />\n\n    <div class="wrapper">\n      <HelloWorld msg="\u8bbe\u5907\u6fc0\u6d3b" />\n    </div>\n  </header>\n\n  <main>\n    <n-card> \u8f93\u5165\u6fc0\u6d3b\u7801\u5bf9\u8bbe\u5907\u8fdb\u884c\u6388\u6743\u3002 </n-card>\n    <br />\n    <n-card>\n      <n-form-item-row label="Activation Code">\n        <n-input\n          v-model:value="userCode.userCode"\n          placeholder="User Code"\n          maxlength="9"\n          show-count\n          clearable\n        />\n      </n-form-item-row>\n      <n-button type="info" @click="submit" block strong> \u767b\u5f55 </n-button>\n    </n-card>\n  </main>\n</template>\n\n<style scoped>\nheader {\n  line-height: 1.5;\n}\n\n.logo {\n  display: block;\n  margin: 0 auto 2rem;\n}\n\n@media (min-width: 1024px) {\n  header {\n    display: flex;\n    place-items: center;\n    padding-right: calc(var(--section-gap) / 2);\n  }\n\n  .logo {\n    margin: 0 2rem 0 0;\n  }\n\n  header .wrapper {\n    display: flex;\n    place-items: flex-start;\n    flex-wrap: wrap;\n  }\n}\n\nb,\nh3,\n::v-deep(.n-card-header__main) {\n  font-weight: bold !important;\n}\n</style>\n'})}),"\n",(0,r.jsx)(n.h4,{id:"3-\u7f16\u5199\u8bbe\u5907\u7801\u9a8c\u8bc1\u6210\u529f\u9875\u9762",children:"3. \u7f16\u5199\u8bbe\u5907\u7801\u9a8c\u8bc1\u6210\u529f\u9875\u9762"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-vue",children:'<script lang="ts" setup><\/script>\n<template>\n  <header>\n    <img alt="Vue logo" class="logo" src="../../assets/devices.png" width="125" height="125" />\n\n    <div class="wrapper">\n      <HelloWorld msg="\u8bbe\u5907\u6fc0\u6d3b" />\n    </div>\n  </header>\n\n  <main>\n    <div style="font-size: 30px">\n      \u60a8\u5df2\u6210\u529f\u6fc0\u6d3b\u60a8\u7684\u8bbe\u5907\u3002\n      <br />\n      \u8bf7\u8fd4\u56de\u5230\u60a8\u7684\u8bbe\u5907\u7ee7\u7eed\u3002\n    </div>\n  </main>\n</template>\n<style scoped>\nheader {\n  line-height: 1.5;\n}\n\n.logo {\n  display: block;\n  margin: 0 auto 2rem;\n}\n\n@media (min-width: 1024px) {\n  header {\n    display: flex;\n    place-items: center;\n    padding-right: calc(var(--section-gap) / 2);\n  }\n\n  .logo {\n    margin: 0 2rem 0 0;\n  }\n\n  header .wrapper {\n    display: flex;\n    place-items: flex-start;\n    flex-wrap: wrap;\n  }\n}\n\nb,\nh3,\n::v-deep(.n-card-header__main) {\n  font-weight: bold !important;\n}\n</style>\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"4-vue-router\u8def\u7531\u914d\u7f6eindexts",children:["4. ",(0,r.jsx)(n.code,{children:"vue-router"}),"\u8def\u7531\u914d\u7f6e",(0,r.jsx)(n.code,{children:"index.ts"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { createRouter, createWebHistory } from 'vue-router'\n\nconst router = createRouter({\n    history: createWebHistory(import.meta.env.BASE_URL),\n    routes: [\n        {\n            path: '/login',\n            name: 'login',\n            component: () => import('../views/login/Login.vue')\n        },\n        {\n            path: '/consent',\n            name: 'consent',\n            // route level code-splitting\n            // this generates a separate chunk (About.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import('../views/consent/Consent.vue')\n        },\n        {\n            path: '/activate',\n            name: 'activate',\n            // route level code-splitting\n            // this generates a separate chunk (About.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import('../views/device/Activate.vue')\n        },\n        {\n            path: '/activated',\n            name: 'activated',\n            // route level code-splitting\n            // this generates a separate chunk (About.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import('../views/device/Activated.vue')\n        }\n    ]\n})\n\nexport default router\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"10-\u9644\u4e00\u4e0b\u5e38\u91cf\u7c7bsecurityconstants",children:["10. \u9644\u4e00\u4e0b\u5e38\u91cf\u7c7b",(0,r.jsx)(n.code,{children:"SecurityConstants"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.constant;\n\n/**\n * security \u5e38\u91cf\u7c7b\n *\n * @author vains\n */\npublic class SecurityConstants {\n\n    /**\n     * \u6388\u6743\u786e\u8ba4\u9875\u9762\u5730\u5740\n     */\n    public static final String DEVICE_ACTIVATED_URI = "http://127.0.0.1:5173/activated";\n\n    /**\n     * \u6388\u6743\u786e\u8ba4\u9875\u9762\u5730\u5740\n     */\n    public static final String DEVICE_ACTIVATE_URI = "http://127.0.0.1:5173/activate";\n\n    /**\n     * \u6388\u6743\u786e\u8ba4\u9875\u9762\u5730\u5740\n     */\n    public static final String CONSENT_PAGE_URI = "http://127.0.0.1:5173/consent";\n\n    /**\n     * \u5fae\u4fe1\u767b\u5f55\u76f8\u5173\u53c2\u6570\u2014\u2014openid\uff1a\u7528\u6237\u552f\u4e00id\n     */\n    public static final String WECHAT_PARAMETER_OPENID = "openid";\n\n    /**\n     * \u5fae\u4fe1\u767b\u5f55\u76f8\u5173\u53c2\u6570\u2014\u2014forcePopup\uff1a\u5f3a\u5236\u6b64\u6b21\u6388\u6743\u9700\u8981\u7528\u6237\u5f39\u7a97\u786e\u8ba4\n     */\n    public static final String WECHAT_PARAMETER_FORCE_POPUP = "forcePopup";\n\n    /**\n     * \u5fae\u4fe1\u767b\u5f55\u76f8\u5173\u53c2\u6570\u2014\u2014secret\uff1a\u5fae\u4fe1\u7684\u5e94\u7528\u79d8\u94a5\n     */\n    public static final String WECHAT_PARAMETER_SECRET = "secret";\n\n    /**\n     * \u5fae\u4fe1\u767b\u5f55\u76f8\u5173\u53c2\u6570\u2014\u2014appid\uff1a\u5fae\u4fe1\u7684\u5e94\u7528id\n     */\n    public static final String WECHAT_PARAMETER_APPID = "appid";\n\n    /**\n     * \u4e09\u65b9\u767b\u5f55\u7c7b\u578b\u2014\u2014\u5fae\u4fe1\n     */\n    public static final String THIRD_LOGIN_WECHAT = "wechat";\n\n    /**\n     * \u4e09\u65b9\u767b\u5f55\u7c7b\u578b\u2014\u2014Gitee\n     */\n    public static final String THIRD_LOGIN_GITEE = "gitee";\n\n    /**\n     * \u4e09\u65b9\u767b\u5f55\u7c7b\u578b\u2014\u2014Github\n     */\n    public static final String THIRD_LOGIN_GITHUB = "github";\n\n    /**\n     * \u968f\u673a\u5b57\u7b26\u4e32\u8bf7\u6c42\u5934\u540d\u5b57\n     */\n    public static final String NONCE_HEADER_NAME = "nonceId";\n\n    /**\n     * \u767b\u5f55\u65b9\u5f0f\u5165\u53c2\u540d\n     */\n    public static final String LOGIN_TYPE_NAME = "loginType";\n\n    /**\n     * \u9a8c\u8bc1\u7801id\u5165\u53c2\u540d\n     */\n    public static final String CAPTCHA_ID_NAME = "captchaId";\n\n    /**\n     * \u9a8c\u8bc1\u7801\u503c\u5165\u53c2\u540d\n     */\n    public static final String CAPTCHA_CODE_NAME = "code";\n\n    /**\n     * \u767b\u5f55\u65b9\u5f0f\u2014\u2014\u77ed\u4fe1\u9a8c\u8bc1\u7801\n     */\n    public static final String SMS_LOGIN_TYPE = "smsCaptcha";\n\n    /**\n     * \u767b\u5f55\u65b9\u5f0f\u2014\u2014\u8d26\u53f7\u5bc6\u7801\u767b\u5f55\n     */\n    public static final String PASSWORD_LOGIN_TYPE = "passwordLogin";\n\n    /**\n     * \u6743\u9650\u5728token\u4e2d\u7684key\n     */\n    public static final String AUTHORITIES_KEY = "authorities";\n\n    /**\n     * \u81ea\u5b9a\u4e49 grant type \u2014\u2014 \u77ed\u4fe1\u9a8c\u8bc1\u7801\n     */\n    public static final String GRANT_TYPE_SMS_CODE = "urn:ietf:params:oauth:grant-type:sms_code";\n\n    /**\n     * \u81ea\u5b9a\u4e49 grant type \u2014\u2014 \u77ed\u4fe1\u9a8c\u8bc1\u7801 \u2014\u2014 \u624b\u673a\u53f7\u7684key\n     */\n    public static final String OAUTH_PARAMETER_NAME_PHONE = "phone";\n\n    /**\n     * \u81ea\u5b9a\u4e49 grant type \u2014\u2014 \u77ed\u4fe1\u9a8c\u8bc1\u7801 \u2014\u2014 \u77ed\u4fe1\u9a8c\u8bc1\u7801\u7684key\n     */\n    public static final String OAUTH_PARAMETER_NAME_SMS_CAPTCHA = "sms_captcha";\n\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u5230\u6b64\u4e3a\u6b62\u7f16\u7801\u5c31\u7ed3\u675f\u4e86"}),"\n",(0,r.jsx)(n.h2,{id:"\u4e09\u6d4b\u8bd5",children:"\u4e09\u3001\u6d4b\u8bd5"}),"\n",(0,r.jsx)(n.h3,{id:"1-\u6388\u6743\u786e\u8ba4",children:"1. \u6388\u6743\u786e\u8ba4"}),"\n",(0,r.jsx)(n.h4,{id:"1-\u7ec4\u88c5url\u53d1\u8d77\u6388\u6743\u8bf7\u6c42",children:"1. \u7ec4\u88c5url\u53d1\u8d77\u6388\u6743\u8bf7\u6c42"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"http://127.0.0.1:8080/oauth2/authorize?client_id=messaging-client&response_type=code&scope=message.read&redirect_uri=http://127.0.0.1:8000/login/oauth2/code/messaging-client-oidc\n\n"})}),"\n",(0,r.jsx)(n.h4,{id:"2-\u68c0\u6d4b\u5230\u672a\u767b\u5f55\u91cd\u5b9a\u5411\u81f3vue\u9879\u76ee\u7684\u767b\u5f55\u9875\u9762",children:"2. \u68c0\u6d4b\u5230\u672a\u767b\u5f55\uff0c\u91cd\u5b9a\u5411\u81f3vue\u9879\u76ee\u7684\u767b\u5f55\u9875\u9762"}),"\n",(0,r.jsx)(n.p,{children:"\u91cd\u5b9a\u5411\u65f6\u5c06\u5f53\u524d\u8bf7\u6c42\u653e\u5165target\u53c2\u6570\u4e2d\uff0c\u5f53\u524dsessionId\u653e\u5165nonce\u53c2\u6570\u4e2d"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(50342).Z+"",width:"1920",height:"955"})}),"\n",(0,r.jsx)(n.p,{children:"\u67e5\u770b\u4e00\u4e0bnetwork\uff0c\u8ba4\u8bc1\u670d\u52a1\u6309\u89c4\u5219\u643a\u5e26target\u4e0enonce\u53c2\u6570\u91cd\u5b9a\u5411\uff0c\u6ca1\u6709\u95ee\u9898"}),"\n",(0,r.jsx)(n.h4,{id:"3-\u8f93\u5165\u8d26\u53f7\u5bc6\u7801\u63d0\u4ea4",children:"3. \u8f93\u5165\u8d26\u53f7\u5bc6\u7801\u63d0\u4ea4"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(59071).Z+"",width:"1920",height:"955"})}),"\n",(0,r.jsx)(n.h4,{id:"4-\u6388\u6743\u786e\u8ba4\u63d0\u4ea4",children:"4. \u6388\u6743\u786e\u8ba4\u63d0\u4ea4"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(52004).Z+"",width:"1920",height:"955"})}),"\n",(0,r.jsx)(n.p,{children:"\u6388\u6743\u786e\u8ba4\u540e\u751f\u6210code\u5e76\u643a\u5e26code\u91cd\u5b9a\u5411\u81f3\u56de\u8c03\u5730\u5740(redirect_uri)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(32556).Z+"",width:"1930",height:"1046"})}),"\n",(0,r.jsx)(n.p,{children:"\u6d4f\u89c8\u5668\u7684\u5b8c\u6574\u8df3\u8f6c\u8def\u5f84\u5982\u4e0b\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"http://127.0.0.1:8080/oauth2/authorize?client_id=messaging-client&response_type=code&scope=message.read&redirect_uri=http://127.0.0.1:8000/login/oauth2/code/messaging-client-oidc\n\nhttp://127.0.0.1:5173/login?target=http%3A%2F%2F127.0.0.1%3A8080%2Foauth2%2Fauthorize%3Fclient_id%3Dmessaging-client%26response_type%3Dcode%26scope%3Dmessage.read%26redirect_uri%3Dhttp%3A%2F%2F127.0.0.1%3A8000%2Flogin%2Foauth2%2Fcode%2Fmessaging-client-oidc&nonce=ab69a56f-dd10-43ec-80ce-b3b2181478b8\n\nhttp://127.0.0.1:8080/login\n\nhttp://127.0.0.1:8080/oauth2/authorize?client_id=messaging-client&response_type=code&scope=message.read&redirect_uri=http://127.0.0.1:8000/login/oauth2/code/messaging-client-oidc\n\nhttp://127.0.0.1:8080/oauth2/consent/redirect?scope=message.read&client_id=messaging-client&state=FTISsmtFYr56yaK5WkeMdvNobjdkZPbPzKS1SPvMxNM%3D\n\nhttp://127.0.0.1:5173/consent?scope=message.read&state=FTISsmtFYr56yaK5WkeMdvNobjdkZPbPzKS1SPvMxNM%3D&client_id=messaging-client&user_code&nonce=93182cd0-5a7e-4ea3-801a-c6212d14af4b\n\nhttp://127.0.0.1:8080/oauth2/consent/parameters?scope=message.read&state=FTISsmtFYr56yaK5WkeMdvNobjdkZPbPzKS1SPvMxNM%3D&client_id=messaging-client&user_code&nonce=93182cd0-5a7e-4ea3-801a-c6212d14af4b\n\nhttp://127.0.0.1:8080/oauth2/authorize\n\nhttp://127.0.0.1:8000/login/oauth2/code/messaging-client-oidc?code=tZOy8GRY-euEn7yrTY_kbrTWVS9NrGRgQeWMStoEQhaEuyi7XoezzE6hXGiGzuhNZvd_rbkqiRCos2sKI1nfIflepORsrfCea8x7wkZSbC9gZAsaRbiBmynx-t6wosLo\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\u6ce8\u610f:"})," \u6b64\u8ba4\u8bc1\u4f9d\u8d56\u4e8eSession\uff0c\u6240\u4ee5\u5168\u7a0b\u7684\u57df\u540d\uff08IP\uff09\u9700\u8981\u4fdd\u6301\u4e00\u81f4\uff0c\u6b64\u5904\u4e0d\u80fd\u4f7f\u7528\u5185\u7f51IP\u8bbf\u95ee\uff0c\u5982: ",(0,r.jsx)(n.code,{children:"192.168.1.102"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"http://192.168.1.102:8080/oauth2/authorize?client_id=messaging-client&response_type=code&scope=message.read&redirect_uri=http://127.0.0.1:8000/login/oauth2/code/messaging-client-oidc\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-\u8bbe\u5907\u6388\u6743",children:"2. \u8bbe\u5907\u6388\u6743"}),"\n",(0,r.jsxs)(n.p,{children:["\u6388\u6743\u7801\u6d41\u7a0b\u8be6\u89c1",(0,r.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc8628",children:"rfc8628"})]}),"\n",(0,r.jsxs)(n.p,{children:["\u9996\u5148\uff0c\u7528\u6237\u8bf7\u6c42",(0,r.jsx)(n.code,{children:"/oauth2/device_authorization"}),"\u63a5\u53e3\uff0c\u83b7\u53d6",(0,r.jsx)(n.code,{children:"user_code"}),"\u3001\u8bbe\u5907\u7801\u548c\u7ed9\u7528\u6237\u5728\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684\u5730\u5740\uff0c\u7528\u6237\u5728\u6d4f\u89c8\u5668\u6253\u5f00\u5730\u5740\uff0c\u8f93\u5165",(0,r.jsx)(n.code,{children:"user_code"}),"\uff0c\u5982\u679c\u7528\u6237\u5c1a\u672a\u767b\u5f55\u5219\u9700\u8981\u8fdb\u884c\u767b\u5f55\uff1b\u8f93\u5165",(0,r.jsx)(n.code,{children:"user_code"}),"\u4e4b\u540e\u5982\u679c\u8be5\u5ba2\u6237\u7aef\u5f53\u524d\u7528\u6237\u5c1a\u672a\u6388\u6743\u5219\u91cd\u5b9a\u5411\u81f3\u6388\u6743\u786e\u8ba4\u9875\u9762\uff1b\u6388\u6743\u5b8c\u6210\u540e\u8bbe\u5907\u901a\u8fc7\u8bbe\u5907\u7801\u6362\u53d6token\uff0c\u8bbe\u5907\u4e00\u822c\u662f\u5728\u7ed9\u51fa\u7528\u6237\u9a8c\u8bc1\u5730\u5740\u540e\u8f6e\u8bad\u643a\u5e26\u8bbe\u5907\u7801\u8bbf\u95ee",(0,r.jsx)(n.code,{children:"/oauth2/token"}),'\u63a5\u53e3\uff0c\u5982\u679c\u7528\u6237\u5c1a\u672a\u9a8c\u8bc1\u65f6\u8bbf\u95ee\u5219\u4f1a\u54cd\u5e94"authorization_pending"\uff0c\u8be6\u89c1\uff1a',(0,r.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc8628#section-3.5",children:"rfc8628#section-3.5"})]}),"\n",(0,r.jsxs)(n.h4,{id:"1-\u8bbe\u5907\u53d1\u8d77\u6388\u6743\u8bf7\u6c42\u643a\u5e26\u8981\u6c42\u7684\u53c2\u6570\u8bf7\u6c42oauth2device_authorization\u63a5\u53e3",children:["1. \u8bbe\u5907\u53d1\u8d77\u6388\u6743\u8bf7\u6c42\uff0c\u643a\u5e26\u8981\u6c42\u7684\u53c2\u6570\u8bf7\u6c42",(0,r.jsx)(n.code,{children:"/oauth2/device_authorization"}),"\u63a5\u53e3"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(12973).Z+"",width:"1615",height:"886"})}),"\n",(0,r.jsx)(n.p,{children:"\u8bf7\u6c42\u53c2\u6570\u8bf4\u660e"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_id"}),": \u5ba2\u6237\u7aefid"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"scope"}),": \u8bbe\u5907\u8bf7\u6c42\u6388\u6743\u7684\u8303\u56f4"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u54cd\u5e94\u53c2\u6570\u8bf4\u660e"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user_code"}),": \u7528\u6237\u5728\u6d4f\u89c8\u5668\u6253\u5f00\u9a8c\u8bc1\u5730\u5740\u65f6\u8f93\u5165\u7684\u5185\u5bb9"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"device_code"}),"\uff1a\u8bbe\u5907\u7801\uff0c\u7528\u8be5\u503c\u6362\u53d6token"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"verification_uri_complete"}),"\uff1a\u7528\u6237\u5728\u6d4f\u89c8\u5668\u6253\u5f00\u7684\u9a8c\u8bc1\u5730\u5740\uff0c\u9875\u9762\u4f1a\u81ea\u52a8\u83b7\u53d6\u53c2\u6570\u5e76\u63d0\u4ea4\u8868\u5355"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"verification_uri"}),"\uff1a\u9a8c\u8bc1\u5730\u5740\uff0c\u9700\u8981\u7528\u6237\u8f93\u5165",(0,r.jsx)(n.code,{children:"user_code"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"expires_in"}),"\uff1a\u8fc7\u671f\u65f6\u95f4\uff0c\u5355\u4f4d\uff08\u79d2\uff09"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-\u8bbf\u95eeverification_uri\u6216\u8005verification_uri_complete",children:"2. \u8bbf\u95eeverification_uri\u6216\u8005verification_uri_complete"}),"\n",(0,r.jsx)(n.p,{children:"\u672a\u767b\u5f55\uff0c\u8df3\u8f6c\u81f3\u767b\u5f55\u9875"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(22168).Z+"",width:"1920",height:"955"})}),"\n",(0,r.jsx)(n.h4,{id:"3-\u8f93\u5165user_code\u5e76\u63d0\u4ea4",children:"3. \u8f93\u5165user_code\u5e76\u63d0\u4ea4"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(47068).Z+"",width:"1920",height:"955"})}),"\n",(0,r.jsx)(n.h4,{id:"4-\u91cd\u5b9a\u5411\u81f3\u7528\u6237\u6388\u6743\u786e\u8ba4\u9875\u9762",children:"4. \u91cd\u5b9a\u5411\u81f3\u7528\u6237\u6388\u6743\u786e\u8ba4\u9875\u9762"}),"\n",(0,r.jsx)(n.p,{children:"\u8be5\u5ba2\u6237\u7aef\u7528\u6237\u5c1a\u672a\u786e\u8ba4\u8fc7\uff0c\u91cd\u5b9a\u5411\u81f3\u6388\u6743\u786e\u8ba4\u9875\u9762\uff0c\u52fe\u9009scope\u540e\u63d0\u4ea4"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(68660).Z+"",width:"1920",height:"955"})}),"\n",(0,r.jsx)(n.h4,{id:"5-\u6388\u6743\u6210\u529f\u540e\u8df3\u8f6c\u81f3\u6210\u529f\u9875\u9762",children:"5. \u6388\u6743\u6210\u529f\u540e\u8df3\u8f6c\u81f3\u6210\u529f\u9875\u9762"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(42565).Z+"",width:"1920",height:"955"})}),"\n",(0,r.jsxs)(n.h4,{id:"6-\u8bbe\u5907\u53d1\u8d77\u8bf7\u6c42\u7528\u8bbe\u5907\u7801\u6362\u53d6token\u8bf7\u6c42oauth2token\u63a5\u53e3",children:["6. \u8bbe\u5907\u53d1\u8d77\u8bf7\u6c42\u7528\u8bbe\u5907\u7801\u6362\u53d6token\uff0c\u8bf7\u6c42",(0,r.jsx)(n.code,{children:"/oauth2/token"}),"\u63a5\u53e3"]}),"\n",(0,r.jsx)(n.p,{children:"\u8001\u6837\u5b50\uff0c\u4f7f\u7528postman\u6a21\u62df\u8bbe\u5907\u8bf7\u6c42"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(61815).Z+"",width:"1615",height:"886"})}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u91cc\u6211\u662f\u91cd\u65b0\u83b7\u53d6\u4e86\u4e00\u4e2a\uff0c\u4e4b\u524d\u7684\u8fc7\u671f\u4e86\uff0c\u4f7f\u7528\u8fc7\u671f\u8bbe\u5907\u7801\u8bf7\u6c42\u5982\u4e0b\u6240\u793a"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(68930).Z+"",width:"1615",height:"886"})}),"\n",(0,r.jsx)(n.p,{children:"\u7528\u6237\u5c1a\u672a\u9a8c\u8bc1\u65f6\u4f7f\u7528\u8bbe\u5907\u7801\u8bf7\u6c42\u5982\u4e0b"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img",src:t(89606).Z+"",width:"1615",height:"886"})}),"\n",(0,r.jsx)(n.p,{children:"\u53c2\u6570\u89e3\u91ca"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_id"}),"\uff1a\u5ba2\u6237\u7aefid"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"device_code"}),"\uff1a\u8bf7\u6c42",(0,r.jsx)(n.code,{children:"/oauth2/device_authorization"}),"\u63a5\u53e3\u8fd4\u56de\u7684\u8bbe\u5907\u7801(",(0,r.jsx)(n.code,{children:"device_code"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"grant_type"}),"\uff1a\u5728\u8bbe\u5907\u7801\u6a21\u5f0f\u56fa\u5b9a\u662f",(0,r.jsx)(n.code,{children:"urn:ietf:params:oauth:grant-type:device_code"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u81f3\u6b64\uff0c\u81ea\u5b9a\u4e49\u8bbe\u5907\u7801\u6d41\u7a0b\u7ed3\u675f"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"http://127.0.0.1:8080/activate/redirect\n\nhttp://127.0.0.1:5173/login?target=http%3A%2F%2F127.0.0.1%3A8080%2Factivate%2Fredirect&nonce=ee325c42-fe29-4e65-8591-5765be7da2a4\n\nhttp://127.0.0.1:8080/login\n\nhttp://127.0.0.1:8080/activate/redirect\n\nhttp://127.0.0.1:5173/activate?userCode&nonce=f007f0ed-19c3-48eb-af57-cd567ab9dcdc\n\nhttp://127.0.0.1:8080/oauth2/device_verification\n\nhttp://127.0.0.1:8080/oauth2/consent/redirect?scope=message.read&client_id=device-message-client&state=LQAw__LWaBe2vKj21_xCeLO4kW_ZPWb8cMEMbDoRDXM%3D&user_code=WVDX-RKPD\n\nhttp://127.0.0.1:5173/consent?scope=message.read&state=LQAw__LWaBe2vKj21_xCeLO4kW_ZPWb8cMEMbDoRDXM%3D&client_id=device-message-client&user_code=WVDX-RKPD&nonce=f007f0ed-19c3-48eb-af57-cd567ab9dcdc\n\n\nhttp://127.0.0.1:8080/oauth2/consent/parameters?scope=message.read&state=LQAw__LWaBe2vKj21_xCeLO4kW_ZPWb8cMEMbDoRDXM%3D&client_id=device-message-client&user_code=WVDX-RKPD&nonce=f007f0ed-19c3-48eb-af57-cd567ab9dcdc\n\nhttp://127.0.0.1:8080/oauth2/device_verification\n\nhttp://127.0.0.1:5173/activated\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\u6ce8\u610f:"})," \u6b64\u8ba4\u8bc1\u4f9d\u8d56\u4e8eSession\uff0c\u6240\u4ee5\u5168\u7a0b\u7684\u57df\u540d\uff08IP\uff09\u9700\u8981\u4fdd\u6301\u4e00\u81f4\uff0c\u6b64\u5904\u4e0d\u80fd\u4f7f\u7528\u5185\u7f51IP\u8bbf\u95ee\uff0c\u5982: 192.168.1.102"]}),"\n",(0,r.jsx)(n.h2,{id:"\u56db\u6700\u540e",children:"\u56db\u3001\u6700\u540e"}),"\n",(0,r.jsx)(n.p,{children:"\u56e0\u4e3a\u7406\u8bba\u90e8\u5206\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u5df2\u7ecf\u8bb2\u8fc7\u4e86\uff0c\u8fd9\u6b21\u5c31\u6ca1\u5199\u7406\u8bba\u4e86\uff0c\u76f4\u63a5\u8d34\u4e86\u4e00\u5927\u5806\u7684\u4ee3\u7801\uff0c\u672c\u6b21\u4ee3\u7801\u5199\u7684\u6bd4\u8f83\u4ed3\u4fc3\uff0c\u6d4b\u8bd5\u7684\u4e5f\u4e0d\u662f\u5f88\u5168\u9762\uff0c\u5982\u679c\u53d1\u73b0\u6709\u4ec0\u4e48\u95ee\u9898\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u3002"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://gitee.com/vains-Sofia/authorization-example",children:"\u4ee3\u7801\u4ed3\u5e93\u5730\u5740"})})]})}function d(e={}){const{wrapper:n}={...(0,i.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},50342:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/1-eb9d38c42e03c2c840cde1671733223e.png"},61815:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/10-edb8c45b54d8c71db44606f658397320.png"},68930:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/11-f91064f5cd15ca0b0817ead292a5128f.png"},89606:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/12-0c7af2fe6f5e07408ee176063fd136f6.png"},59071:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/2-b6e1cb1ff2746a7ade120a4b7a781bf4.png"},52004:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/3-72309986ddf887deb30b4eba13a9947a.png"},32556:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/4-0e2ac2486f50bad787c110735d14b3dc.png"},12973:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/5-eeec2d4ce13a139a1652fe4c0f394cfa.png"},22168:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/6-20f4b091a4d017dfabf611f11a5c10d9.png"},47068:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/7-e970d3c6bffb05f4cfe79dd5d9788626.png"},68660:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/8-c1eb9d1976363ab6475db5cd95d4ae68.png"},42565:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/9-67807c4d7206fc73db9d2fdbd6cc6679.png"},11151:(e,n,t)=>{t.d(n,{ah:()=>o});var r=t(67294);const i=r.createContext({});function o(e){const n=r.useContext(i);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);