"use strict";(self.webpackChunklight_docusaurus=self.webpackChunklight_docusaurus||[]).push([[1612],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,k=u["".concat(c,".").concat(m)]||u[m]||d[m]||l;return t?r.createElement(k,o(o({ref:n},s),{},{components:t})):r.createElement(k,o({ref:n},s))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},72234:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const l={},o=void 0,i={unversionedId:"quick-start/quick-start",id:"quick-start/quick-start",title:"quick-start",description:"- Offical",source:"@site/electron/quick-start/quick-start.md",sourceDirName:"quick-start",slug:"/quick-start/",permalink:"/light-docusaurus/electron/quick-start/",draft:!1,editUrl:"https://github.com/lorchr/light-docusaurus/tree/main/electron/quick-start/quick-start.md",tags:[],version:"current",lastUpdatedBy:"liuhui",lastUpdatedAt:1698312433,formattedLastUpdatedAt:"2023\u5e7410\u670826\u65e5",frontMatter:{},sidebar:"electron",previous:{title:"Quick Start",permalink:"/light-docusaurus/electron/category/quick-start"},next:{title:"vite-vue-ts-electron",permalink:"/light-docusaurus/electron/quick-start/vite-vue-ts-electron"}},c={},p=[{value:"\u524d\u63d0\u6761\u4ef6",id:"\u524d\u63d0\u6761\u4ef6",level:2},{value:"Hello World",id:"hello-world",level:2},{value:"1. \u521d\u59cb\u5316\u9879\u76ee",id:"1-\u521d\u59cb\u5316\u9879\u76ee",level:3},{value:"2. \u5b89\u88c5Electron",id:"2-\u5b89\u88c5electron",level:3},{value:"3. \u7f16\u5199\u5165\u53e3\u7c7bmain.js\u53ca\u9875\u9762index.html",id:"3-\u7f16\u5199\u5165\u53e3\u7c7bmainjs\u53ca\u9875\u9762indexhtml",level:3},{value:"4. \u8fd0\u884c\u9879\u76ee",id:"4-\u8fd0\u884c\u9879\u76ee",level:3},{value:"5. \u6253\u5305",id:"5-\u6253\u5305",level:3}],s={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.electronjs.org/"},"Offical")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/electron/electron"},"Github")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.electronjs.org/zh/docs/latest/"},"Offical Document")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.electronjs.org/zh/docs/latest/api/app"},"Offical API Document")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.electronjs.org/zh/docs/latest/tutorial/quick-start"},"Quick Start"))),(0,a.kt)("h2",{id:"\u524d\u63d0\u6761\u4ef6"},"\u524d\u63d0\u6761\u4ef6"),(0,a.kt)("p",null,"\u9700\u8981\u6709",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Node.js"),"\u73af\u5883"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# \u5efa\u8baeNode\u7248\u672c\u572812\u4ee5\u4e0a\nnode -v\n\nnpm -v\n\n# \u914d\u7f6e\u56fd\u5185\u955c\u50cf\u6e90\uff0c\u5426\u5219\u5bb9\u6613\u5b89\u88c5\u5931\u8d25\nnpm config set ELECTRON_MIRROR=https://npmmirror.com/mirrors/electron/\n")),(0,a.kt)("h2",{id:"hello-world"},"Hello World"),(0,a.kt)("h3",{id:"1-\u521d\u59cb\u5316\u9879\u76ee"},"1. \u521d\u59cb\u5316\u9879\u76ee"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir my-electron-app && cd my-electron-app\nnpm init -y\n")),(0,a.kt)("p",null,"init\u521d\u59cb\u5316\u547d\u4ee4\u4f1a\u63d0\u793a\u60a8\u5728\u9879\u76ee\u521d\u59cb\u5316\u914d\u7f6e\u4e2d\u8bbe\u7f6e\u4e00\u4e9b\u503c \u4e3a\u672c\u6559\u7a0b\u7684\u76ee\u7684\uff0c\u6709\u51e0\u6761\u89c4\u5219\u9700\u8981\u9075\u5faa\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"entry point \u5e94\u4e3a main.js."),(0,a.kt)("li",{parentName:"ul"},"author \u4e0e description \u53ef\u4e3a\u4efb\u610f\u503c\uff0c\u4f46\u5bf9\u4e8e",(0,a.kt)("a",{parentName:"li",href:"https://www.electronjs.org/zh/docs/latest/tutorial/quick-start#package-and-distribute-your-application"},"\u5e94\u7528\u6253\u5305"),"\u662f\u5fc5\u586b\u9879\u3002\n\u4f60\u7684 package.json \u6587\u4ef6\u5e94\u8be5\u50cf\u8fd9\u6837\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-electron-app",\n  "version": "1.0.0",\n  "description": "Hello World!",\n  "main": "main.js",\n  "author": "Lorch",\n  "license": "MIT"\n}\n')),(0,a.kt)("h3",{id:"2-\u5b89\u88c5electron"},"2. ",(0,a.kt)("a",{parentName:"h3",href:"https://www.electronjs.org/zh/docs/latest/tutorial/installation"},"\u5b89\u88c5Electron")),(0,a.kt)("p",null,"\u7136\u540e\uff0c\u5c06 electron \u5305\u5b89\u88c5\u5230\u5e94\u7528\u7684\u5f00\u53d1\u4f9d\u8d56\u4e2d\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev electron\n")),(0,a.kt)("p",null,"\u5728package.json\u4e2d\u589e\u52a0start\u547d\u4ee4"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "start": "electron ."\n  }\n}\n')),(0,a.kt)("p",null,"\u6700\u7ec8\u7684package.json\u957f\u8fd9\u6837"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-electron-app",\n  "version": "1.0.0",\n  "description": "Hello World",\n  "main": "main.js",\n  "author": "Lorch",\n  "license": "MIT",\n  "scripts": {\n    "start": "electron .",\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "devDependencies": {\n    "electron": "^25.2.0"\n  }\n}\n')),(0,a.kt)("h3",{id:"3-\u7f16\u5199\u5165\u53e3\u7c7bmainjs\u53ca\u9875\u9762indexhtml"},"3. \u7f16\u5199\u5165\u53e3\u7c7bmain.js\u53ca\u9875\u9762index.html"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"main.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// main.js\n\n// electron \u6a21\u5757\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u5e94\u7528\u7684\u751f\u547d\u5468\u671f\u548c\u521b\u5efa\u539f\u751f\u6d4f\u89c8\u7a97\u53e3\nconst { app, BrowserWindow } = require('electron')\nconst path = require('path')\n\nconst createWindow = () => {\n  // \u521b\u5efa\u6d4f\u89c8\u7a97\u53e3\n  const mainWindow = new BrowserWindow({\n    width: 800,\n    height: 600,\n    webPreferences: {\n      preload: path.join(__dirname, 'preload.js')\n    }\n  })\n\n  // \u52a0\u8f7d index.html\n  mainWindow.loadFile('index.html')\n\n  // \u6253\u5f00\u5f00\u53d1\u5de5\u5177\n  // mainWindow.webContents.openDevTools()\n}\n\n// \u8fd9\u6bb5\u7a0b\u5e8f\u5c06\u4f1a\u5728 Electron \u7ed3\u675f\u521d\u59cb\u5316\n// \u548c\u521b\u5efa\u6d4f\u89c8\u5668\u7a97\u53e3\u7684\u65f6\u5019\u8c03\u7528\n// \u90e8\u5206 API \u5728 ready \u4e8b\u4ef6\u89e6\u53d1\u540e\u624d\u80fd\u4f7f\u7528\u3002\napp.whenReady().then(() => {\n  createWindow()\n\n  app.on('activate', () => {\n    // \u5728 macOS \u7cfb\u7edf\u5185, \u5982\u679c\u6ca1\u6709\u5df2\u5f00\u542f\u7684\u5e94\u7528\u7a97\u53e3\n    // \u70b9\u51fb\u6258\u76d8\u56fe\u6807\u65f6\u901a\u5e38\u4f1a\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7a97\u53e3\n    if (BrowserWindow.getAllWindows().length === 0) createWindow()\n  })\n})\n\n// \u9664\u4e86 macOS \u5916\uff0c\u5f53\u6240\u6709\u7a97\u53e3\u90fd\u88ab\u5173\u95ed\u7684\u65f6\u5019\u9000\u51fa\u7a0b\u5e8f\u3002 \u56e0\u6b64, \u901a\u5e38\n// \u5bf9\u5e94\u7528\u7a0b\u5e8f\u548c\u5b83\u4eec\u7684\u83dc\u5355\u680f\u6765\u8bf4\u5e94\u8be5\u65f6\u523b\u4fdd\u6301\u6fc0\u6d3b\u72b6\u6001, \n// \u76f4\u5230\u7528\u6237\u4f7f\u7528 Cmd + Q \u660e\u786e\u9000\u51fa\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') app.quit()\n})\n\n// \u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u4f60\u53ef\u4ee5\u5f15\u5165\u6240\u6709\u7684\u4e3b\u8fdb\u7a0b\u4ee3\u7801\n// \u4e5f\u53ef\u4ee5\u62c6\u5206\u6210\u51e0\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u7528 require \u5bfc\u5165\u3002\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"preload.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// preload.js\n\n// \u6240\u6709\u7684 Node.js API\u63a5\u53e3 \u90fd\u53ef\u4ee5\u5728 preload \u8fdb\u7a0b\u4e2d\u88ab\u8c03\u7528.\n// \u5b83\u62e5\u6709\u4e0eChrome\u6269\u5c55\u4e00\u6837\u7684\u6c99\u76d2\u3002\nwindow.addEventListener('DOMContentLoaded', () => {\n  const replaceText = (selector, text) => {\n    const element = document.getElementById(selector)\n    if (element) element.innerText = text\n  }\n\n  for (const dependency of ['chrome', 'node', 'electron']) {\n    replaceText(`${dependency}-version`, process.versions[dependency])\n  }\n})\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"index.html")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!--index.html--\x3e\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="UTF-8">\n    \x3c!-- https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP --\x3e\n    <meta http-equiv="Content-Security-Policy" content="default-src \'self\'; script-src \'self\'">\n    <title>\u4f60\u597d!</title>\n  </head>\n  <body>\n    <h1>\u4f60\u597d!</h1>\n    \u6211\u4eec\u6b63\u5728\u4f7f\u7528 Node.js <span id="node-version"></span>,\n    Chromium <span id="chrome-version"></span>,\n    \u548c Electron <span id="electron-version"></span>.\n\n    <\uff01-- \u60a8\u4e5f\u53ef\u4ee5\u6b64\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u5176\u4ed6\u6587\u4ef6 --\x3e\n    <script src="./renderer.js"><\/script>\n  </body>\n</html>\n')),(0,a.kt)("h3",{id:"4-\u8fd0\u884c\u9879\u76ee"},"4. \u8fd0\u884c\u9879\u76ee"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm start\n")),(0,a.kt)("h3",{id:"5-\u6253\u5305"},"5. \u6253\u5305"),(0,a.kt)("p",null,"\u6700\u5feb\u6377\u7684\u6253\u5305\u65b9\u5f0f\u662f\u4f7f\u7528 ",(0,a.kt)("a",{parentName:"p",href:"https://www.electronforge.io/"},"Electron Forge"),"\u3002"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},'\u5c06 Electron Forge \u6dfb\u52a0\u5230\u60a8\u5e94\u7528\u7684\u5f00\u53d1\u4f9d\u8d56\u4e2d\uff0c\u5e76\u4f7f\u7528\u5176"import"\u547d\u4ee4\u8bbe\u7f6e Forge \u7684\u811a\u624b\u67b6\uff1a')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'npm install --save-dev @electron-forge/cli\nnpx electron-forge import\n\n\u2714 Checking your system\n\u2714 Initializing Git Repository\n\u2714 Writing modified package.json file\n\u2714 Installing dependencies\n\u2714 Writing modified package.json file\n\u2714 Fixing .gitignore\n\nWe have ATTEMPTED to convert your app to be in a format that electron-forge understands.\n\nThanks for using "electron-forge"!!!\n')),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u4f7f\u7528 Forge \u7684 make \u547d\u4ee4\u6765\u521b\u5efa\u53ef\u5206\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm run make\n\n> my-electron-app@1.0.0 make /my-electron-app\n> electron-forge make\n\n\u2714 Checking your system\n\u2714 Resolving Forge Config\nWe need to package your application before we can make it\n\u2714 Preparing to Package Application for arch: x64\n\u2714 Preparing native dependencies\n\u2714 Packaging Application\nMaking for the following targets: zip\n\u2714 Making for target: zip - On platform: darwin - For arch: x64\n")),(0,a.kt)("p",null,"Electron-forge \u4f1a\u521b\u5efa out \u6587\u4ef6\u5939\uff0c\u60a8\u7684\u8f6f\u4ef6\u5305\u5c06\u5728\u90a3\u91cc\u627e\u5230\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"// Example for macOS\nout/\n\u251c\u2500\u2500 out/make/zip/darwin/x64/my-electron-app-darwin-x64-1.0.0.zip\n\u251c\u2500\u2500 ...\n\u2514\u2500\u2500 out/my-electron-app-darwin-x64/my-electron-app.app/Contents/MacOS/my-electron-app\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")," \u5b89\u88c5",(0,a.kt)("inlineCode",{parentName:"p"},"Electron Forge"),"\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u5f02\u5e38\u5bfc\u81f4\u5931\u8d25\uff0c\u5927\u6982\u7387\u662fNode\u7248\u672c\u4e0d\u5339\u914d\u5bfc\u81f4\u7684\uff0c\u6ce8\u610f\u9519\u8bef\u65e5\u5fd7\u4fe1\u606f"))}d.isMDXComponent=!0}}]);